steal(function() {
	System.import('appdev').then(function() {
		steal.import('appdev/model/model').then(function() {

			// Namespacing conventions:
			// AD.Model.Base.extend("[application].[Model]" , { static }, {instance} );  --> Object
			AD.Model.Base.extend("opstools.<%= appName %>.<%= objectName %>", {
				findAll: 'GET /<%= modelURL %>',
				findOne: 'GET /<%= modelURL %>/{id}',
				create: 'POST /<%= modelURL %>',
				update: 'PUT /<%= modelURL %>/{id}',
				destroy: 'DELETE /<%= modelURL %>/{id}',
				describe: function() { 
				    return {
				        <% columns.forEach(function(c) { %>
				            '<%= c.name %>': '<%= c.type %>',
				        <% }) %>
				    };
				},
				associations: {
				    <% associations.forEach(function(a) { %>
				        '<%= a.name %>': 'opstools.<%= appName %>.<%= a.model %>',
				    <% }) %>
				},
				multilingualFields: [
				    <% multilingualFields.forEach(function(f) { %>
				        '<%= f.name %>',
				    <% }) %>
				],
				// validations: {
				//     "role_label" : [ 'notEmpty' ],
				//     "role_description" : [ 'notEmpty' ]
				// },
				fieldId: 'id',
				fieldLabel: '<%= fieldLabel %>'
			}, {
				// model: function() {
				//     return AD.Model.get('opstools.<%= appName %>.<%= objectName %>'); //AD.models.<%= appName %>.<%= objectName %>;
				// },
				// getID: function() {
				//     return this.attr(this.model().fieldId) || 'unknown id field';
				// },
				// getLabel: function() {
				//     return this.attr(this.model().fieldLabel) || 'unknown label field';
				// }
			});
		});
	});
});