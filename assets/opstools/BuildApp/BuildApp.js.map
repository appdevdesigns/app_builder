{"version":3,"sources":["webpack:///BuildApp.js","webpack:///webpack/bootstrap 189d30a9bb3eaf49680c","webpack:///./assets/opstools/AppBuilder/OP/OP.js","webpack:///./assets/opstools/AppBuilder/classes/ABApplication.js","webpack:///./assets/opstools/AppBuilder/OP/config/config.js","webpack:///./assets/opstools/AppBuilder/OP/form.js","webpack:///./assets/opstools/AppBuilder/OP/model.js","webpack:///./assets/opstools/AppBuilder/OP/multilingual.js","webpack:///./assets/opstools/AppBuilder/OP/util.js","webpack:///./assets/opstools/AppBuilder/OP/config/configDesktop.js","webpack:///./assets/opstools/AppBuilder/OP/config/configMobile.js","webpack:///./assets/opstools/AppBuilder/classes/ABFieldManager.js","webpack:///./assets/opstools/AppBuilder/classes/dataFields/ABField.js","webpack:///./assets/opstools/AppBuilder/components/ab.js","webpack:///./assets/opstools/AppBuilder/AppBuilder.js","webpack:///./assets/opstools/AppBuilder/classes/ABObject.js","webpack:///./assets/opstools/AppBuilder/classes/dataFields/ABFieldComponent.js","webpack:///./assets/opstools/AppBuilder/classes/dataFields/ABFieldString.js","webpack:///./assets/opstools/AppBuilder/components/ab_choose.js","webpack:///./assets/opstools/AppBuilder/components/ab_choose_form.js","webpack:///./assets/opstools/AppBuilder/components/ab_choose_list.js","webpack:///./assets/opstools/AppBuilder/components/ab_choose_list_menu.js","webpack:///./assets/opstools/AppBuilder/components/ab_work.js","webpack:///./assets/opstools/AppBuilder/components/ab_work_interface.js","webpack:///./assets/opstools/AppBuilder/components/ab_work_object.js","webpack:///./assets/opstools/AppBuilder/components/ab_work_object_list.js","webpack:///./assets/opstools/AppBuilder/components/ab_work_object_list_newObject.js","webpack:///./assets/opstools/AppBuilder/components/ab_work_object_list_newObject_blank.js","webpack:///./assets/opstools/AppBuilder/components/ab_work_object_workspace.js","webpack:///./assets/opstools/AppBuilder/components/ab_work_object_workspace_datatable.js","webpack:///./assets/opstools/AppBuilder/components/ab_work_object_workspace_popupDefineLabel.js","webpack:///./assets/opstools/AppBuilder/components/ab_work_object_workspace_popupHeaderEditMenu.js","webpack:///./assets/opstools/AppBuilder/components/ab_work_object_workspace_popupHideFields.js","webpack:///./assets/opstools/AppBuilder/components/ab_work_object_workspace_popupNewDataField.js","webpack:///./assets/opstools/AppBuilder/data/ABApplication.js","webpack:///./assets/opstools/AppBuilder/webix_custom_components/editlist.js","webpack:///./assets/opstools/AppBuilder/webix_custom_components/edittree.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/style-loader/fixUrls.js","webpack:///./assets/opstools/AppBuilder/AppBuilder.css","webpack:///./~/style-loader/addStyles.js","webpack:///./assets/opstools/AppBuilder/AppBuilder.css?8d71"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","OP","_interopRequireDefault","obj","default","_form","_form2","_multilingual","_multilingual2","_model","_model2","_util","_util2","_config","_config2","window","Component","CustomComponent","extend","key","fn","App","_newApp","component","actions","a","uuid","webix","uid","config","custom","labels","unique","this","Dialog","AD","op","Error","error","Form","Multilingual","Model","Util","_classCallCheck","instance","Constructor","TypeError","L","altText","lang","label","getLabel","toArray","DC","ary","id","getFirstId","element","getItem","push","getNextId","_createClass","defineProperties","target","props","length","descriptor","writable","protoProps","staticProps","_ABObject","_ABObject2","_AllApplications","ABApplication","attributes","_this","json","role","translate","fieldsMultilingual","newObjects","objects","forEach","_objects","Models","_this2","destroy","then","remove","_this3","values","toObj","update","updateItem","create","data","add","unTranslate","currObjects","permItems","_this4","Promise","resolve","reject","comm","service","put","url","roles","fail","done","_this5","_this6","post","_this7","delete","filter","save","ModelApplication","findAll","catch","newApp","app","errors","arrayApplications","nameMatch","trim","replace","toLowerCase","matchingApps","validationError","message","_configDesktop","_configDesktop2","_configMobile","_configMobile2","innerWidth","errorObj","invalidAttributes","attr","isValidationError","form","hasFocused","raw","err","code","attrs","wasForm","elements","msg","markInvalid","join","focus","_restURLs","findOne","_Models","OPModel","staticData","instanceData","r","cond","verb","params","Array","isArray","newList","dc","DataCollection","on","onAfterDelete","nURI","k","oURI","util","string","replaceAll","item","parts","split","uri","pop","restURL","u","nameSpace","objectName","findObject","baseObj","nameList","curr","console","fields","translations","currLanguage","currentLanguage","t","language_code","f","foundOne","trans","field","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","smallSpacer","mediumSpacer","largeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthLarge","labelWidthCheckbox","hideMobile","_ABFieldString","_ABFieldString2","Fields","defaults","type","allFields","newField","ABField","fieldDefaults","fromValues","icon","menuName","description","columnName","fieldSave","settings","fieldType","fieldIcon","showIcon","parseInt","isObjectWorkspace","header","ids","defaultValues","$$","setValue","_logic","Field","onChange","newVal","oldVal","getValue","labelOnChange","rows","view","dataFieldHeaderLabel","placeholder","dataFieldHeaderLabelPlaceholder","labelWidth","css","dataFieldColumnName","dataFieldColumnNamePlaceholder","fieldDescription","align","labelRight","dataFieldShowIcon","_edittree","_edittree2","_editlist","_editlist2","_AppBuilder","edit","export","formName","import","ok","cancel","yes","no","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","AppChooser","AppWorkspace","ui","borderless","animate","init","transitionApplicationChooser","adjust","Control","OpsTool","options","self","templateDOM","resize_notification","tool","_super","webixUiId","loadingScreen","syncButton","initDOM","initWebixUI","cb","can","fragment","html","AppBuilder","container","resize","height","appListDom","$","width","parent","computedHeight","log","mh","_ABFieldManager","_ABFieldManager2","ABObject","application","labelFormat","isImported","urlPath","importFromObject","objectWorkspace","hiddenFields","newFields","fieldNew","_fields","objectSave","currFields","headers","idLookup","columnHeader","h","workspaceHiddenFields","hfID","hidden","set","_ABField","_ABField2","ABFieldComponent","rules","logic","idBase","e","_ui","autoheight","isNotEmpty","_init","clear","clearEditor","warn","clearValidation","isValid","validate","populate","editorPopulate","show","getValues","editorValues","commonUI","definitionEditor","concat","_component","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","constructor","setPrototypeOf","__proto__","_get","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getPrototypeOf","_ABField3","_ABFieldComponent","_ABFieldComponent2","ABFieldStringDefaults","ABFieldStringComponent","textDefault","supportMultilingual","ABFieldString","editor","sort","AppList","AppForm","cells","_ABApplication","_ABApplication2","formHeader","placeholderName","placeholderDescription","formDescription","sectionPermission","permissionHeader","createNewRole","invalidName","duplicateName","common","appFormPermissionList","appFormCreateRoleButton","saveButton","responsive","cols","maxWidth","minWidth","responsiveCell","maxHeight","fillspace","margin","required","newValue","oldValue","permissionRenameRole","labelAlign","template","autowidth","offIcon","onIcon","onItemClick","createRoleButtonClick","markCheckbox","node","permissionClick","click","buttonSaveClick","FormFields","ProgressBar","applicationCreate","async","waterfall","result","createdApp","permissionSave","formReady","text","buttonSaveEnable","transitionApplicationList","applicationUpdate","Application","formValues","next","app_role","buttonSaveDisable","formBusy","updateApp","getSelectedApplication","formValidate","disable","enable","formReset","appName","permissionAddNew","permissionRemoveNew","showProgress","formPopulate","hideProgress","permissionName","isApplicationRole","selectedIds","getSelectedId","select","List","isSelected","unselect","isNaN","permissionPopulate","PermForm","parsedRoles","map","available_roles","getPermissions","selected_role_ids","b","clearAll","parse","indexOf","markCreateButton","find","perm","editItem","saveRoleTasks","appRole","selectedPerms","getSelectedItem","createPermission","deletePermission","appRoleItem","assignPermissions","series","results","transitionApplicationForm","unselectApplication","title","createNew","noApplication","uploader","list","toolBar","buttonCreateNewApplication","MenuComponent","PopupMenu","hide","upload","multiple","autosend","onAfterFileAdd","onFileUpload","response","onFileUploadError","details","templateListItem","iconGear","onClick","ab-app-list-item","ev","trg","onClickListItem","ab-app-list-edit","onClickListEdit","_data","busy","loadData","allApplications","ready","attachEvent","index","refreshOverlay","listApplications","refreshList","selectedApp","transitionWorkspace","errorMessage","Alert","appList","count","hideOverlay","showOverlay","reset","unselectAll","unsync","sync","refresh","_templateListItem","OverlayBox","deleteApplication","menu","confirmDeleteTitle","confirmDeleteMessage","head","body","command","datatype","timestamp","textContent","ConfirmDelete","callback","location","assign","backToApplication","synchronize","objectTitle","interfaceTitle","buttonSync","labelAppName","tabbar","tab_object","tab_interface","workspace","AppObjectWorkspace","AppInterfaceWorkspace","alrign","multiview","idNew","idOld","tabSwitch","applicationInit","define","idTab","applicationLoad","ObjectList","ObjectWorkspace","clearObjectWorkspace","addNew","buttonNew","editlist","editaction","editable","editValue","onAfterRender","onAfterSelect","selectObject","onBeforeEditStop","state","onAfterEditStop","ignoreUpdate","ab-object-list-edit","clickEditMenu","clickNewObject","listBusy","CurrentApplication","objectList","syncNumberRefresh","listReady","PopupNewObjectComponent","populateObjectWorkspace","callbackNewObject","newObject","PopupNewObject","onDone","getSelectedObject","BlankTab","position","modal","selectNewObject","callbacks","ourCBs","onCancel","onSave","currentApplication","test","objectNew","validationErrors","buttonSave","buttonCancel","formClear","addNewRow","hideFields","filterFields","sortFields","frozenColumns","defineLabel","permission","addFields","buttonAddField","buttonExport","buttonFieldsVisible","buttonFilter","buttonFrozen","buttonLabel","buttonRowNew","buttonSort","datatable","toolbar","noSelection","selectedObject","DataTable","PopupDefineLabelComponent","PopupDefineLabel","PopupNewDataFieldComponent","PopupHideFieldComponent","PopupHideField","badge","toolbarFieldsVisible","$view","toolbarFilter","toolbarSort","toolbarFrozen","toolbarDefineLabel","toolbarPermission","toolbarAddFields","toolbarButtonExport","rowAdd","onEditorMenu","callbackHeaderEditorMenu","callbackDefineLabel","callbackAddFields","callbackFieldsVisible","CurrentObject","action","Confirm","isOK","populateObjectPopupAddDataField","objectLoad","resizeColumn","resizeRow","prerender","fixedRowHeight","dragColumn","onBeforeSelect","preserve","prevent","onCheck","row","col","val","onColumnResize","newWidth","oldWidth","user_action","onBeforeColumnDrag","sourceId","event","onBeforeColumnDrop","targetId","onAfterColumnDrop","onAfterColumnShow","onAfterColumnHide","onHeaderClick","EditField","EditNode","callbackHeaderEdit","PopupHeaderEdit","column","PopupHeaderEditComponent","columnHeaders","refreshColumns","selectFieldToGenerate","labelFields","format","onShow","_currentObject","ButtonSave","each","RegExp","listFields","selectedItem","Format","hideField","filterField","sortField","editField","deleteField","menuItems","imported","listItems","showAll","hideAll","clickShowAll","clickHideAll","listItemClick","iconsReset","newHidden","fID","iconShow","iconHide","querySelector","style","visibility","getItemNode","chooseType","addNewField","types","editDefinitions","submenu","typeClick","preventDefault","onMenuItemClick","onBeforeShow","resetState","onHide","_objectHash","_componentHash","_componentsByType","_currentEditor","defaultEditorComponent","_editField","submenus","newEditorList","F","editorComponent","propertiesComponent","firstID","oldData","modeAdd","modeEdit","subMenuId","getSubMenu","useSockets","componentKey","protoUI","EditAbility","tree","cssWithMappingToString","useSourceMap","content","cssMapping","btoa","sourceMapping","toComment","sources","source","sourceRoot","sourceMap","unescape","encodeURIComponent","JSON","stringify","toString","mediaQuery","alreadyImportedModules","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","unquotedOrigUrl","$1","newUrl","addStylesToDom","styles","domStyle","stylesInDom","refs","j","addStyle","listToStyles","newStyles","media","part","insertStyleElement","styleElement","styleTarget","getElement","insertInto","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","removeStyleElement","parentNode","removeChild","idx","splice","createStyleElement","document","createElement","attachTagAttrs","createLinkElement","linkElement","rel","keys","setAttribute","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","updateLink","href","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","autoFixUrls","convertToAbsoluteUrls","fixUrls","blob","oldSrc","isOldIE","memo","apply","arguments","all","atob","selector","DEBUG","mayRemove","textStore","replacement","Boolean","locals"],"mappings":"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","file":"BuildApp.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 12);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _form = __webpack_require__(3);\n\nvar _form2 = _interopRequireDefault(_form);\n\nvar _multilingual = __webpack_require__(5);\n\nvar _multilingual2 = _interopRequireDefault(_multilingual);\n\nvar _model = __webpack_require__(4);\n\nvar _model2 = _interopRequireDefault(_model);\n\nvar _util = __webpack_require__(6);\n\nvar _util2 = _interopRequireDefault(_util);\n\nvar _config = __webpack_require__(2);\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nwindow.OP = {};\n\n// OP.xxxx      These properties hold the defined Class/Controller/Model definitions\n//              for our loaded projects.\n// OP.UI = {};    \t\t// webix UI definitions\n// OP.Logic = {}; \t\t// logic references for webix application\n\n/**\n * @class AD_Client\n * @parent index 4\n *\n * ###Client side global OpsPortal (OP) namespace.\n *\n * This file defines standard functions and calls for OpsPortal\n * objects on the client side.\n */\n\n// Create our OP  Namespace only if it hasn't been created already\n\n//// TODO: how to disable 'use strict'?  or perform this check without an error\n//// in 'use strict' ?\n\n// if (!window.OP) {\nOP.Component = {}; // our defined components\n\nOP.CustomComponent = {}; // separate holder for Webix Custom Components\n\n\n// OP.UI.extend = function(key, definition) {\n// \tOP.UI[key] = definition;\n// }\n\nOP.Component.extend = function (key, fn) {\n\tOP.Component[key] = function (App) {\n\n\t\t//// TODO: verify App has proper structure:\n\t\tif (!App) {\n\t\t\tApp = OP.Component._newApp();\n\t\t}\n\n\t\t// make an instance of the component.\n\t\tvar component = fn(App);\n\n\t\t// transfer to App, any actions in the component:\n\t\tif (component.actions) {\n\t\t\tfor (var a in component.actions) {\n\t\t\t\tApp.actions[a] = component.actions[a];\n\t\t\t}\n\t\t}\n\n\t\treturn component;\n\t};\n};\n\nOP.Component._newApp = function () {\n\treturn {\n\n\t\tuuid: webix.uid(),\n\n\t\t/*\n   * actions:\n   * a hash of exposed application methods that are shared among our\n   * components, so one component can invoke an action that updates\n   * another component.\n   */\n\t\tactions: {},\n\n\t\t/*\n   * config\n   * webix configuration settings for our current browser\n   */\n\t\tconfig: _config2.default.config(),\n\n\t\t/*\n   * custom\n   * a collection of custom components for this App Instance.\n   */\n\t\tcustom: {},\n\n\t\t/*\n   * labels\n   * a collection of labels that are common for the Application.\n   */\n\t\tlabels: {},\n\n\t\t/*\n   * unique()\n   * A function that returns a globally unique Key.\n   * @param {string} key   The key to modify and return.\n   * @return {string}\n   */\n\t\tunique: function unique(key) {\n\t\t\treturn key + this.uuid;\n\t\t}\n\n\t};\n};\n\nOP.CustomComponent.extend = function (key, fn) {\n\tOP.CustomComponent[key] = function (App, key) {\n\n\t\tif (!App) {\n\t\t\tApp = OP.Component._newApp();\n\t\t}\n\n\t\t// make an instance of the component.\n\t\treturn fn(App, key);\n\t};\n};\n\nOP.Dialog = AD.op.Dialog;\n\nOP.Error = AD.error;\n\nOP.Form = _form2.default;\n\nOP.Multilingual = _multilingual2.default;\nOP.Model = _model2.default;\n\nOP.Util = _util2.default;\n\nexports.default = OP;\n// }\n\n\n// import \"./model.js\"\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n// import OP from \"OP\"\n\n\n__webpack_require__(32);\n\nvar _ABObject = __webpack_require__(13);\n\nvar _ABObject2 = _interopRequireDefault(_ABObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _AllApplications = [];\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nfunction toDC(data) {\n\treturn new webix.DataCollection({\n\t\tdata: data\n\n\t});\n}\n\nfunction toArray(DC) {\n\tvar ary = [];\n\n\tvar id = DC.getFirstId();\n\twhile (id) {\n\t\tvar element = DC.getItem(id);\n\t\tary.push(element);\n\t\tid = DC.getNextId(id);\n\t}\n\n\treturn ary;\n}\n\nvar ABApplication = function () {\n\tfunction ABApplication(attributes) {\n\t\tvar _this = this;\n\n\t\t_classCallCheck(this, ABApplication);\n\n\t\t// ABApplication Attributes\n\t\tthis.id = attributes.id;\n\t\tthis.json = attributes.json;\n\t\tthis.name = attributes.name || this.json.name || \"\";\n\t\tthis.role = attributes.role;\n\n\t\t// multilingual fields: label, description\n\t\tOP.Multilingual.translate(this, this.json, ABApplication.fieldsMultilingual());\n\n\t\t// import all our ABObjects\n\t\tvar newObjects = [];\n\t\t(attributes.json.objects || []).forEach(function (obj) {\n\t\t\tnewObjects.push(new _ABObject2.default(obj, _this));\n\t\t});\n\t\tthis._objects = newObjects;\n\n\t\t// import all our ABViews\n\n\n\t\t// instance keeps a link to our Model for .save() and .destroy();\n\t\tthis.Model = OP.Model.get('opstools.BuildApp.ABApplication');\n\t\tthis.Model.Models(ABApplication);\n\t}\n\n\t///\n\t/// Static Methods\n\t///\n\t/// Available to the Class level object.  These methods are not dependent\n\t/// on the instance values of the Application.\n\t///\n\n\n\t/**\n  * @function allApplications\n  *\n  * return a DataCollection that contains all the ABApplications this user\n  * can see (based upon server side permissions);\n  *\n  * NOTE: this manages the results in the _AllApplications dataCollection\n  * store.  Any future .create(), .destroy(), .updates() modify values in\n  * that collection.\n  *\n  * Any webix ui components synced to that collection will be automatically\n  * updated.\n  *\n  * @return {Promise}\n  */\n\n\n\t_createClass(ABApplication, [{\n\t\tkey: \"destroy\",\n\n\n\t\t///\n\t\t/// Instance Methods\n\t\t///\n\n\n\t\t/// ABApplication data methods\n\n\n\t\t/**\n   * @method destroy()\n   *\n   * destroy the current instance of ABApplication\n   *\n   * also remove it from our _AllApplications\n   *\n   * @return {Promise}\n   */\n\t\tvalue: function destroy() {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (this.id) {\n\t\t\t\treturn this.Model.destroy(this.id).then(function () {\n\t\t\t\t\t_AllApplications.remove(_this2.id);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @method save()\n   *\n   * persist the current instance of ABApplication to the DB\n   *\n   * Also, keep the values in _AllApplications up to date.\n   *\n   * @return {Promise}\n   */\n\n\t}, {\n\t\tkey: \"save\",\n\t\tvalue: function save() {\n\t\t\tvar _this3 = this;\n\n\t\t\tvar values = this.toObj();\n\n\t\t\t// we already have an .id, so this must be an UPDATE\n\t\t\tif (values.id) {\n\n\t\t\t\treturn this.Model.update(values.id, values).then(function () {\n\t\t\t\t\t_AllApplications.updateItem(values.id, _this3);\n\t\t\t\t});\n\t\t\t} else {\n\n\t\t\t\t// must be a CREATE:\n\t\t\t\treturn this.Model.create(values).then(function (data) {\n\t\t\t\t\t_this3.id = data.id;\n\t\t\t\t\t_AllApplications.add(_this3, 0);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @method toObj()\n   *\n   * properly compile the current state of this ABApplication instance\n   * into the values needed for saving to the DB.\n   *\n   * Most of the instance data is stored in .json field, so be sure to\n   * update that from all the current values of our child fields.\n   *\n   * @return {json}\n   */\n\n\t}, {\n\t\tkey: \"toObj\",\n\t\tvalue: function toObj() {\n\n\t\t\tOP.Multilingual.unTranslate(this, this.json, ABApplication.fieldsMultilingual());\n\t\t\tthis.json.name = this.name;\n\n\t\t\t// for each Object: compile to json\n\t\t\tvar currObjects = [];\n\t\t\tthis._objects.forEach(function (obj) {\n\t\t\t\tcurrObjects.push(obj.toObj());\n\t\t\t});\n\t\t\tthis.json.objects = currObjects;\n\n\t\t\treturn {\n\t\t\t\tid: this.id,\n\t\t\t\tname: this.name,\n\t\t\t\tjson: this.json,\n\t\t\t\trole: this.role\n\t\t\t};\n\t\t}\n\n\t\t/// ABApplication Permission methods\n\n\n\t\t/**\n   * @method assignPermissions()\n   *\n   * Make sure the current ABApplication permissions match the given\n   * array of permissions.\n   *\n   * @param {array} permItems\tan array of role assignments that this\n   * \t\t\t\t\t\t\tABApplication should match.\n   * @return {Promise}\n   */\n\n\t}, {\n\t\tkey: \"assignPermissions\",\n\t\tvalue: function assignPermissions(permItems) {\n\t\t\tvar _this4 = this;\n\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tAD.comm.service.put({\n\t\t\t\t\turl: '/app_builder/' + _this4.id + '/role/assign',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\troles: permItems\n\t\t\t\t\t}\n\t\t\t\t}).fail(reject).done(resolve);\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * @method getPermissions()\n   *\n   * Return an array of role assignments that are currently assigned to this\n   * ABApplication.\n   *\n   * @return {Promise} \tresolve(list) : list {array} Role assignments\n   */\n\n\t}, {\n\t\tkey: \"getPermissions\",\n\t\tvalue: function getPermissions() {\n\t\t\tvar _this5 = this;\n\n\t\t\treturn new Promise(function (resolve, reject) {\n\n\t\t\t\tAD.comm.service.get({ url: '/app_builder/' + _this5.id + '/role' }).fail(reject).done(resolve);\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * @method createPermission()\n   *\n   * Create a Role in the system after the name of the current ABApplication.\n   *\n   * @return {Promise}\n   */\n\n\t}, {\n\t\tkey: \"createPermission\",\n\t\tvalue: function createPermission() {\n\t\t\tvar _this6 = this;\n\n\t\t\treturn new Promise(function (resolve, reject) {\n\n\t\t\t\t// TODO: need to take created role and store as : .json.applicationRole = role.id\n\n\t\t\t\tAD.comm.service.post({ url: '/app_builder/' + _this6.id + '/role' }).fail(reject).done(resolve);\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * @method deletePermission()\n   *\n   * Remove the Role in the system of the current ABApplication.\n   * (the one created by  .createPermission() )\n   *\n   * @return {Promise}\n   */\n\n\t}, {\n\t\tkey: \"deletePermission\",\n\t\tvalue: function deletePermission() {\n\t\t\tvar _this7 = this;\n\n\t\t\treturn new Promise(function (resolve, reject) {\n\n\t\t\t\t// TODO: need to remove created role from : .json.applicationRole\n\t\t\t\tAD.comm.service.delete({ url: '/app_builder/' + _this7.id + '/role' }).fail(reject).done(resolve);\n\t\t\t});\n\t\t}\n\n\t\t///\n\t\t/// Objects\n\t\t///\n\n\n\t\t/**\n   * @method objects()\n   *\n   * return an array of all the ABObjects for this ABApplication.\n   *\n   * @param {fn} filter  \ta filter fn to return a set of ABObjects that this fn\n   *\t\t\t\t\t\treturns true for.\n   * @return {array} \tarray of ABObject\n   */\n\n\t}, {\n\t\tkey: \"objects\",\n\t\tvalue: function objects(filter) {\n\n\t\t\tfilter = filter || function () {\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\treturn this._objects.filter(filter);\n\t\t}\n\n\t\t/**\n   * @method objectNew()\n   *\n   * return an instance of a new (unsaved) ABObject that is tied to this\n   * ABApplication.\n   *\n   * NOTE: this new object is not included in our this.objects until a .save()\n   * is performed on the object.\n   *\n   * @return {ABObject}\n   */\n\n\t}, {\n\t\tkey: \"objectNew\",\n\t\tvalue: function objectNew(values) {\n\t\t\treturn new _ABObject2.default(values, this);\n\t\t}\n\n\t\t/**\n   * @method objectSave()\n   *\n   * persist the current ABObject in our list of ._objects.\n   *\n   * @param {ABObject} object\n   * @return {Promise}\n   */\n\n\t}, {\n\t\tkey: \"objectSave\",\n\t\tvalue: function objectSave(object) {\n\t\t\tvar isIncluded = this.objects(function (o) {\n\t\t\t\treturn o.id == object.id;\n\t\t\t}).length > 0;\n\t\t\tif (!isIncluded) {\n\t\t\t\tthis._objects.push(object);\n\t\t\t}\n\n\t\t\treturn this.save();\n\t\t}\n\t}], [{\n\t\tkey: \"allApplications\",\n\t\tvalue: function allApplications() {\n\t\t\treturn new Promise(function (resolve, reject) {\n\n\t\t\t\tvar ModelApplication = OP.Model.get('opstools.BuildApp.ABApplication');\n\t\t\t\tModelApplication.Models(ABApplication); // set the Models  setting.\n\n\t\t\t\tModelApplication.findAll().then(function (data) {\n\n\t\t\t\t\t// NOTE: data is already a DataCollection from .findAll()\n\t\t\t\t\t_AllApplications = data;\n\n\t\t\t\t\tresolve(data);\n\t\t\t\t}).catch(reject);\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * @function create\n   *\n   * take the initial values and create an instance of ABApplication.\n   *\n   * @return {Promise}\n   */\n\n\t}, {\n\t\tkey: \"create\",\n\t\tvalue: function create(values) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\n\t\t\t\tvar newApp = {};\n\t\t\t\tOP.Multilingual.unTranslate(values, newApp, ABApplication.fieldsMultilingual());\n\t\t\t\tvalues.json = newApp;\n\t\t\t\tnewApp.name = values.name;\n\n\t\t\t\tvar ModelApplication = OP.Model.get('opstools.BuildApp.ABApplication');\n\t\t\t\tModelApplication.create(values).then(function (app) {\n\n\t\t\t\t\t// return an instance of ABApplication\n\t\t\t\t\tvar App = new ABApplication(app);\n\n\t\t\t\t\t_AllApplications.add(App, 0);\n\t\t\t\t\tresolve(App);\n\t\t\t\t}).catch(reject);\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * @method fieldsMultilingual()\n   *\n   * return an array of fields that are considered Multilingual labels for\n   * an ABApplication\n   *\n   * @return {array}\n   */\n\n\t}, {\n\t\tkey: \"fieldsMultilingual\",\n\t\tvalue: function fieldsMultilingual() {\n\t\t\treturn ['label', 'description'];\n\t\t}\n\n\t\t//// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n\t}, {\n\t\tkey: \"isValid\",\n\t\tvalue: function isValid(op, values) {\n\n\t\t\tvar errors = null;\n\n\t\t\t// during an ADD operation\n\t\t\tif (op == 'add') {\n\n\t\t\t\t// label/name must be unique:\n\t\t\t\tvar arrayApplications = toArray(_AllApplications);\n\n\t\t\t\tvar nameMatch = values.label.trim().replace(/ /g, '_').toLowerCase();\n\t\t\t\tvar matchingApps = arrayApplications.filter(function (app) {\n\t\t\t\t\treturn app.name.trim().toLowerCase() == nameMatch;\n\t\t\t\t});\n\t\t\t\tif (matchingApps && matchingApps.length > 0) {\n\n\t\t\t\t\terrors = OP.Form.validationError({\n\t\t\t\t\t\tname: 'label',\n\t\t\t\t\t\tmessage: L('ab_form_application_duplicate_name', \"*Name (#name#) is already in use\").replace('#name#', nameMatch)\n\t\t\t\t\t}, errors);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check the common validations:\n\t\t\t// TODO:\n\t\t\t// if (!inputValidator.validate(values.label)) {\n\t\t\t// \t_logic.buttonSaveEnable();\n\t\t\t// \treturn false;\n\t\t\t// }\n\n\n\t\t\treturn errors;\n\t\t}\n\t}]);\n\n\treturn ABApplication;\n}();\n\nexports.default = ABApplication;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _configDesktop = __webpack_require__(7);\n\nvar _configDesktop2 = _interopRequireDefault(_configDesktop);\n\nvar _configMobile = __webpack_require__(8);\n\nvar _configMobile2 = _interopRequireDefault(_configMobile);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nexports.default = {\n\tconfig: function config() {\n\n\t\t// TODO: decide which config file to return here:\n\t\tif (window.innerWidth < 768) {\n\t\t\treturn _configMobile2.default;\n\t\t}\n\t\treturn _configDesktop2.default;\n\t}\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = {\n\n\t/**\n  * @function OP.Form.validationError\n  *\n  * creates an error object that can be used in OP.Form.isValidationError()\n  * to update a webix form with error validation messages.\n  *\n  * @param {json} error \tan error object\n  *\t\t\t\terror.name\t{string} the attribute name (Form.element[error.name])\n  *\t\t\t\terror.message {string} the message to display for the error\n  *\n  * @return {obj} an error object.\n  */\n\tvalidationError: function validationError(error, errorObj) {\n\n\t\terrorObj = errorObj || {\n\t\t\terror: 'E_VALIDATION',\n\t\t\tinvalidAttributes: {}\n\t\t};\n\n\t\tvar attr = errorObj.invalidAttributes;\n\t\tattr[error.name] = attr[error.name] || [];\n\n\t\tattr[error.name].push(error);\n\n\t\treturn errorObj;\n\t},\n\n\t/**\n  * @function OP.Form.isValidationError\n  *\n  * scans the given error to see if it is a sails' respone about an invalid\n  * value from one of the form elements.\n  *\n  * @codestart\n  * var form = $$('formID');\n  * var values = form.getValues();\n  * model.attr(values);\n  * model.save()\n  * .fail(function(err){\n  *     if (!OP.Form.isValidationError(err, form)) {\n  *         OP.error.log('Error saving current model ()', {error:err, values:values});\n  *     }\n  * })\n  * .then(function(newData){\n  * \n  * });\n  * @codeend\n  *\n  * @param {obj} error  the error response object\n  * @param {obj} form   the webix form instance (or reference)\n  * @return {bool}      true if error was about a form element.  false otherwise.\n  */\n\tisValidationError: function isValidationError(error, form) {\n\n\t\t// {bool} have we set focus to form component?\n\t\tvar hasFocused = false;\n\n\t\t// if we have an error object:\n\t\tif (error) {\n\n\t\t\t//// if the error obj is provided by Sails response, \n\t\t\t//// do some clean up on the error object:\n\n\n\t\t\t// dig down to sails provided error object:\n\t\t\tif (error.error && error.error == 'E_UNKNOWN' && error.raw && error.raw.length > 0) {\n\n\t\t\t\terror = error.raw[0];\n\t\t\t}\n\n\t\t\t// drill down to the embedded .err object if it exists\n\t\t\tif (error.err) {\n\t\t\t\terror = error.err;\n\t\t\t}\n\n\t\t\t//// Now process the error object\n\t\t\t//// \n\t\t\tif (error.error && error.error == 'E_VALIDATION' || error.code && error.code == 'E_VALIDATION') {\n\n\t\t\t\tvar attrs = error.invalidAttributes;\n\t\t\t\tif (attrs) {\n\n\t\t\t\t\tvar wasForm = false;\n\t\t\t\t\tfor (var attr in attrs) {\n\n\t\t\t\t\t\t// if this is a field in the form:\n\t\t\t\t\t\tif (form.elements[attr]) {\n\n\t\t\t\t\t\t\tvar errors = attrs[attr];\n\t\t\t\t\t\t\tvar msg = [];\n\t\t\t\t\t\t\terrors.forEach(function (err) {\n\t\t\t\t\t\t\t\tmsg.push(err.message);\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t// set the invalid error message\n\t\t\t\t\t\t\tform.markInvalid(attr, msg.join(', '));\n\n\t\t\t\t\t\t\t// set focus to the 1st form element we mark:\n\t\t\t\t\t\t\tif (!hasFocused) {\n\t\t\t\t\t\t\t\tform.elements[attr].focus();\n\t\t\t\t\t\t\t\thasFocused = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\twasForm = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (wasForm) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if we missed updating our form with an error\n\t\t// this was not a validation error so return false\n\t\treturn false;\n\t}\n\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _restURLs = {\n\tfindAll: 'GET #url#',\n\tfindOne: 'GET #url#/{id}',\n\tcreate: 'POST #url#',\n\tupdate: 'PUT #url#/{id}',\n\tdestroy: 'DELETE #url#/{id}'\n};\n\nvar _Models = {};\n\nvar OPModel = function () {\n\tfunction OPModel(key, staticData, instanceData) {\n\t\t_classCallCheck(this, OPModel);\n\n\t\tthis.key = key;\n\t\tthis.staticData = staticData;\n\t\tthis.instanceData = instanceData;\n\t\tthis.Model = staticData.Model;\n\n\t\tthis.url = {};\n\t\tfor (var r in _restURLs) {\n\t\t\tthis.url[r] = staticData[r];\n\t\t}\n\t}\n\n\t_createClass(OPModel, [{\n\t\tkey: 'Models',\n\t\tvalue: function Models(Model) {\n\t\t\tthis.Model = Model;\n\t\t}\n\t}, {\n\t\tkey: 'findAll',\n\t\tvalue: function findAll(cond) {\n\t\t\tvar _this = this;\n\n\t\t\treturn new Promise(function (resolve, reject) {\n\n\t\t\t\t// NOTE: currently reusing AD.Model\n\n\t\t\t\t// var Model = AD.Model.get(this.key);\n\t\t\t\t// Model.findAll(cond)\n\n\t\t\t\tvar service = _this.service('findAll');\n\n\t\t\t\tAD.comm.service[service.verb]({ url: service.url, params: cond }).fail(reject).done(function (data) {\n\n\t\t\t\t\tdata = data.data || data;\n\n\t\t\t\t\t// our findAll() should return an array of items.\n\t\t\t\t\tif (!Array.isArray(data)) {\n\t\t\t\t\t\tdata = [data];\n\t\t\t\t\t}\n\n\t\t\t\t\t// return instances of this.Model if provided:\n\t\t\t\t\tif (_this.Model) {\n\t\t\t\t\t\tvar newList = []; // Model.List();\n\t\t\t\t\t\tdata.forEach(function (l) {\n\t\t\t\t\t\t\tif (l) {\n\t\t\t\t\t\t\t\tnewList.push(new _this.Model(l));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tdata = newList;\n\t\t\t\t\t}\n\n\t\t\t\t\t// convert to a WebixDataCollection:\n\t\t\t\t\tvar dc = new webix.DataCollection({\n\t\t\t\t\t\tdata: data,\n\n\t\t\t\t\t\ton: {\n\t\t\t\t\t\t\tonAfterDelete: function onAfterDelete(id) {}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// dc._toArray = function() {\n\t\t\t\t\t// \tvar data = [];\n\t\t\t\t\t// \tvar id = this.getFirstId();\n\t\t\t\t\t// \twhile(id) {\n\t\t\t\t\t// \t\tdata.push(this.getItem(id));\n\t\t\t\t\t// \t\tid = this.getNextId(id);\n\t\t\t\t\t// \t}\n\t\t\t\t\t// \treturn data;\n\t\t\t\t\t// }\n\n\n\t\t\t\t\tresolve(dc);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'findOne',\n\t\tvalue: function findOne(cond) {\n\t\t\tvar _this2 = this;\n\n\t\t\treturn new Promise(function (resolve, reject) {\n\n\t\t\t\tvar service = _this2.service('findOne');\n\n\t\t\t\tvar nURI = service.url;\n\t\t\t\tfor (var k in cond) {\n\t\t\t\t\tvar oURI = nURI;\n\t\t\t\t\tnURI = AD.util.string.replaceAll(nURI, \"{\" + k + \"}\", cond[k]);\n\n\t\t\t\t\t// if there was a change, remove k from cond:\n\t\t\t\t\tif (oURI != nURI) {\n\t\t\t\t\t\tdelete cond[k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tservice.url = nURI;\n\n\t\t\t\tAD.comm.service[service.verb]({ url: service.url, params: cond }).fail(reject).done(function (item) {\n\t\t\t\t\tif (item.translate) item.translate();\n\n\t\t\t\t\tresolve(item.attr ? item.attr() : item);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'create',\n\t\tvalue: function create(attr) {\n\t\t\tvar _this3 = this;\n\n\t\t\treturn new Promise(function (resolve, reject) {\n\n\t\t\t\tvar service = _this3.service('create');\n\n\t\t\t\tAD.comm.service[service.verb]({ url: service.url, params: attr }).fail(reject).done(function (item) {\n\t\t\t\t\tif (item.translate) item.translate();\n\n\t\t\t\t\tresolve(item.attr ? item.attr() : item);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'update',\n\t\tvalue: function update(id, attr) {\n\t\t\tvar _this4 = this;\n\n\t\t\treturn new Promise(function (resolve, reject) {\n\n\t\t\t\tvar service = _this4.service('update', id);\n\n\t\t\t\tAD.comm.service[service.verb]({ url: service.url, params: attr }).fail(reject).done(resolve);\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy(id) {\n\t\t\tvar _this5 = this;\n\n\t\t\treturn new Promise(function (resolve, reject) {\n\n\t\t\t\tvar service = _this5.service('destroy', id);\n\n\t\t\t\tAD.comm.service[service.verb]({ url: service.url, params: {} }).fail(reject).done(resolve);\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'service',\n\t\tvalue: function service(key, id) {\n\t\t\tvar parts = this.url[key].split(' ');\n\t\t\tvar verb = parts[0].toLowerCase();\n\t\t\tvar uri = parts.pop();\n\n\t\t\tif (id) {\n\t\t\t\tvar key = '{id}';\n\t\t\t\turi = AD.util.string.replaceAll(uri, key, id);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tverb: verb,\n\t\t\t\turl: uri\n\t\t\t};\n\t\t}\n\t}]);\n\n\treturn OPModel;\n}();\n\nexports.default = {\n\n\textend: function extend(key, staticData, instance) {\n\n\t\t//\n\t\t// Create the AD.Model from this definition\n\t\t//\n\n\t\tif (staticData.restURL) {\n\t\t\tfor (var u in _restURLs) {\n\t\t\t\tstaticData[u] = _restURLs[u].replace('#url#', staticData.restURL);\n\t\t\t}\n\t\t}\n\n\t\t// var alreadyThere = AD.Model.get(key);\n\t\t// if (!alreadyThere) {\n\n\t\t// \tAD.Model.Base.extend(key, staticData, instance);\n\t\t// \tAD.Model.extend(key, staticData, instance);\n\t\t// }\n\n\t\t//\n\t\t// Now create our OP.Model:\n\t\t//\n\t\tvar curr = nameSpace(_Models, key);\n\t\tvar modelName = objectName(key);\n\n\t\tcurr[modelName] = new OPModel(key, staticData, instance);\n\t},\n\n\tget: function get(key) {\n\t\treturn findObject(_Models, key);\n\t}\n};\n\n/*\n * @function findObject\n *\n * Return the object specified by the given name space:\n *\n * @param {object} baseObj  The base object to search on\n *                          usually AD.models or AD.models_base\n *\n * @param {string} name   The provided namespace to parse and search for\n *                        The name can be spaced using '.' \n *                        eg.  'coolTool.Resource1' => AD.models.coolTool.Resource1\n *                             'coolerApp.tool1.Resource1' => AD.models.coolerApp.tool1.Resource1\n *\n * @returns {object}  the object resolved by the namespaced base \n *                    eg:  findObject(AD.models, 'Resource') => return AD.models.Resource\n *                         findObject(AD.models, 'coolTool.Resource1') => AD.models.coolTool.Resource1\n *\n *                    if an object is not found, null is returned.\n */\n\nvar findObject = function findObject(baseObj, name) {\n\n\t// first lets figure out our namespacing:\n\tvar nameList = name.split('.');\n\n\t// for each remaining name segments, make sure we have a \n\t// namespace container for it:\n\tvar curr = baseObj;\n\tnameList.forEach(function (name) {\n\n\t\tif (curr == null) {\n\t\t\tvar whoops = true;\n\t\t\tconsole.error('! current name segment is null.  Check your given name to make sure it is properly given: ', name);\n\t\t}\n\t\tif (curr) {\n\t\t\tif (typeof curr[name] == 'undefined') {\n\t\t\t\tcurr = null;\n\t\t\t}\n\t\t\tif (curr) curr = curr[name];\n\t\t}\n\t});\n\n\treturn curr;\n};\n\n/*\n * @function objectName\n *\n * parse the name and return the name of the object we will create.\n *\n * @param {string} name   The provided namespace to parse \n *                        The name can be spaced using '.' \n *\n * @returns {string}  the name of the model object \n *                    eg:  objectName('Resource') => return 'Resource'\n *                         objectName('coolTool.Resource1') => 'Resource1'\n */\nvar objectName = function objectName(name) {\n\n\t// first lets figure out our namespacing:\n\tvar nameList = name.split('.');\n\tvar objName = nameList.pop(); // remove the last one.\n\n\treturn objName;\n};\n\n/*\n * @function nameSpace\n *\n * Make sure the proper name space is created on the given base.\n *\n * @param {object} baseObj  The base object to create the namespace on\n *                          usually AD.models or AD.models_base\n *\n * @param {string} name   The provided namespace to parse and create\n *                        The name can be spaced using '.' \n *                        eg.  'coolTool.Resource1' => AD.models.coolTool.Resource1\n *                             'coolerApp.tool1.Resource1' => AD.models.coolerApp.tool1.Resource1\n *\n * @returns {object}  the object that represents the namespaced base \n *                    that the Model is to be created on.\n *                    eg:  nameSpace(AD.models, 'Resource') => return AD.models\n *                         nameSpace(AD.models, 'coolTool.Resource1') => AD.models.coolTool\n */\nvar nameSpace = function nameSpace(baseObj, name) {\n\n\t// first lets figure out our namespacing:\n\tvar nameList = name.split('.');\n\tvar controlName = nameList.pop(); // remove the last one.\n\n\t// for each remaining name segments, make sure we have a \n\t// namespace container for it:\n\tvar curr = baseObj;\n\tnameList.forEach(function (name) {\n\n\t\tif (typeof curr[name] == 'undefined') {\n\t\t\tcurr[name] = {};\n\t\t}\n\t\tcurr = curr[name];\n\t});\n\n\treturn curr;\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n/*\n * OP.Multilingual\n *\n * A set of helpers for Multilingual Data.\n *\n */\n\nexports.default = {\n\n\t/**\n  * @function OP.Multilingual.translate\n  *\n  * Given a set of json data, pull out any multilingual translations\n  * and flatten those values to the base object.\n  *\n  * @param {obj} obj  The instance of the object being translated\n  * @param {json} json The json data being used for translation.\n  *\t\t\t\t\t\tThere should be json.translations = [ {transEntry}, ...]\n  *\t\t\t\t\t\twhere transEntry = {\n  *\t\t\t\t\t\t\tlanguage_code:'en',\n  *\t\t\t\t\t\t\tfield1:'value',\n  *\t\t\t\t\t\t\t...\n  *\t\t\t\t\t\t}\n  * @param {array} fields an Array of multilingual fields to pull to \n  *\t\t\t\t\t\t the obj[field] value.\n  *\n  */\n\ttranslate: function translate(obj, json, fields) {\n\n\t\tif (!json.translations) {\n\t\t\tjson.translations = [];\n\t\t}\n\n\t\tvar currLanguage = AD.lang.currentLanguage || 'en';\n\n\t\tif (fields && fields.length > 0) {\n\n\t\t\tjson.translations.forEach(function (t) {\n\t\t\t\t// find the translation for the current language code\n\t\t\t\tif (t.language_code == currLanguage) {\n\n\t\t\t\t\t// copy each field to the root object\n\t\t\t\t\tfields.forEach(function (f) {\n\t\t\t\t\t\tobj[f] = t[f] || ''; // default to '' if not found. \n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n  * @function OP.Multilingual.unTranslate\n  *\n  * Take the multilingual information in the base obj, and push that \n  * down into the json.translations data.\n  *\n  * @param {obj} obj  The instance of the object with the translation\n  * @param {json} json The json data being used for translation.\n  *\t\t\t\t\t\tThere should be json.translations = [ {transEntry}, ...]\n  *\t\t\t\t\t\twhere transEntry = {\n  *\t\t\t\t\t\t\tlanguage_code:'en',\n  *\t\t\t\t\t\t\tfield1:'value',\n  *\t\t\t\t\t\t\t...\n  *\t\t\t\t\t\t}\n  * @param {array} fields an Array of multilingual fields to pull from \n  *\t\t\t\t\t\t the obj[field] value.\n  *\n  */\n\tunTranslate: function unTranslate(obj, json, fields) {\n\n\t\tjson = json || {};\n\t\tfields = fields || [];\n\n\t\tif (!json.translations) {\n\t\t\tjson.translations = [];\n\t\t}\n\n\t\tvar currLanguage = AD.lang.currentLanguage || 'en';\n\n\t\tif (fields && fields.length > 0) {\n\n\t\t\tvar foundOne = false;\n\n\t\t\tjson.translations.forEach(function (t) {\n\t\t\t\t// find the translation for the current language code\n\t\t\t\tif (t.language_code == currLanguage) {\n\n\t\t\t\t\t// copy each field to the root object\n\t\t\t\t\tfields.forEach(function (f) {\n\t\t\t\t\t\tt[f] = obj[f];\n\t\t\t\t\t});\n\n\t\t\t\t\tfoundOne = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// if we didn't update an existing translation\n\t\t\tif (!foundOne) {\n\n\t\t\t\t// create a translation entry:\n\t\t\t\tvar trans = {};\n\n\t\t\t\t// assume current languageCode:\n\t\t\t\ttrans.language_code = currLanguage;\n\n\t\t\t\tfields.forEach(function (field) {\n\t\t\t\t\tif (obj[field] != null) {\n\t\t\t\t\t\ttrans[field] = obj[field];\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tjson.translations.push(trans);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = {\n\n\tuuid: AD.util.uuid\n\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\n/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexports.default = {\n\n\t// Application List\n\tappListRowHeight: 70,\n\n\t// button types\n\tbuttonWidthLarge: 200,\n\tbuttonWidthMedium: 150,\n\tbuttonWidthSmall: 100,\n\tbuttonWidthExtraSmall: 50,\n\n\t// tab types\n\ttabWidthLarge: 200,\n\ttabWidthMedium: 120,\n\ttabWidthSmall: 100,\n\ttabWidthExtraSmall: 50,\n\n\t// column types\n\n\n\t// spacers\n\tsmallSpacer: 10,\n\tmediumSpacer: 25,\n\tlargeSpacer: 50,\n\tappListSpacerRowHeight: 100,\n\tappListSpacerColMinWidth: 100,\n\tappListSpacerColMaxWidth: 200,\n\tobjectWorkspaceColWidth: 20,\n\n\t// labels\n\tlabelWidthSmall: 50,\n\tlabelWidthMedium: 80,\n\tlabelWidthLarge: 150,\n\tlabelWidthCheckbox: 0,\n\n\t// show elements on desktop\n\thideMobile: false\n\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\n/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexports.default = {\n\n\t// Application List\n\tappListRowHeight: 70,\n\n\t// button types\n\tbuttonWidthLarge: 200,\n\n\t// column types\n\n\n\t// spacers\n\tsmallSpacer: 1,\n\tmediumSpacer: 10,\n\tlargeSpacer: 20,\n\tappListSpacerRowHeight: 10,\n\tappListSpacerColMinWidth: 1,\n\tappListSpacerColMaxWidth: 1,\n\tobjectWorkspaceColWidth: 1,\n\n\t// labels\n\tlabelWidthSmall: 50,\n\tlabelWidthMedium: 80,\n\tlabelWidthLarge: 120,\n\tlabelWidthCheckbox: 0,\n\n\t// hide elements for mobile\n\thideMobile: true\n\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _ABFieldString = __webpack_require__(15);\n\nvar _ABFieldString2 = _interopRequireDefault(_ABFieldString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* \n * Fields\n * A type => ABField  hash of the different ABFields available.\n */\nvar Fields = {}; /* \n                  * ABFieldManager\n                  * \n                  * An interface for managing the different ABFields available in our AppBuilder.\n                  *\n                  */\n\nFields[_ABFieldString2.default.defaults().type] = _ABFieldString2.default;\n\nexports.default = {\n\n\t/*\n  * @function allFields\n  * return all the currently defined ABFields in an array.\n  * @return [{ABField},...]\n  */\n\tallFields: function allFields() {\n\t\tvar fields = [];\n\t\tfor (var f in Fields) {\n\t\t\tfields.push(Fields[f]);\n\t\t}\n\t\treturn fields;\n\t},\n\n\t/*\n  * @function newField\n  * return an instance of an ABField based upon the values.type value.\n  * @return {ABField}\n  */\n\tnewField: function newField(values, object) {\n\n\t\tif (values.type) {\n\t\t\treturn new Fields[values.type](values, object);\n\t\t} else {\n\n\t\t\t//// TODO: what to do here?\n\t\t}\n\t}\n\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\n// import OP from \"../../OP/OP\"\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nvar ABField = function () {\n\tfunction ABField(values, object, fieldDefaults) {\n\t\t_classCallCheck(this, ABField);\n\n\t\t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n\t\tthis.defaults = fieldDefaults;\n\n\t\t/*\n  {\n  id:'uuid',\t\t\t\t\t// uuid value for this obj\n  type:'fieldType',\t\t\t// unique key for this Field\n  icon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  label:'',\t\t\t\t\t// pulled from translation\n  columnName:'column_name',\t// a valid mysql table.column name \n  settings: {\t\t\t\t\t// unique settings for the type of field\n  showIcon:true/false,\t// only useful in Object Workspace DataTable\n  // specific for dataField\n  },\n  translations:[]\n  }\n  */\n\t\tthis.fromValues(values);\n\n\t\t// label is a multilingual value:\n\t\tOP.Multilingual.translate(this, this, ['label']);\n\n\t\tthis.object = object;\n\t}\n\n\t///\n\t/// Static Methods\n\t///\n\t/// Available to the Class level object.  These methods are not dependent\n\t/// on the instance values of the Application.\n\t///\n\n\t_createClass(ABField, [{\n\t\tkey: 'fieldName',\n\n\n\t\t// unique key to reference this specific DataField\n\t\tvalue: function fieldName() {\n\t\t\treturn this.defaults.name;\n\t\t}\n\n\t\t// http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n\t}, {\n\t\tkey: 'fieldType',\n\t\tvalue: function fieldType() {\n\t\t\treturn this.defaults.type;\n\t\t}\n\n\t\t// font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\t\t\n\n\t}, {\n\t\tkey: 'fieldIcon',\n\t\tvalue: function fieldIcon() {\n\t\t\treturn this.defaults.icon;\n\t\t}\n\n\t\t// the multilingual text for the name of this data field.\n\n\t}, {\n\t\tkey: 'fieldMenuName',\n\t\tvalue: function fieldMenuName() {\n\t\t\treturn this.defaults.menuName;\n\t\t}\n\n\t\t// the multilingual text for the name of this data field.\n\n\t}, {\n\t\tkey: 'fieldDescription',\n\t\tvalue: function fieldDescription() {\n\t\t\treturn this.defaults.description;\n\t\t}\n\n\t\t/*\n   * @method isValid\n   * check the current values to make sure they are valid.\n   * Here we check the default values provided by ABField.\n   *\n   * @return null or [{OP.Form.validationError()}] objects.\n   */\n\n\t}, {\n\t\tkey: 'isValid',\n\t\tvalue: function isValid() {\n\t\t\tvar _this = this;\n\n\t\t\tvar errors = null;\n\n\t\t\t// .columnName must be unique among fileds on the same object\n\t\t\tvar isNameUnique = this.object.fields(function (f) {\n\t\t\t\tvar isDifferent = f.id != _this.id;\n\t\t\t\treturn f.id != _this.id && f.columnName.toLowerCase() == _this.columnName.toLowerCase();\n\t\t\t}).length == 0;\n\t\t\tif (!isNameUnique) {\n\t\t\t\terrors = OP.Form.validationError({\n\t\t\t\t\tname: 'columnName',\n\t\t\t\t\tmessage: L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.columnName)\n\t\t\t\t}, errors);\n\t\t\t}\n\n\t\t\treturn errors;\n\t\t}\n\n\t\t///\n\t\t/// Instance Methods\n\t\t///\n\n\n\t\t/// ABApplication data methods\n\n\n\t\t/**\n   * @method destroy()\n   *\n   * destroy the current instance of ABApplication\n   *\n   * also remove it from our _AllApplications\n   *\n   * @return {Promise}\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tif (this.id) {\n\t\t\t\tconsole.error('TODO: ABField.destroy()');\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @method save()\n   *\n   * persist this instance of ABField with it's parent ABObject\n   *\n   *\n   * @return {Promise}\n   *\t\t\t\t\t\t.resolve( {this} )\n   */\n\n\t}, {\n\t\tkey: 'save',\n\t\tvalue: function save() {\n\t\t\tvar _this2 = this;\n\n\t\t\treturn new Promise(function (resolve, reject) {\n\n\t\t\t\t// if this is our initial save()\n\t\t\t\tif (!_this2.id) {\n\t\t\t\t\t_this2.id = OP.Util.uuid(); // setup default .id\n\t\t\t\t}\n\n\t\t\t\t_this2.object.fieldSave(_this2).then(function () {\n\t\t\t\t\tresolve(_this2);\n\t\t\t\t}).catch(function (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * @method toObj()\n   *\n   * properly compile the current state of this ABField instance\n   * into the values needed for saving to the DB.\n   *\n   * @return {json}\n   */\n\n\t}, {\n\t\tkey: 'toObj',\n\t\tvalue: function toObj() {\n\n\t\t\t// store \"label\" in our translations\n\t\t\tOP.Multilingual.unTranslate(this, this, [\"label\"]);\n\n\t\t\treturn {\n\t\t\t\tid: this.id,\n\t\t\t\ttype: this.type,\n\t\t\t\ticon: this.icon,\n\t\t\t\tcolumnName: this.columnName,\n\t\t\t\tsettings: this.settings,\n\t\t\t\ttranslations: this.translations\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: 'fromValues',\n\t\tvalue: function fromValues(values) {\n\n\t\t\tthis.id = values.id; // NOTE: only exists after .save()\n\t\t\tthis.type = values.type || this.fieldType();\n\t\t\tthis.icon = values.icon || this.fieldIcon();\n\n\t\t\t// if this is being instantiated on a read from the Property UI,\n\t\t\t// .label is coming in under .settings.label\n\t\t\tthis.label = values.label || values.settings.label || '?label?';\n\n\t\t\tthis.columnName = values.columnName || '';\n\t\t\tthis.translations = values.translations || [];\n\n\t\t\tthis.settings = values.settings || {};\n\t\t\tthis.settings.showIcon = values.settings.showIcon + \"\" || \"1\";\n\n\t\t\t// convert from \"0\" => 0\n\t\t\tthis.settings.showIcon = parseInt(this.settings.showIcon);\n\t\t}\n\n\t\t///\n\t\t/// Working with Actual Object Values:\n\t\t///\n\n\t\t/*\n   * @function columnHeader\n   * Return the column header for a webix grid component for this specific \n   * data field.\n   * @param {bool} isObjectWorkspace is this being used in the Object \n   *\t\t\t\t\t\t\t\t   workspace.\n   * @return {obj}  configuration obj\n   */\n\n\t}, {\n\t\tkey: 'columnHeader',\n\t\tvalue: function columnHeader(isObjectWorkspace) {\n\n\t\t\tvar config = {\n\t\t\t\tid: this.id,\n\t\t\t\theader: this.label\n\t\t\t};\n\n\t\t\tif (isObjectWorkspace) {\n\t\t\t\tif (this.settings.showIcon) {\n\t\t\t\t\tconfig.header = '<span class=\"webix_icon fa-{icon}\"></span>'.replace('{icon}', this.fieldIcon()) + config.header;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn config;\n\t\t}\n\t}], [{\n\t\tkey: 'clearEditor',\n\t\tvalue: function clearEditor(ids) {\n\n\t\t\tvar defaultValues = {\n\t\t\t\tlabel: '',\n\t\t\t\tcolumnName: '',\n\t\t\t\tshowIcon: 1\n\t\t\t};\n\n\t\t\tfor (var f in defaultValues) {\n\t\t\t\tvar component = $$(ids[f]);\n\t\t\t\tcomponent.setValue(defaultValues[f]);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'editorPopulate',\n\t\tvalue: function editorPopulate(ids, field) {\n\n\t\t\t$$(ids.label).setValue(field.label);\n\t\t\t$$(ids.columnName).setValue(field.columnName);\n\t\t\t$$(ids.showIcon).setValue(field.settings.showIcon);\n\t\t}\n\n\t\t/**\n   * @function definitionEditor\n   *\n   * Many DataFields share some base information for their usage\n   * in the AppBuilder.  The UI Editors have a common header\n   * and footer format, and this function allows child DataFields\n   * to not have to define those over and over.\n   *\n   * The common layout header contains:\n   *\t\t[Menu Label]\n   *\t\t[textBox: labelName]\n   *\t\t[text:    description]\n   *\n   * The defined DataField UI will be added at the end of this.\n   *\n   * This routine actually updated the live DataField definition\n   * with the common header info.\n   *\n   * @param {DataField} field  The DataField object to work with.\n   */\n\n\t}, {\n\t\tkey: 'definitionEditor',\n\t\tvalue: function definitionEditor(App, ids, _logic, Field) {\n\n\t\t\t/// TODO: maybe just pass in onChange instead of _logic\n\t\t\t/// if not onChange, then use our default:\n\n\t\t\t// setup our default labelOnChange functionality:\n\t\t\tvar _onChange = function onChange(newVal, oldVal) {\n\n\t\t\t\toldVal = oldVal || '';\n\n\t\t\t\tif (newVal != oldVal && oldVal == $$(ids.columnName).getValue()) {\n\t\t\t\t\t$$(ids.columnName).setValue(newVal);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// if they provided a labelOnChange() override, use that:\n\t\t\tif (_logic.labelOnChange) {\n\t\t\t\t_onChange = _logic.labelOnChange;\n\t\t\t}\n\n\t\t\tvar _ui = {\n\t\t\t\t// id: ids.component,\n\t\t\t\trows: [{\n\t\t\t\t\tview: \"label\",\n\t\t\t\t\tlabel: \"<span class='webix_icon fa-{0}'></span>{1}\".replace('{0}', Field.icon).replace('{1}', Field.menuName)\n\t\t\t\t}, {\n\t\t\t\t\tview: \"text\",\n\t\t\t\t\tid: ids.label,\n\t\t\t\t\tname: 'label',\n\t\t\t\t\tlabel: App.labels.dataFieldHeaderLabel,\n\t\t\t\t\tplaceholder: App.labels.dataFieldHeaderLabelPlaceholder,\n\t\t\t\t\tlabelWidth: App.config.labelWidthMedium,\n\t\t\t\t\tcss: 'ab-new-label-name',\n\t\t\t\t\ton: {\n\t\t\t\t\t\tonChange: function onChange(newVal, oldVal) {\n\t\t\t\t\t\t\t_onChange(newVal, oldVal);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tview: \"text\",\n\t\t\t\t\tid: ids.columnName,\n\t\t\t\t\tname: 'columnName',\n\t\t\t\t\tlabel: App.labels.dataFieldColumnName, // 'Name',\n\t\t\t\t\tlabelWidth: App.config.labelWidthMedium,\n\t\t\t\t\tplaceholder: App.labels.dataFieldColumnNamePlaceholder }, {\n\t\t\t\t\tview: \"label\",\n\t\t\t\t\tid: ids.fieldDescription,\n\t\t\t\t\tlabel: Field.description,\n\t\t\t\t\talign: \"right\"\n\t\t\t\t}, {\n\t\t\t\t\tview: 'checkbox',\n\t\t\t\t\tid: ids.showIcon,\n\t\t\t\t\tname: 'showIcon',\n\t\t\t\t\tlabelRight: App.labels.dataFieldShowIcon, // 'Show icon',\n\t\t\t\t\tlabelWidth: App.config.labelWidthCheckbox,\n\t\t\t\t\tvalue: true\n\t\t\t\t}]\n\t\t\t};\n\n\t\t\treturn _ui;\n\t\t}\n\t}, {\n\t\tkey: 'editorValues',\n\t\tvalue: function editorValues(settings) {\n\n\t\t\tvar obj = {\n\t\t\t\tlabel: settings.label,\n\t\t\t\tcolumnName: settings.columnName,\n\t\t\t\tsettings: settings\n\t\t\t};\n\n\t\t\tdelete settings.label;\n\t\t\tdelete settings.columnName;\n\n\t\t\treturn obj;\n\t\t}\n\t}]);\n\n\treturn ABField;\n}();\n\nexports.default = ABField;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\n__webpack_require__(16);\n\n__webpack_require__(20);\n\nvar _edittree = __webpack_require__(34);\n\nvar _edittree2 = _interopRequireDefault(_edittree);\n\nvar _editlist = __webpack_require__(33);\n\nvar _editlist2 = _interopRequireDefault(_editlist);\n\nvar _AppBuilder = __webpack_require__(39);\n\nvar _AppBuilder2 = _interopRequireDefault(_AppBuilder);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nOP.Component.extend('ab', function (App) {\n\n\tfunction L(key, altText) {\n\t\treturn AD.lang.label.getLabel(key) || altText;\n\t}\n\n\t// setup the common labels for our AppBuilder Application.\n\tApp.labels = {\n\t\tadd: L('ab.common.add', \"*Add\"),\n\t\tcreate: L('ab.common.create', \"*Create\"),\n\t\t\"delete\": L('ab.common.delete', \"*Delete\"),\n\t\tedit: L('ab.common.edit', \"*Edit\"),\n\t\t\"export\": L('ab.common.export', \"*Export\"),\n\t\tformName: L('ab.common.form.name', \"*Name\"),\n\t\t\"import\": L('ab.common.import', \"*Import\"),\n\t\tok: L('ab.common.ok', \"*Ok\"),\n\n\t\tcancel: L('ab.common.cancel', \"*Cancel\"),\n\t\tsave: L('ab.common.save', \"*Save\"),\n\n\t\tyes: L('ab.common.yes', \"*Yes\"),\n\t\tno: L('ab.common.no', \"*No\"),\n\n\t\tcreateErrorMessage: L('ab.common.create.error', \"*System could not create <b>{0}</b>.\"),\n\t\tcreateSuccessMessage: L('ab.common.create.success', \"*<b>{0}</b> is created.\"),\n\n\t\tupdateErrorMessage: L('ab.common.update.error', \"*System could not update <b>{0}</b>.\"),\n\t\tupdateSucessMessage: L('ab.common.update.success', \"*<b>{0}</b> is updated.\"),\n\n\t\tdeleteErrorMessage: L('ab.common.delete.error', \"*System could not delete <b>{0}</b>.\"),\n\t\tdeleteSuccessMessage: L('ab.common.delete.success', \"*<b>{0}</b> is deleted.\"),\n\n\t\t// Data Field  common Property labels:\n\t\tdataFieldHeaderLabel: L('ab.dataField.common.headerLabel', '*Label'),\n\t\tdataFieldHeaderLabelPlaceholder: L('ab.dataField.common.headerLabelPlaceholder', '*Header Name'),\n\n\t\tdataFieldColumnName: L('ab.dataField.common.columnName', '*Name'),\n\t\tdataFieldColumnNamePlaceholder: L('ab.dataField.common.columnNamePlaceholder', '*Column Name'),\n\n\t\tdataFieldShowIcon: L('ab.dataField.common.showIcon', '*show icon?')\n\t};\n\n\t// make instances of our Custom Components:\n\tOP.CustomComponent[_edittree2.default.key](App, 'edittree'); // ->  App.custom.edittree  now exists\n\tOP.CustomComponent[_editlist2.default.key](App, 'editlist'); // ->  App.custom.editlist  now exists\n\n\n\tvar ids = {\n\t\tcomponent: App.unique('app_builder_root')\n\t};\n\n\t// Define the external components used in this Component:\n\tvar AppChooser = OP.Component['ab_choose'](App);\n\tvar AppWorkspace = OP.Component['ab_work'](App);\n\n\t// This component's UI definition:\n\t// Application multi-views\n\tvar _ui = {\n\t\tid: ids.component,\n\t\tview: \"multiview\",\n\t\tborderless: true,\n\t\tanimate: false,\n\t\trows: [AppChooser.ui, AppWorkspace.ui]\n\t};\n\n\t// This component's init() definition:\n\tvar _init = function _init() {\n\n\t\tAppChooser.init();\n\t\tAppWorkspace.init();\n\n\t\t// start off only showing the App Chooser:\n\t\tApp.actions.transitionApplicationChooser();\n\n\t\t// perform an initial resize adjustment\n\t\t$$(ids.component).adjust();\n\t};\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {};\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui: _ui, // {obj} \tthe webix ui definition for this component\n\t\tinit: _init, // {fn} \tinit() to setup this component\n\t\tactions: _actions // {ob}\t\thash of fn() to expose so other components can access.\n\t};\n});\n\n//// REFACTORING TODOs:\n// TODO: AppForm-> Permissions : refresh permission list, remove AppRole permission on Application.delete().\n\n\n// Import our Custom Components here:\n\n/*\n * AB\n *\n * The base AppBuilder component.  It manages these components:\n *   - ab_choose :  choose an application to work with\n *   - ab_work   :  load an application into the work area\n *\n */\n\n// import '../OP/OP'\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\n__webpack_require__(11);\n\nAD.Control.OpsTool.extend('BuildApp', {\n\n\tinit: function init(element, options) {\n\t\tvar self = this;\n\n\t\toptions = AD.defaults({\n\t\t\ttemplateDOM: '/opstools/BuildApp/views/BuildApp/BuildApp.ejs',\n\t\t\tresize_notification: 'BuildApp.resize',\n\t\t\ttool: null // the parent opsPortal Tool() object\n\t\t}, options);\n\t\tself.options = options;\n\n\t\t// Call parent init\n\t\tself._super(element, options);\n\n\t\tself.data = {};\n\n\t\tself.webixUiId = {\n\t\t\tloadingScreen: 'ab-loading-screen',\n\t\t\tsyncButton: 'ab-sync-button'\n\t\t};\n\n\t\tself.initDOM(function () {\n\t\t\tself.initWebixUI();\n\t\t});\n\t},\n\n\tinitDOM: function initDOM(cb) {\n\t\tvar _this = this;\n\n\t\tcan.view(this.options.templateDOM, {}, function (fragment) {\n\t\t\t_this.element.html(fragment);\n\n\t\t\t// _this.element.find(\".ab-app-list\").show();\n\t\t\t// _this.element.find(\".ab-app-workspace\").hide();\n\n\t\t\tcb();\n\t\t});\n\t},\n\n\tinitWebixUI: function initWebixUI() {\n\n\t\t// get the AppBuilder (AB) Webix Component\n\t\tvar AppBuilder = OP.Component['ab']();\n\t\tvar ui = AppBuilder.ui;\n\n\t\t// tell the AppBuilder where to attach\n\t\tui.container = 'ab-main-container';\n\n\t\t// instantiate the UI first\n\t\tthis.AppBuilder = webix.ui(ui);\n\n\t\t// then perform the init()\n\t\tAppBuilder.init();\n\t},\n\n\tresize: function resize(height) {\n\t\tvar self = this;\n\n\t\theight = height.height || height;\n\n\t\tvar appListDom = $(self.element);\n\n\t\tif (appListDom) {\n\t\t\tvar width = appListDom.parent().css('width');\n\t\t\tif (width) {\n\t\t\t\twidth = parseInt(width.replace('px', ''));\n\t\t\t}\n\t\t\tappListDom.width(width);\n\n\t\t\t// Removed this because the 140 pixels was causing the list to not scroll to the bottom of the page\n\t\t\t// var computedHeight = height - 140;\n\n\t\t\tvar computedHeight = height;\n\t\t\tconsole.log(\"computed height: \" + computedHeight);\n\t\t\tvar mh = parseInt(appListDom.css('min-height').replace('px', ''));\n\t\t\tconsole.log(\"min-height: \" + mh);\n\t\t\tif (mh < computedHeight) {\n\t\t\t\tappListDom.height(computedHeight);\n\t\t\t\t$('#ab-main-container').height(computedHeight);\n\t\t\t} else {\n\t\t\t\tappListDom.height(mh);\n\t\t\t\t$('#ab-main-container').height(mh);\n\t\t\t}\n\n\t\t\tif (this.AppBuilder) {\n\t\t\t\t// this.AppBuilder.define('height', height - 140);\n\t\t\t\tthis.AppBuilder.adjust();\n\t\t\t}\n\t\t}\n\t}\n\n});\n// import 'OP';\n// import '../../../../../assets/js/webix/webix'\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n// import OP from \"OP\"\n\n\nvar _ABFieldManager = __webpack_require__(9);\n\nvar _ABFieldManager2 = _interopRequireDefault(_ABFieldManager);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction toDC(data) {\n\treturn new webix.DataCollection({\n\t\tdata: data\n\n\t});\n}\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nvar ABObject = function () {\n\tfunction ABObject(attributes, application) {\n\t\tvar _this = this;\n\n\t\t_classCallCheck(this, ABObject);\n\n\t\t/*\n  {\n  \tid: uuid(),\n  \tname: 'name',\n  \tlabelFormat: 'xxxxx',\n  \tisImported: 1/0,\n  \turlPath:'string',\n  \timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n  \t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n  \ttranslations:[\n  \t\t{}\n  \t],\n  \tfields:[\n  \t\t{ABDataField}\n  \t]\n  }\n  */\n\n\t\t// ABApplication Attributes\n\t\tthis.id = attributes.id;\n\t\tthis.name = attributes.name || \"\";\n\t\tthis.labelFormat = attributes.labelFormat || \"\";\n\t\tthis.isImported = attributes.isImported || 0;\n\t\tthis.urlPath = attributes.urlPath || \"\";\n\t\tthis.importFromObject = attributes.importFromObject || \"\";\n\t\tthis.translations = attributes.translations;\n\n\t\tthis.objectWorkspace = attributes.objectWorkspace || {\n\t\t\thiddenFields: [] };\n\n\t\t// multilingual fields: label, description\n\t\tOP.Multilingual.translate(this, this, ['label']);\n\n\t\t// import all our ABObjects\n\t\tvar newFields = [];\n\t\t(attributes.fields || []).forEach(function (field) {\n\t\t\tnewFields.push(_this.fieldNew(field));\n\t\t});\n\t\tthis._fields = newFields;\n\n\t\t// link me to my parent ABApplication\n\t\tthis.application = application;\n\t}\n\n\t///\n\t/// Static Methods\n\t///\n\t/// Available to the Class level object.  These methods are not dependent\n\t/// on the instance values of the Application.\n\t///\n\n\n\t//// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n\t_createClass(ABObject, [{\n\t\tkey: \"isValid\",\n\t\tvalue: function isValid() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar errors = null;\n\n\t\t\t// label/name must be unique:\n\t\t\tvar isNameUnique = this.application.objects(function (o) {\n\t\t\t\treturn o.name.toLowerCase() == _this2.name.toLowerCase();\n\t\t\t}).length == 0;\n\t\t\tif (!isNameUnique) {\n\t\t\t\terrors = OP.Form.validationError({\n\t\t\t\t\tname: 'name',\n\t\t\t\t\tmessage: L('ab.validation.object.name.unique', 'Object name must be unique (#name# already used in this Application)').replace('#name#', this.name)\n\t\t\t\t}, errors);\n\t\t\t}\n\n\t\t\t// Check the common validations:\n\t\t\t// TODO:\n\t\t\t// if (!inputValidator.validate(values.label)) {\n\t\t\t// \t_logic.buttonSaveEnable();\n\t\t\t// \treturn false;\n\t\t\t// }\n\n\n\t\t\treturn errors;\n\t\t}\n\n\t\t///\n\t\t/// Instance Methods\n\t\t///\n\n\n\t\t/// ABApplication data methods\n\n\n\t\t/**\n   * @method destroy()\n   *\n   * destroy the current instance of ABApplication\n   *\n   * also remove it from our _AllApplications\n   *\n   * @return {Promise}\n   */\n\n\t}, {\n\t\tkey: \"destroy\",\n\t\tvalue: function destroy() {\n\t\t\tif (this.id) {\n\t\t\t\tconsole.error('TODO: ABObject.destroy()');\n\t\t\t\t// return this.Model.destroy(this.id)\n\t\t\t\t// \t.then(()=>{\n\t\t\t\t// \t\t_AllApplications.remove(this.id);\n\t\t\t\t// \t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @method save()\n   *\n   * persist this instance of ABObject with it's parent ABApplication\n   *\n   *\n   * @return {Promise}\n   *\t\t\t\t\t\t.resolve( {this} )\n   */\n\n\t}, {\n\t\tkey: \"save\",\n\t\tvalue: function save() {\n\t\t\tvar _this3 = this;\n\n\t\t\treturn new Promise(function (resolve, reject) {\n\n\t\t\t\t// if this is our initial save()\n\t\t\t\tif (!_this3.id) {\n\n\t\t\t\t\t_this3.id = OP.Util.uuid(); // setup default .id\n\t\t\t\t\t_this3.label = _this3.label || _this3.name;\n\t\t\t\t\t_this3.urlPath = _this3.urlPath || _this3.application.name + '/' + _this3.name;\n\t\t\t\t}\n\n\t\t\t\t_this3.application.objectSave(_this3).then(function () {\n\t\t\t\t\tresolve(_this3);\n\t\t\t\t}).catch(function (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * @method toObj()\n   *\n   * properly compile the current state of this ABApplication instance\n   * into the values needed for saving to the DB.\n   *\n   * Most of the instance data is stored in .json field, so be sure to\n   * update that from all the current values of our child fields.\n   *\n   * @return {json}\n   */\n\n\t}, {\n\t\tkey: \"toObj\",\n\t\tvalue: function toObj() {\n\n\t\t\tOP.Multilingual.unTranslate(this, this, [\"label\"]);\n\n\t\t\t// // for each Object: compile to json\n\t\t\tvar currFields = [];\n\t\t\tthis._fields.forEach(function (obj) {\n\t\t\t\tcurrFields.push(obj.toObj());\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tid: this.id,\n\t\t\t\tname: this.name,\n\t\t\t\tlabelFormat: this.labelFormat,\n\t\t\t\tisImported: this.isImported,\n\t\t\t\turlPath: this.urlPath,\n\t\t\t\timportFromObject: this.importFromObject,\n\t\t\t\tobjectWorkspace: this.objectWorkspace,\n\t\t\t\ttranslations: this.translations,\n\t\t\t\tfields: currFields\n\t\t\t};\n\t\t}\n\n\t\t///\n\t\t/// Fields\n\t\t///\n\n\n\t\t/**\n   * @method fields()\n   *\n   * return an array of all the ABFields for this ABObject.\n   *\n   * @return {array}\n   */\n\n\t}, {\n\t\tkey: \"fields\",\n\t\tvalue: function fields(filter) {\n\n\t\t\tfilter = filter || function () {\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\treturn this._fields.filter(filter);\n\t\t}\n\n\t\t/**\n   * @method fieldNew()\n   *\n   * return an instance of a new (unsaved) ABField that is tied to this\n   * ABObject.\n   *\n   * NOTE: this new field is not included in our this.fields until a .save()\n   * is performed on the field.\n   *\n   * @return {ABField}\n   */\n\n\t}, {\n\t\tkey: \"fieldNew\",\n\t\tvalue: function fieldNew(values) {\n\t\t\t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n\t\t\treturn _ABFieldManager2.default.newField(values, this);\n\t\t}\n\n\t\t/**\n   * @method fieldSave()\n   *\n   * save the given ABField in our ._fields array and persist the current\n   * values.\n   *\n   * @param {ABField} field The instance of the field to save.\n   * @return {Promise}\n   */\n\n\t}, {\n\t\tkey: \"fieldSave\",\n\t\tvalue: function fieldSave(field) {\n\t\t\tvar isIncluded = this.fields(function (o) {\n\t\t\t\treturn o.id == field.id;\n\t\t\t}).length > 0;\n\t\t\tif (!isIncluded) {\n\t\t\t\tthis._fields.push(field);\n\t\t\t}\n\n\t\t\treturn this.save();\n\t\t}\n\n\t\t///\n\t\t///\tObject Workspace Settings\n\t\t///\n\n\n\t}, {\n\t\tkey: \"columnHeaders\",\n\n\n\t\t///\n\t\t/// Working with Actual Object Values:\n\t\t///\n\n\t\t// return the column headers for this object\n\t\t// @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n\t\tvalue: function columnHeaders(isObjectWorkspace) {\n\n\t\t\tvar headers = [];\n\t\t\tvar idLookup = {};\n\n\t\t\t// get the header for each of our fields:\n\t\t\tthis._fields.forEach(function (f) {\n\t\t\t\tvar header = f.columnHeader(isObjectWorkspace);\n\t\t\t\theaders.push(header);\n\t\t\t\tidLookup[header.id] = f.id; // name => id\n\t\t\t});\n\n\t\t\t// update our headers with any settings applied in the Object Workspace\n\t\t\tif (isObjectWorkspace) {\n\n\t\t\t\t// set column width to adjust:true by default;\n\t\t\t\theaders.forEach(function (h) {\n\t\t\t\t\th.adjust = true;\n\t\t\t\t});\n\n\t\t\t\t// hide any hiddenfields\n\t\t\t\tthis.workspaceHiddenFields.forEach(function (hfID) {\n\t\t\t\t\theaders.forEach(function (h) {\n\t\t\t\t\t\tif (idLookup[h.id] == hfID) {\n\t\t\t\t\t\t\th.hidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn headers;\n\t\t}\n\t}, {\n\t\tkey: \"workspaceHiddenFields\",\n\t\tget: function get() {\n\t\t\treturn this.objectWorkspace.hiddenFields;\n\t\t},\n\t\tset: function set(fields) {\n\t\t\tthis.objectWorkspace.hiddenFields = fields;\n\t\t}\n\t}]);\n\n\treturn ABObject;\n}();\n\nexports.default = ABObject;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* \nieldComponent\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * \nn ABFieldComponent defines the UI component used by an ABField to display it's properties.\nnn\nvar _ABField = __webpack_require__(10);\n\nvar _ABField2 = _interopRequireDefault(_ABField);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nvar ABFieldComponent = function () {\n\tfunction ABFieldComponent(options) {\n\t\t_classCallCheck(this, ABFieldComponent);\n\n\t\tthis.options = options;\n\n\t\tthis.fieldDefaults = options.fieldDefaults || {};\n\n\t\tthis.elements = options.elements || function (App) {\n\t\t\treturn [];\n\t\t};\n\n\t\tthis.defaultValues = options.defaultValues || {};\n\n\t\tthis.rules = options.rules || {};\n\n\t\tthis.logic = options.logic || {};\n\n\t\tthis.init = options.init || function () {};\n\n\t\tthis.idBase = this.fieldDefaults.name || '??fieldName??';\n\n\t\t// this.ids = options.ids || {};\n\t\tthis.ids = {};\n\t}\n\n\t///\n\t/// Static Methods\n\t///\n\t/// Available to the Class level object.  These methods are not dependent\n\t/// on the instance values of the Application.\n\t///\n\n\n\t///\n\t/// Instance Methods\n\t///\n\n\t_createClass(ABFieldComponent, [{\n\t\tkey: 'component',\n\t\tvalue: function component(App) {\n\t\t\tvar _this = this;\n\n\t\t\t// for each provided element: create an this.ids for it:\n\t\t\tvar elements = this.elements(App);\n\t\t\telements.forEach(function (e) {\n\t\t\t\tif (e.name) {\n\t\t\t\t\t_this.ids[e.name] = e.name;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar ids = {\n\n\t\t\t\tcomponent: App.unique(this.idBase + '_component'),\n\n\t\t\t\t// the common property fields\n\t\t\t\tlabel: App.unique(this.idBase + '_label'),\n\t\t\t\tcolumnName: App.unique(this.idBase + '_columnName'),\n\t\t\t\tfieldDescription: App.unique(this.idBase + '_fieldDescription'),\n\t\t\t\tshowIcon: App.unique(this.idBase + '_showIcon')\n\t\t\t};\n\n\t\t\t// make sure to include this instances element's ids into our list:\n\t\t\tfor (var i in this.ids) {\n\t\t\t\tids[i] = App.unique(this.idBase + '_' + i);\n\t\t\t}\n\n\t\t\t// update our elements to include our ids:\n\t\t\telements.forEach(function (e) {\n\t\t\t\tif (e.name) {\n\t\t\t\t\te.id = ids[e.name];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//// NOTE: we merge in the common headers below.\n\t\t\tvar _ui = {\n\t\t\t\tview: 'form',\n\t\t\t\tid: ids.component,\n\t\t\t\tautoheight: true,\n\t\t\t\tborderless: true,\n\t\t\t\telements: [\n\t\t\t\t\t// {\n\t\t\t\t\t// \tview: \"text\",\n\t\t\t\t\t// \tid: ids.textDefault,\n\t\t\t\t\t// \tname:'textDefault',\n\t\t\t\t\t// \tplaceholder: labels.component.defaultText\n\t\t\t\t\t// },\n\t\t\t\t\t// {\n\t\t\t\t\t// \tview: \"checkbox\",\n\t\t\t\t\t// \tid: ids.supportMultilingual,\n\t\t\t\t\t// \tname:'supportMultilingual',\n\t\t\t\t\t// \tlabelRight: labels.component.supportMultilingual,\n\t\t\t\t\t// \tlabelWidth: 0,\n\t\t\t\t\t// \tvalue: true\n\t\t\t\t\t// }\n\t\t\t\t],\n\n\t\t\t\trules: {\n\t\t\t\t\t'label': webix.rules.isNotEmpty,\n\t\t\t\t\t'columnName': webix.rules.isNotEmpty\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar _init = function _init() {\n\n\t\t\t\t// call our provided .init() routine\n\t\t\t\tthis.init(ids);\n\t\t\t};\n\n\t\t\tvar _logic = {\n\n\t\t\t\t/*\n     * @function clear\n     *\n     * clear the form.\n     */\n\t\t\t\tclear: function clear() {\n\n\t\t\t\t\t_ABField2.default.clearEditor(ids);\n\n\t\t\t\t\tfor (var f in _this.defaultValues) {\n\t\t\t\t\t\tvar component = $$(ids[f]);\n\t\t\t\t\t\tif (component) {\n\t\t\t\t\t\t\tcomponent.setValue(_this.defaultValues[f]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.warn('!! could not find component for default value: name:' + f + ' id:' + ids[f]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$$(ids.component).clearValidation();\n\n\t\t\t\t\t// perform provided .clear()\n\t\t\t\t\tif (_this.logic.clear) {\n\t\t\t\t\t\t_this.logic.clear(ids);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/*\n     * @function isValid\n     *\n     * checks the current values on the componet to see if they are Valid\n     */\n\t\t\t\tisValid: function isValid() {\n\n\t\t\t\t\tvar isValid = $$(ids.component).validate();\n\n\t\t\t\t\t// perform provided .isValid()\n\t\t\t\t\tif (_this.logic.isValid) {\n\t\t\t\t\t\tisValid = _this.logic.isValid(ids, isValid);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn isValid;\n\t\t\t\t},\n\n\t\t\t\t/*\n     * @function labelOnChange\n     *\n     * The ABField.definitionEditor implements a default operation\n     * to update the value of the .columnName with the current value of \n     * label.\n     * \n     * if you want to override that functionality, implement this fn()\n     *\n     * @param {string} newVal\tThe new value of label\n     * @param {string} oldVal\tThe previous value\n     */\n\t\t\t\t// labelOnChange: function (newVal, oldVal) {\n\n\t\t\t\t// \t// When the Label value changes, update our Column Name value \n\t\t\t\t// \t// to match.\n\n\t\t\t\t// \toldVal = oldVal || '';\n\t\t\t\t// \tif (newVal != oldVal &&\n\t\t\t\t// \t\toldVal == $$(ids.columnName).getValue()) {\n\t\t\t\t// \t\t$$(ids.columnName).setValue(newVal);\n\t\t\t\t// \t}\n\t\t\t\t// },\n\n\n\t\t\t\t/*\n     * @function populate\n     *\n     * populate the form with the given ABField instance provided.\n     *\n     * @param {ABField} field\n     */\n\t\t\t\tpopulate: function populate(field) {\n\n\t\t\t\t\tconsole.error('TODO: .populate()');\n\n\t\t\t\t\t// populate the base ABField values:\n\t\t\t\t\t_ABField2.default.editorPopulate(ids, field);\n\n\t\t\t\t\telements.forEach(function (e) {\n\t\t\t\t\t\t$$(ids[e.name]).setValue(field.settings[e.name]);\n\t\t\t\t\t});\n\t\t\t\t},\n\n\t\t\t\t/*\n     * @function show\n     *\n     * show this component.\n     */\n\t\t\t\tshow: function show() {\n\t\t\t\t\t$$(ids.component).clearValidation();\n\t\t\t\t\t$$(ids.component).show();\n\n\t\t\t\t\t// perform provided .show()\n\t\t\t\t\tif (_this.logic.show) {\n\t\t\t\t\t\t_this.logic.show(ids);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/*\n     * @function values\n     *\n     * return the values for this form.\n     * @return {obj}  \n     */\n\t\t\t\tvalues: function values() {\n\n\t\t\t\t\tvar settings = $$(ids.component).getValues();\n\t\t\t\t\tvar values = _ABField2.default.editorValues(settings);\n\n\t\t\t\t\tvalues.type = _this.fieldDefaults.type;\n\n\t\t\t\t\t// perform provided .values()\n\t\t\t\t\tif (_this.logic.values) {\n\t\t\t\t\t\tvalues = _this.logic.values(ids, values);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn values;\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\t// apply additional logic functions:\n\t\t\tfor (var l in this.logic) {\n\t\t\t\tif (!_logic[l]) _logic[l] = this.logic[l];\n\t\t\t}\n\n\t\t\t// make sure our given elements, have an id set:\n\n\n\t\t\t// get the common UI headers entries, and insert them above ours here:\n\t\t\t// NOTE: put this here so that _logic is defined.\n\t\t\tvar commonUI = _ABField2.default.definitionEditor(App, ids, _logic, this.fieldDefaults);\n\t\t\t_ui.elements = commonUI.rows.concat(elements);\n\n\t\t\t// return the current instance of this component:\n\t\t\treturn this._component = {\n\t\t\t\tui: _ui, // {obj} \tthe webix ui definition for this component\n\t\t\t\tinit: _init, // {fn} \tinit() to setup this component  \n\t\t\t\t// actions:_actions,\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\n\n\t\t\t\t// DataField exposed actions:\n\t\t\t\tclear: _logic.clear,\n\t\t\t\tisValid: _logic.isValid,\n\t\t\t\tpopulate: _logic.populate,\n\t\t\t\tshow: _logic.show,\n\t\t\t\tvalues: _logic.values,\n\n\t\t\t\t_logic: _logic // {obj} \tUnit Testing\n\t\t\t};\n\t\t}\n\n\t\t// populate(field) {\n\t\t// \tthis._component.populate(field);\n\t\t// }\n\n\t}]);\n\n\treturn ABFieldComponent;\n}();\n\nexports.default = ABFieldComponent;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _ABField2 = __webpack_require__(10);\n\nvar _ABField3 = _interopRequireDefault(_ABField2);\n\nvar _ABFieldComponent = __webpack_require__(14);\n\nvar _ABFieldComponent2 = _interopRequireDefault(_ABFieldComponent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\nieldString\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * An ABFieldString defines a string field type.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nvar ABFieldStringDefaults = {\n\tname: 'string', // unique key to reference this specific DataField\n\ttype: 'string', // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\ticon: 'font', // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\t\t\n\n\t// menuName: what gets displayed in the Editor drop list\n\tmenuName: L('ab.dataField.string.menuName', '*Single line text'),\n\n\t// description: what gets displayed in the Editor description.\n\tdescription: L('ab.dataField.string.description', '*short string value')\n};\n\n/**\n * ABFieldStringComponent\n *\n * Defines the UI Component for this Data Field.  The ui component is responsible\n * for displaying the properties editor, populating existing data, retrieving\n * property values, etc.\n *\n * @param {obj} App  the current Component Application instance for the current UI.\n * @return {obj} the Component object.\n */\n// var ABFieldStringComponent = function(App) {\n\n// \tlabels.common = App.labels;\n\n// \tvar idBase = 'ab_datafield_string';\n\n\n// \tvar componentDefaults = {\n// \t\ttextDefault: '', \n// \t\tsupportMultilingual:1\n// \t};\n\n\n// \tvar ids = {\n\n// \t\tcomponent: App.unique(idBase+'_component'),\n\n\n// \t\ttextDefault: App.unique(idBase+'_textdefault'),\n// \t\tsupportMultilingual: App.unique(idBase+'_supportMultilingual'),\n\n\n// \t\t// the common property fields\n// \t\tlabel: App.unique(idBase+'_label'),\n// \t\tcolumnName: App.unique(idBase+'_columnName'),\n// \t\tfieldDescription: App.unique(idBase+'_fieldDescription'),\n// \t\tshowIcon: App.unique(idBase+'_showIcon'),\n// \t}\n\n\n// \t//// NOTE: we merge in the common headers below.\n// \tvar _ui = {\n// \t\tview:'form',\n// \t\tid: ids.component,\n// \t\tautoheight:true,\n// \t\tborderless:true,\n// \t\telements: [\n// \t\t\t{\n// \t\t\t\tview: \"text\",\n// \t\t\t\tid: ids.textDefault,\n// \t\t\t\tname:'textDefault',\n// \t\t\t\tplaceholder: labels.component.defaultText\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tview: \"checkbox\",\n// \t\t\t\tid: ids.supportMultilingual,\n// \t\t\t\tname:'supportMultilingual',\n// \t\t\t\tlabelRight: labels.component.supportMultilingual,\n// \t\t\t\tlabelWidth: 0,\n// \t\t\t\tvalue: true\n// \t\t\t}\n// \t\t],\n\n// \t\trules:{\n// \t\t\t'label':webix.rules.isNotEmpty,\n// \t\t\t'columnName':webix.rules.isNotEmpty\n// \t\t}\n// \t}\n\n\n// \tvar _init = function() {\n\n// \t\t// perform any additional setup actions.\n// \t\t// for example, don't want to show the description, then .hide() it here:\n// \t\t// $$(ids.fieldDescription).hide();\n// \t}\n\n\n// \tvar _logic = {\n\n// \t\t/*\n// \t\t * @function clear\n// \t\t *\n// \t\t * clear the form.\n// \t\t */\n// \t\tclear: function () {\n\n// \t\t\tABField.clearEditor(App, ids);\n\n// \t\t\tfor(var f in componentDefaults) { \n// \t\t\t\tvar component = $$(ids[f]);\n// \t\t\t\tcomponent.setValue(componentDefaults[f]);\n// \t\t\t}\n\n// \t\t\t$$(ids.component).clearValidation();\n// \t\t},\n\n\n// \t\t/*\n// \t\t * @function isValid\n// \t\t *\n// \t\t * checks the current values on the componet to see if they are Valid\n// \t\t */\n// \t\tisValid: function () {\n\n// \t\t\treturn $$(ids.component).validate();\n\n// \t\t},\n\n\n// \t\t * @function labelOnChange\n// \t\t *\n// \t\t * The ABField.definitionEditor implements a default operation\n// \t\t * to update the value of the .columnName with the current value of \n// \t\t * label.\n// \t\t * \n// \t\t * if you want to override that functionality, implement this fn()\n// \t\t *\n// \t\t * @param {string} newVal\tThe new value of label\n// \t\t * @param {string} oldVal\tThe previous value\n\n// \t\t// labelOnChange: function (newVal, oldVal) {\n\n// \t\t// \t// When the Label value changes, update our Column Name value \n// \t\t// \t// to match.\n\n// \t\t// \toldVal = oldVal || '';\n// \t\t// \tif (newVal != oldVal &&\n// \t\t// \t\toldVal == $$(ids.columnName).getValue()) {\n// \t\t// \t\t$$(ids.columnName).setValue(newVal);\n// \t\t// \t}\n// \t\t// },\n\n\n// \t\t/*\n// \t\t * @function populate\n// \t\t *\n// \t\t * populate the form with the given ABField instance provided.\n// \t\t *\n// \t\t * @param {ABFieldString} field\n// \t\t */\n// \t\tpopulate: function (field) {\n// console.error('TODO: .populate()');\n// \t\t},\n\n\n// \t\t/*\n// \t\t * @function show\n// \t\t *\n// \t\t * show this component.\n// \t\t */\n// \t\tshow: function() {\n// \t\t\t$$(ids.component).clearValidation();\n// \t\t\t$$(ids.component).show();\n// \t\t},\n\n\n// \t\t/*\n// \t\t * @function values\n// \t\t *\n// \t\t * return the values for this form.\n// \t\t * @return {obj}  \n// \t\t */\n// \t\tvalues: function () {\n\n// \t\t\tvar settings = $$(ids.component).getValues();\n// \t\t\tvar values = ABField.editorValues(settings);\n\n// \t\t\tvalues.type = ABFieldStringDefaults.type;\n\n// \t\t\treturn values;\n// \t\t}\n\n// \t}\n\n\n// \t// get the common UI headers entries, and insert them above ours here:\n// \t// NOTE: put this here so that _logic is defined.\n// \tvar commonUI = ABField.definitionEditor(App, ids, _logic, ABFieldStringDefaults);\n// \t_ui.elements = commonUI.rows.concat(_ui.elements);\n\n\n// \t// return the current instance of this component:\n// \treturn {\n// \t\tui:_ui,\t\t\t\t\t// {obj} \tthe webix ui definition for this component\n// \t\tinit:_init,\t\t\t\t// {fn} \tinit() to setup this component  \n// \t\t// actions:_actions,\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\n\n// \t\t// DataField exposed actions:\n// \t\tclear: _logic.clear,\n// \t\tisValid:_logic.isValid,\n// \t\tpopulate: _logic.populate,\n// \t\tshow: _logic.show,\n// \t\tvalues: _logic.values,\n\n\n// \t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n// \t}\n// }\n\n\nvar ABFieldStringComponent = new _ABFieldComponent2.default({\n\n\tfieldDefaults: ABFieldStringDefaults,\n\n\telements: function elements(App) {\n\t\treturn [{\n\t\t\tview: \"text\",\n\t\t\tname: 'textDefault',\n\t\t\tlabelWidth: App.config.labelWidthLarge,\n\t\t\tplaceholder: L('ab.dataField.string.default', '*Default text')\n\t\t}, {\n\t\t\tview: \"checkbox\",\n\t\t\tname: 'supportMultilingual',\n\t\t\tlabelRight: L('ab.dataField.string.supportMultilingual', '*Support multilingual'),\n\t\t\tlabelWidth: App.config.labelWidthCheckbox,\n\t\t\tvalue: true\n\t\t}];\n\t},\n\n\t// defaultValues: the keys must match a .name of your elements to set it's default value.\n\tdefaultValues: {\n\t\t'textDefault': '',\n\t\t'supportMultilingual': 1\n\t},\n\n\t// rules: basic form validation rules for webix form entry.\n\t// the keys must match a .name of your .elements for it to apply\n\trules: {\n\t\t// 'textDefault':webix.rules.isNotEmpty,\n\t\t// 'supportMultilingual':webix.rules.isNotEmpty\n\t},\n\n\t// include additional behavior on default component operations here:\n\t// The base routines will be processed first, then these.  Any results\n\t// from the base routine, will be passed on to these: \n\t// \t@param {obj} ids  the list of ids used to generate the UI.  your \n\t//\t\t\t\t\t  provided .elements will have matching .name keys\n\t//\t\t\t\t\t  to access them here.\n\t//  @param {obj} values the current set of values provided for this instance\n\t// \t\t\t\t\t  of ABField:\n\t//\t\t\t\t\t  {\n\t//\t\t\t\t\t\tid:'',\t\t\t// if already .saved()\n\t// \t\t\t\t\t\tlabel:'',\n\t// \t\t\t\t\t\tcolumnName:'',\n\t//\t\t\t\t\t\tsettings:{\n\t//\t\t\t\t\t\t\tshowIcon:'',\n\t//\n\t//\t\t\t\t\t\t\tyour element key=>values here\t\n\t//\t\t\t\t\t\t}\n\t//\t\t\t\t\t  }\n\t//\n\t// \t\t.clear(ids)  : reset the display to an empty state\n\t// \t\t.isValid(ids, isValid): perform validation on the current editor values\n\t// \t\t.populate(ids, values) : populate the form with your current settings\n\t// \t\t.show(ids)   : display the form in the editor\n\t// \t\t.values(ids, values) : return the current values from the form\n\tlogic: {},\n\n\t// perform any additional setup actions here.\n\t// @param {obj} ids  the hash of id values for all the current form elements.\n\t//\t\t\t\t\t it should have your elements + the default Header elements:\n\t//\t\t\t\t\t\t.label, .columnName, .fieldDescription, .showIcon\n\tinit: function init(ids) {\n\t\t// want to hide the description? :\n\t\t// $$(ids.fieldDescription).hide();\n\t}\n\n});\n\nvar ABFieldString = function (_ABField) {\n\t_inherits(ABFieldString, _ABField);\n\n\tfunction ABFieldString(values, object) {\n\t\t_classCallCheck(this, ABFieldString);\n\n\t\t/*\n  {\n  settings: {\n  textDefault: 'string',\n  supportMultilingual: true/false\n  }\n  }\n  */\n\n\t\t// we're responsible for setting up our specific settings:\n\t\tvar _this = _possibleConstructorReturn(this, (ABFieldString.__proto__ || Object.getPrototypeOf(ABFieldString)).call(this, values, object, ABFieldStringDefaults));\n\n\t\t_this.settings.textDefault = values.settings.textDefault || '';\n\t\t_this.settings.supportMultilingual = values.settings.supportMultilingual + \"\" || \"1\";\n\n\t\t// text to Int:\n\t\t_this.settings.supportMultilingual = parseInt(_this.settings.supportMultilingual);\n\n\t\treturn _this;\n\t}\n\n\t// return the default values for this DataField\n\n\n\t_createClass(ABFieldString, [{\n\t\tkey: \"isValid\",\n\n\n\t\t///\n\t\t/// Instance Methods\n\t\t///\n\n\n\t\tvalue: function isValid() {\n\n\t\t\tvar errors = _get(ABFieldString.prototype.__proto__ || Object.getPrototypeOf(ABFieldString.prototype), \"isValid\", this).call(this);\n\n\t\t\t// errors = OP.Form.validationError({\n\t\t\t// \tname:'columnName',\n\t\t\t// \tmessage:L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name),\n\t\t\t// }, errors);\n\n\t\t\treturn errors;\n\t\t}\n\n\t\t/**\n   * @method toObj()\n   *\n   * properly compile the current state of this ABApplication instance\n   * into the values needed for saving to the DB.\n   *\n   * Most of the instance data is stored in .json field, so be sure to\n   * update that from all the current values of our child fields.\n   *\n   * @return {json}\n   */\n\t\t// toObj () {\n\n\t\t// \tvar obj = super.toObj();\n\n\t\t// \t// obj.settings = this.settings;  // <--  super.toObj()\n\n\t\t// \treturn obj;\n\t\t// }\n\n\n\t\t///\n\t\t/// Working with Actual Object Values:\n\t\t///\n\n\t\t// return the grid column header definition for this instance of ABFieldString\n\n\t}, {\n\t\tkey: \"columnHeader\",\n\t\tvalue: function columnHeader(isObjectWorkspace) {\n\t\t\tvar config = _get(ABFieldString.prototype.__proto__ || Object.getPrototypeOf(ABFieldString.prototype), \"columnHeader\", this).call(this, isObjectWorkspace);\n\n\t\t\tconfig.editor = 'text';\n\t\t\tconfig.sort = 'string';\n\n\t\t\treturn config;\n\t\t}\n\t}], [{\n\t\tkey: \"defaults\",\n\t\tvalue: function defaults() {\n\t\t\treturn ABFieldStringDefaults;\n\t\t}\n\n\t\t/*\n   * @function propertiesComponent\n   *\n   * return a UI Component that contains the property definitions for this Field.\n   *\n   * @param {App} App the UI App instance passed around the Components.\n   * @return {Component}\n   */\n\n\t}, {\n\t\tkey: \"propertiesComponent\",\n\t\tvalue: function propertiesComponent(App) {\n\t\t\treturn ABFieldStringComponent.component(App);\n\t\t}\n\t}]);\n\n\treturn ABFieldString;\n}(_ABField3.default);\n\nexports.default = ABFieldString;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\n__webpack_require__(18);\n\n__webpack_require__(17);\n\n/*\n * AB Choose\n *\n * When choosing an initial application to work with, we can\n *   - select an application from a list  :  ab_choose_list\n *   - create an application from a form  :  ab_choose_form\n *\n */\n\nvar idBase = 'ab_choose';\nOP.Component.extend(idBase, function (App) {\n\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component')\n\t};\n\n\t// Define the external components used in this Component:\n\tvar AppList = OP.Component['ab_choose_list'](App);\n\tvar AppForm = OP.Component['ab_choose_form'](App);\n\n\t// This component's UI definition:\n\t// Application multi-views\n\tvar _ui = {\n\t\tview: \"multiview\",\n\t\tanimate: false,\n\t\tid: ids.component,\n\t\tcells: [AppList.ui, AppForm.ui]\n\t};\n\n\t// This component's Init definition:\n\tvar _init = function _init() {\n\n\t\tAppList.init();\n\t\tAppForm.init();\n\t};\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\t\t/**\n   * @function transitionApplicationChooser\n   *\n   * Switch the AppBuilder UI to show the Application Chooser component.\n   */\n\t\ttransitionApplicationChooser: function transitionApplicationChooser() {\n\t\t\t$$(ids.component).show();\n\t\t}\n\n\t};\n\n\tvar _logic = {};\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui: _ui,\n\t\tinit: _init,\n\t\tactions: _actions,\n\n\t\t_logic: _logic // Unit Testing\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\nvar _ABApplication = __webpack_require__(1);\n\nvar _ABApplication2 = _interopRequireDefault(_ABApplication);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n/*\n * AB Choose Form\n *\n * Display the form for creating a new Application.\n *\n */\n\nvar labels = {\n\n\tcomponent: {\n\n\t\tformHeader: L('ab.application.form.header', \"*Application Info\"),\n\t\tplaceholderName: L('ab.application.form.placeholderName', \"*Application name\"),\n\t\tplaceholderDescription: L('ab.application.form.placeholderDescription', \"*Application description\"),\n\t\tformDescription: L('ab.application.form.formDescription', \"*Description\"),\n\n\t\tsectionPermission: L('ab.application.form.sectionPermission', \"*Permission\"),\n\t\tpermissionHeader: L('ab.application.form.headerPermission', \"*Who can use this app?\"),\n\t\tcreateNewRole: L('ab.application.form.createNewRoleButton', \"*Create new roll\"),\n\n\t\tinvalidName: L('ab.application.invalidName', \"*This application name is invalid\"),\n\t\tduplicateName: L('ab.application.duplicateName', \"*Name must be unique.\")\n\n\t}\n};\n\nvar idBase = 'ab_choose_form';\nOP.Component.extend(idBase, function (App) {\n\n\tlabels.common = App.labels;\n\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\n\t\tform: App.unique(idBase + '_form'),\n\t\tappFormPermissionList: App.unique(idBase + '_permission'),\n\t\tappFormCreateRoleButton: App.unique(idBase + '_createRole'),\n\n\t\tsaveButton: App.unique(idBase + '_buttonSave')\n\t};\n\n\tvar _ui = {\n\n\t\tid: ids.component,\n\t\tresponsive: \"hide\",\n\t\tcols: [{\n\t\t\tmaxWidth: App.config.appListSpacerColMaxWidth,\n\t\t\tminWidth: App.config.appListSpacerColMinWidth,\n\t\t\twidth: App.config.appListSpacerColMaxWidth\n\t\t}, {\n\t\t\tresponsiveCell: false,\n\t\t\trows: [{\n\t\t\t\tmaxHeight: App.config.appListSpacerRowHeight,\n\t\t\t\thidden: App.config.hideMobile\n\t\t\t}, {\n\t\t\t\tview: \"toolbar\",\n\t\t\t\tcols: [{ view: \"label\", label: labels.component.formHeader, fillspace: true }]\n\t\t\t}, {\n\t\t\t\tview: \"form\",\n\t\t\t\tid: ids.form,\n\t\t\t\tautoheight: true,\n\t\t\t\tmargin: 0,\n\t\t\t\telements: [\n\t\t\t\t//{ type: \"section\", template: '<span class=\"webix_icon fa-edit\" style=\"max-width:32px;\"></span>Information', margin: 0 },\n\t\t\t\t{\n\t\t\t\t\tname: \"label\",\n\t\t\t\t\tview: \"text\",\n\t\t\t\t\tlabel: labels.common.formName,\n\t\t\t\t\trequired: true,\n\t\t\t\t\tplaceholder: labels.component.placeholderName,\n\t\t\t\t\tlabelWidth: 100,\n\t\t\t\t\ton: {\n\t\t\t\t\t\tonChange: function onChange(newValue, oldValue) {\n\t\t\t\t\t\t\t_logic.permissionRenameRole(newValue, oldValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, { height: App.config.smallSpacer }, {\n\t\t\t\t\tname: \"description\",\n\t\t\t\t\tview: \"textarea\",\n\t\t\t\t\t// label: labels.common.formDescription,\n\t\t\t\t\tlabel: \"Description\",\n\t\t\t\t\tlabelAlign: \"left\",\n\t\t\t\t\tlabelWidth: 100,\n\t\t\t\t\tplaceholder: labels.component.placeholderDescription,\n\t\t\t\t\theight: 100\n\t\t\t\t}, { height: App.config.smallSpacer }, {\n\t\t\t\t\tview: \"toolbar\",\n\t\t\t\t\tcss: \"ab-toolbar-submenu\",\n\t\t\t\t\tcols: [{\n\t\t\t\t\t\ttemplate: labels.component.permissionHeader,\n\t\t\t\t\t\ttype: 'header',\n\t\t\t\t\t\tborderless: true\n\t\t\t\t\t}, {\n\t\t\t\t\t\tview: \"toggle\",\n\t\t\t\t\t\tid: ids.appFormCreateRoleButton,\n\t\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t\talign: \"right\",\n\t\t\t\t\t\tautowidth: true,\n\t\t\t\t\t\tcss: \"ab-standard-button\",\n\t\t\t\t\t\toffIcon: \"square-o\",\n\t\t\t\t\t\tonIcon: \"check-square-o\",\n\t\t\t\t\t\tlabel: labels.component.createNewRole,\n\t\t\t\t\t\ton: {\n\t\t\t\t\t\t\tonItemClick: function onItemClick(id, e) {\n\t\t\t\t\t\t\t\t_logic.createRoleButtonClick();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}]\n\t\t\t\t}, {\n\t\t\t\t\tname: \"permissions\",\n\t\t\t\t\tid: ids.appFormPermissionList,\n\t\t\t\t\tview: \"list\",\n\t\t\t\t\t//height: 130,\n\t\t\t\t\tautowidth: true,\n\t\t\t\t\tautoheight: true,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tcss: \"ab-app-form-permission\",\n\t\t\t\t\ttemplate: \"{common.markCheckbox()} #name#\",\n\t\t\t\t\ttype: {\n\t\t\t\t\t\tmarkCheckbox: function markCheckbox(obj) {\n\t\t\t\t\t\t\treturn \"<span class='check webix_icon fa-\" + (obj.markCheckbox ? \"check-\" : \"\") + \"square-o'></span>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ton: {\n\t\t\t\t\t\tonItemClick: function onItemClick(id, e, node) {\n\t\t\t\t\t\t\t_logic.permissionClick(id, e, node);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, { height: App.config.smallSpacer }, {\n\t\t\t\t\tmargin: 5,\n\t\t\t\t\tcols: [{ fillspace: true }, {\n\t\t\t\t\t\tview: \"button\",\n\t\t\t\t\t\tvalue: labels.common.cancel,\n\t\t\t\t\t\twidth: App.config.buttonWidthSmall,\n\t\t\t\t\t\tcss: \"ab-cancel-button\",\n\t\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t\t_logic.cancel();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid: ids.saveButton,\n\t\t\t\t\t\tview: \"button\",\n\t\t\t\t\t\tlabel: labels.common.save,\n\t\t\t\t\t\ttype: \"form\",\n\t\t\t\t\t\twidth: App.config.buttonWidthSmall,\n\t\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t\t_logic.buttonSaveClick();\n\t\t\t\t\t\t} // end click()\n\t\t\t\t\t}]\n\t\t\t\t}]\n\t\t\t}, {\n\t\t\t\tmaxHeight: App.config.appListSpacerRowHeight,\n\t\t\t\thidden: App.config.hideMobile\n\t\t\t}]\n\t\t}, {\n\t\t\tmaxWidth: App.config.appListSpacerColMaxWidth,\n\t\t\tminWidth: App.config.appListSpacerColMinWidth,\n\t\t\twidth: App.config.appListSpacerColMaxWidth\n\t\t}]\n\t};\n\n\tvar FormFields = ['label', 'description'];\n\n\tvar _init = function _init() {\n\t\twebix.extend($$(ids.form), webix.ProgressBar);\n\t\twebix.extend($$(ids.appFormPermissionList), webix.ProgressBar);\n\t};\n\n\tvar _logic = {\n\n\t\t/**\n   * @function applicationCreate\n   *\n   * Step through the process of creating an ABApplication with the\n   * current state of the Form.\n   *\n   * @param {obj} values \tcurrent value hash of the form values.\n   */\n\t\tapplicationCreate: function applicationCreate(values) {\n\n\t\t\tvar newApp = {\n\t\t\t\tname: values.label,\n\t\t\t\tlabel: values.label,\n\t\t\t\tdescription: values.description\n\t\t\t};\n\n\t\t\tasync.waterfall([function (cb) {\n\t\t\t\t// Create application data\n\t\t\t\t_ABApplication2.default.create(newApp).then(function (result) {\n\t\t\t\t\tcb(null, result);\n\t\t\t\t}).catch(cb);\n\t\t\t}, function (createdApp, cb) {\n\t\t\t\t_logic.permissionSave(createdApp).then(function () {\n\t\t\t\t\tcb();\n\t\t\t\t}).catch(cb);\n\t\t\t}], function (err) {\n\t\t\t\t_logic.formReady();\n\n\t\t\t\tif (err) {\n\t\t\t\t\twebix.message({\n\t\t\t\t\t\ttype: \"error\",\n\t\t\t\t\t\ttext: labels.common.createErrorMessage.replace('{0}', values.label)\n\t\t\t\t\t});\n\n\t\t\t\t\tAD.error.log('App Builder : Error create application data', { error: err });\n\n\t\t\t\t\t_logic.buttonSaveEnable();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tApp.actions.transitionApplicationList();\n\n\t\t\t\twebix.message({\n\t\t\t\t\ttype: \"success\",\n\t\t\t\t\ttext: labels.common.createSuccessMessage.replace('{0}', values.label)\n\t\t\t\t});\n\n\t\t\t\t_logic.buttonSaveEnable();\n\t\t\t});\n\t\t},\n\n\t\t/**\n   * @function applicationUpdate\n   *\n   * Step through the process of updating an ABApplication with the\n   * current state of the Form.\n   *\n   * @param {ABApplication} application\n   */\n\t\tapplicationUpdate: function applicationUpdate(Application) {\n\t\t\tvar values = _logic.formValues();\n\n\t\t\tasync.waterfall([function (next) {\n\t\t\t\t_logic.permissionSave(Application).then(function (result) {\n\t\t\t\t\tnext(null, result);\n\t\t\t\t}).catch(next);\n\t\t\t}, function (app_role, next) {\n\t\t\t\t// Update application data\n\t\t\t\tApplication.label = values.label;\n\t\t\t\tApplication.description = values.description;\n\n\t\t\t\tif (app_role && app_role.id) Application.role = app_role.id;else Application.role = null;\n\n\t\t\t\tApplication.save().then(function () {\n\t\t\t\t\tnext();\n\t\t\t\t}).catch(next);\n\t\t\t}], function (err) {\n\n\t\t\t\t_logic.formReady();\n\t\t\t\t_logic.buttonSaveEnable();\n\t\t\t\tif (err) {\n\t\t\t\t\twebix.message({\n\t\t\t\t\t\ttype: \"error\",\n\t\t\t\t\t\ttext: labels.common.updateErrorMessage.replace('{0}', Application.label)\n\t\t\t\t\t});\n\t\t\t\t\tAD.error.log('App Builder : Error update application data', { error: err });\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tApp.actions.transitionApplicationList();\n\n\t\t\t\twebix.message({\n\t\t\t\t\ttype: \"success\",\n\t\t\t\t\ttext: labels.common.updateSucessMessage.replace('{0}', Application.label)\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\n\t\t/**\n   * @function buttonSaveClick\n   *\n   * Process the user clicking on the [Save] button.\n   */\n\t\tbuttonSaveClick: function buttonSaveClick() {\n\n\t\t\t_logic.buttonSaveDisable();\n\t\t\t_logic.formBusy();\n\n\t\t\t// if there is a selected Application, then this is an UPDATE\n\t\t\tvar updateApp = App.actions.getSelectedApplication();\n\t\t\tif (updateApp) {\n\n\t\t\t\tif (_logic.formValidate('update')) {\n\n\t\t\t\t\t_logic.applicationUpdate(updateApp);\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// else this is a Create\n\t\t\t\tif (_logic.formValidate('add')) {\n\n\t\t\t\t\t_logic.applicationCreate(_logic.formValues());\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n   * @function buttonSaveDisable\n   *\n   * Disable the save button.\n   */\n\t\tbuttonSaveDisable: function buttonSaveDisable() {\n\t\t\t$$(ids.saveButton).disable();\n\t\t},\n\n\t\t/**\n   * @function buttonSaveEnable\n   *\n   * Re-enable the save button.\n   */\n\t\tbuttonSaveEnable: function buttonSaveEnable() {\n\t\t\t$$(ids.saveButton).enable();\n\t\t},\n\n\t\t/**\n   * @function cancel\n   *\n   * Cancel the current Form Operation and return us to the AppList.\n   */\n\t\tcancel: function cancel() {\n\n\t\t\t_logic.formReset();\n\t\t\tApp.actions.transitionApplicationList();\n\t\t},\n\n\t\t/**\n   * @function createRoleButtonClick\n   *\n   * The user clicked the [Create Role] button.  Update the UI and add a\n   * unique Application permission to our list.\n   */\n\t\tcreateRoleButtonClick: function createRoleButtonClick() {\n\n\t\t\tif ($$(ids.appFormCreateRoleButton).getValue()) {\n\n\t\t\t\t// TODO: if not called from anywhere else, then move the name gathering into .permissionAddNew()\n\t\t\t\t// Add new app role\n\t\t\t\tvar appName = $$(ids.form).elements[\"label\"].getValue();\n\t\t\t\t_logic.permissionAddNew(appName);\n\t\t\t} else {\n\t\t\t\t// Remove app role\n\t\t\t\t_logic.permissionRemoveNew();\n\t\t\t}\n\t\t},\n\n\t\t/**\n   * @function formBusy\n   *\n   * Show the progress indicator to indicate a Form operation is in\n   * progress.\n   */\n\t\tformBusy: function formBusy() {\n\n\t\t\t$$(ids.form).showProgress({ type: 'icon' });\n\t\t},\n\n\t\t/**\n   * @function formPopulate()\n   *\n   * populate the form values from the given ABApplication\n   *\n   * @param {ABApplication} application  instance of the ABApplication\n   */\n\t\tformPopulate: function formPopulate(application) {\n\n\t\t\tvar Form = $$(ids.form);\n\n\t\t\t// Populate data to form\n\t\t\tif (application) {\n\t\t\t\tFormFields.forEach(function (f) {\n\t\t\t\t\tif (Form.elements[f]) {\n\t\t\t\t\t\tForm.elements[f].setValue(application[f]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// _logic.permissionPopulate(application);\n\t\t},\n\n\t\t/**\n   * @function formReady()\n   *\n   * remove the busy indicator from the form.\n   */\n\t\tformReady: function formReady() {\n\t\t\t$$(ids.form).hideProgress();\n\t\t},\n\n\t\t/**\n   * @function formReset()\n   *\n   * return the form to an empty state.\n   */\n\t\tformReset: function formReset() {\n\n\t\t\t$$(ids.form).clear();\n\t\t\t$$(ids.form).clearValidation();\n\t\t\t// $$(self.webixUiids.appFormPermissionList).clearValidation();\n\t\t\t// $$(self.webixUiids.appFormPermissionList).clearAll();\n\t\t\t// $$(self.webixUiids.appFormCreateRoleButton).setValue(0);\n\t\t},\n\n\t\t/**\n   * @function formValidate()\n   *\n   * validate the form values.\n   *\n   * @return {bool}  true if all values pass validation.  false otherwise.\n   */\n\t\tformValidate: function formValidate(op) {\n\t\t\t// op : ['add', 'update', 'destroy']\n\n\t\t\tvar Form = $$(ids.form);\n\t\t\tif (!Form.validate()) {\n\t\t\t\t// TODO : Error message\n\n\t\t\t\t_logic.buttonSaveEnable();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar errors = _ABApplication2.default.isValid(op, Form.getValues());\n\t\t\tif (OP.Form.isValidationError(errors, Form)) {\n\t\t\t\t_logic.formReady();\n\t\t\t\t_logic.buttonSaveEnable();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t///// TODO: \n\t\t\t// Implement common Form Input Validations\n\t\t\t// convert this to:  \n\t\t\t// app = ABApplication.newApplication(Form.getValues())\n\t\t\t// errors = app.inValid()\n\t\t\t// if (OP.Form.isValidationError(errors, Form)) { }\n\n\n\t\t\t// var appName = $$(ids.form).elements['label'].getValue(),\n\t\t\t// \tappDescription = $$(ids.form).elements['description'].getValue();\n\n\t\t\t// if (!inputValidator.validate(appName)) {\n\t\t\t// \t_logic.buttonSaveEnable();\n\t\t\t// \treturn false;\n\t\t\t// }\n\n\t\t\t// // Prevent duplicate application name\n\t\t\t// if (self.data.filter(function (app) { return app.name.trim().toLowerCase() == appName.trim().replace(/ /g, '_').toLowerCase(); }).length > 0) {\n\t\t\t// \tOP.Dialog.Alert({\n\t\t\t// \t\ttitle: labels.component.invalidName,\n\t\t\t// \t\ttext: labels.component.duplicateName.replace(\"#appName#\", appName),\n\t\t\t// \t\tok: labels.common.ok\n\t\t\t// \t});\n\n\t\t\t// \t$$(ids.form).elements['label'].focus();\n\t\t\t// \t_logic.buttonSaveEnable();\n\t\t\t// \treturn false;\n\t\t\t// }\n\n\t\t\treturn true;\n\t\t},\n\n\t\t/**\n   * @function formValues()\n   *\n   * return an object hash of name:value pairs of the current Form.\n   *\n   * @return {obj}\n   */\n\t\tformValues: function formValues() {\n\t\t\t// return the current values of the Form elements.\n\t\t\treturn $$(ids.form).getValues();\n\t\t},\n\n\t\t/**\n   * @function permissionAddNew\n   *\n   * create a new permission entry based upon the current Application.label\n   *\n   * This not only adds it to our Permission List, but also selects it.\n   *\n   * @param {string} appName\tThe Application.label of the current Application\n   */\n\t\tpermissionAddNew: function permissionAddNew(appName) {\n\n\t\t\t// add new role entry\n\t\t\t$$(ids.appFormPermissionList).add({\n\t\t\t\tid: 'newRole',\n\t\t\t\tname: _logic.permissionName(appName),\n\t\t\t\tisApplicationRole: true,\n\t\t\t\tmarkCheckbox: 1\n\t\t\t}, 0);\n\n\t\t\t// Select new role\n\t\t\tvar selectedIds = $$(ids.appFormPermissionList).getSelectedId(true);\n\t\t\tselectedIds.push('newRole');\n\t\t\t$$(ids.appFormPermissionList).select(selectedIds);\n\t\t},\n\n\t\t/**\n   * @function permissionClick\n   *\n   * Process when a permission entry in the list is clicked.\n   */\n\t\tpermissionClick: function permissionClick(id, e, node) {\n\n\t\t\tvar List = $$(ids.appFormPermissionList);\n\n\t\t\tvar item = List.getItem(id);\n\n\t\t\tif (List.getItem(id).isApplicationRole) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (List.isSelected(id)) {\n\t\t\t\titem.markCheckbox = 0;\n\t\t\t\tList.unselect(id);\n\t\t\t} else {\n\t\t\t\titem.markCheckbox = 1;\n\t\t\t\tvar selectedIds = List.getSelectedId();\n\n\t\t\t\tif (typeof selectedIds === 'string' || !isNaN(selectedIds)) {\n\t\t\t\t\tif (selectedIds) selectedIds = [selectedIds];else selectedIds = [];\n\t\t\t\t}\n\n\t\t\t\tselectedIds.push(id);\n\n\t\t\t\tList.select(selectedIds);\n\n\t\t\t\tList.updateItem(id, item);\n\t\t\t}\n\t\t},\n\n\t\t/**\n   * @function permissionName\n   *\n   * returns a formatted name for a Permission Role based upon the provided Application.label\n   *\n   * @param {string} appName\tthe current value of the Application.label\n   * @return {string} \tPermission Role Name.\n   */\n\t\tpermissionName: function permissionName(appName) {\n\t\t\treturn appName + \" Application Role\";\n\t\t},\n\n\t\t/**\n   * @function permissionPopulate\n   *\n   * fill out the Permission list\n   *\n   * @param {ABApplication} application\tthe current ABApplication we are editing\n   */\n\t\tpermissionPopulate: function permissionPopulate(application) {\n\n\t\t\tvar PermForm = $$(ids.appFormPermissionList);\n\t\t\t// Get user's roles\n\t\t\tPermForm.showProgress({ type: 'icon' });\n\t\t\tasync.waterfall([function (next) {\n\t\t\t\tAD.comm.service.get({ url: '/app_builder/user/roles' }).fail(function (err) {\n\t\t\t\t\tnext(err);\n\t\t\t\t}).done(function (roles) {\n\n\t\t\t\t\t// scan the roles and determine if any of them have been created\n\t\t\t\t\t// after the current Application.name:\n\t\t\t\t\tvar parsedRoles = roles.map(function (r) {\n\t\t\t\t\t\tif (application) {\n\t\t\t\t\t\t\tif (r.name == _logic.permissionName(application.name.split('_').join(' '))) {\n\t\t\t\t\t\t\t\tr.isApplicationRole = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t});\n\t\t\t\t\tnext(null, parsedRoles);\n\t\t\t\t});\n\t\t\t}, function (available_roles, next) {\n\t\t\t\tif (application && application.id) {\n\t\t\t\t\tapplication.getPermissions().then(function (selected_role_ids) {\n\t\t\t\t\t\tnext(null, available_roles, selected_role_ids);\n\t\t\t\t\t}).catch(function (err) {\n\t\t\t\t\t\tnext(err);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnext(null, available_roles, []);\n\t\t\t\t}\n\t\t\t}, function (available_roles, selected_role_ids, next) {\n\n\t\t\t\t// mark the role(s) in available_roles that is tied\n\t\t\t\t// this application:\n\t\t\t\tif (application && application.role) {\n\t\t\t\t\tavailable_roles.forEach(function (r) {\n\t\t\t\t\t\tif (r.id == (application.role.id || application.role)) {\n\t\t\t\t\t\t\tr.isApplicationRole = true;\n\t\t\t\t\t\t\tr.markCheckbox = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Sort permission list\n\t\t\t\tavailable_roles.sort(function (a, b) {\n\t\t\t\t\treturn a.isApplicationRole === b.isApplicationRole ? 0 : a.isApplicationRole ? -1 : 1;\n\t\t\t\t});\n\n\t\t\t\t// reload list from our available_roles\n\t\t\t\tPermForm.clearAll();\n\t\t\t\tPermForm.parse(available_roles);\n\n\t\t\t\t// mark which roles have already been selected\n\t\t\t\tif (selected_role_ids && selected_role_ids.length > 0) {\n\t\t\t\t\t// Select permissions\n\t\t\t\t\tPermForm.select(selected_role_ids);\n\t\t\t\t\tavailable_roles.forEach(function (r) {\n\t\t\t\t\t\tif (selected_role_ids.indexOf(r.id) > -1) {\n\t\t\t\t\t\t\tvar item = $$(ids.appFormPermissionList).getItem(r.id);\n\t\t\t\t\t\t\titem.markCheckbox = 1;\n\t\t\t\t\t\t\t$$(ids.appFormPermissionList).updateItem(r.id, item);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// Select create role application button\n\t\t\t\t\tvar markCreateButton = available_roles.filter(function (r) {\n\t\t\t\t\t\treturn r.isApplicationRole;\n\t\t\t\t\t}).length > 0 ? 1 : 0;\n\t\t\t\t\t$$(ids.appFormCreateRoleButton).setValue(markCreateButton);\n\t\t\t\t}\n\n\t\t\t\tnext();\n\t\t\t}], function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\twebix.message(err.message);\n\t\t\t\t}\n\n\t\t\t\tPermForm.hideProgress();\n\t\t\t});\n\n\t\t\t// return appName  + \" Application Role\";\n\t\t},\n\n\t\t/**\n   * @function permissionRemoveNew()\n   *\n   * Intended to be called when the USER unselects the option to create a Permission\n   * for this Application.\n   *\n   * We remove any Permission Role created for this Application.\n   */\n\t\tpermissionRemoveNew: function permissionRemoveNew() {\n\n\t\t\t// find any roles that are put here from our application form:\n\t\t\tvar appRoles = $$(ids.appFormPermissionList).find(function (perm) {\n\t\t\t\treturn perm.isApplicationRole;\n\t\t\t});\n\n\t\t\t// remove them:\n\t\t\tappRoles.forEach(function (r) {\n\t\t\t\t$$(ids.appFormPermissionList).remove(r.id);\n\t\t\t});\n\t\t},\n\n\t\t/*\n   * permissionRenameRole\n   *\n   * When the name of the Appliction changes, change the Name of the Permission as well.\n   *\n   * @param {string} newValue  the current name of the application\n   * @param {string} oldValue  the previous name of the application\n   */\n\t\tpermissionRenameRole: function permissionRenameRole(newValue, oldValue) {\n\n\t\t\tvar editRole = $$(ids.appFormPermissionList).find(function (d) {\n\t\t\t\treturn d.name === _logic.permissionName(oldValue);\n\t\t\t});\n\n\t\t\teditRole.forEach(function (r) {\n\t\t\t\tvar editItem = $$(ids.appFormPermissionList).getItem(r.id);\n\t\t\t\teditItem.name = _logic.permissionName(newValue);\n\n\t\t\t\t$$(ids.appFormPermissionList).updateItem(editItem.id, editItem);\n\t\t\t});\n\t\t},\n\n\t\t/**\n   * @function permissionSave()\n   *\n   * step through saving the current Permission Settings and associating\n   * them with the current Application.\n   *\n   * @param {ABApplication} App  \tThe current Application we are working with.\n   * @return {Promise}\t\t\t.resolve( {Permission} ) if one is created for this App\n   */\n\t\tpermissionSave: function permissionSave(app) {\n\t\t\t//// REFACTOR:\n\t\t\t// this step implies that ab_choose_form understands the intracies of how\n\t\t\t// ABApplication and Permissions work.\n\t\t\treturn new Promise(function (resolve, reject) {\n\n\t\t\t\tvar saveRoleTasks = [],\n\t\t\t\t    appRole = null;\n\n\t\t\t\t//// Process the option to create a newRole For this Application:\n\n\t\t\t\t// if the button is set\n\t\t\t\tif ($$(ids.appFormCreateRoleButton).getValue()) {\n\n\t\t\t\t\t// check to see if we already have a permission that isApplicationRole\n\t\t\t\t\tvar selectedPerms = $$(ids.appFormPermissionList).getSelectedItem(true);\n\t\t\t\t\tselectedPerms = selectedPerms.filter(function (perm) {\n\t\t\t\t\t\treturn perm.isApplicationRole;\n\t\t\t\t\t});\n\n\t\t\t\t\t// if not, then create one:\n\t\t\t\t\tif (selectedPerms.length == 0) {\n\n\t\t\t\t\t\t// Create new role for application\n\t\t\t\t\t\tsaveRoleTasks.push(function (cb) {\n\t\t\t\t\t\t\tapp.createPermission().then(function (result) {\n\n\t\t\t\t\t\t\t\t// remember the Role we just created\n\t\t\t\t\t\t\t\tappRole = result;\n\t\t\t\t\t\t\t\tcb();\n\t\t\t\t\t\t\t}).catch(cb);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Delete any existing application roles\n\t\t\t\t\tsaveRoleTasks.push(function (cb) {\n\t\t\t\t\t\tapp.deletePermission().then(function () {\n\t\t\t\t\t\t\tcb();\n\t\t\t\t\t\t}).catch(cb);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t//// Now process any additional roles:\n\n\t\t\t\t// get array of selected permissions that are not our newRole\n\t\t\t\tvar permItems = $$(ids.appFormPermissionList).getSelectedItem(true);\n\t\t\t\tpermItems = permItems.filter(function (item) {\n\t\t\t\t\treturn item.id !== 'newRole';\n\t\t\t\t}); // Remove new role item\n\n\n\t\t\t\t// Make sure Application is linked to selected permission items:\n\t\t\t\tsaveRoleTasks.push(function (cb) {\n\n\t\t\t\t\t// ok, so we removed the 'newRole' entry, but we might\n\t\t\t\t\t// have created an entry for it earlier, if so, add in\n\t\t\t\t\t// the created one here:\n\t\t\t\t\tif ($$(ids.appFormCreateRoleButton).getValue() && appRole) {\n\n\t\t\t\t\t\t// make sure it isn't already in there:\n\t\t\t\t\t\tvar appRoleItem = permItems.filter(function (item) {\n\t\t\t\t\t\t\treturn item.id == appRole.id;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!appRoleItem || appRoleItem.length < 1) {\n\n\t\t\t\t\t\t\t// if not, add it :\n\t\t\t\t\t\t\tpermItems.push({\n\t\t\t\t\t\t\t\tid: appRole.id,\n\t\t\t\t\t\t\t\tisApplicationRole: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Assign Role Permissions\n\t\t\t\t\tapp.assignPermissions(permItems).then(function () {\n\t\t\t\t\t\tcb();\n\t\t\t\t\t}).catch(cb);\n\t\t\t\t});\n\n\t\t\t\tasync.series(saveRoleTasks, function (err, results) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// we return the instance of the newly created Permission.\n\t\t\t\t\t\tresolve(appRole);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t//// REFACTOR QUESTION:\n\t\t\t// why are we updating the app.permissions with this data structure?\n\t\t\t// where is this data structure being used?\n\t\t\t// Earlier we are using another structure (permissionAddNew()) ... how is that related to this?\n\n\t\t\t// // Final task\n\t\t\t// saveRoleTasks.push(function (cb) {\n\t\t\t// \t// Update store app data\n\t\t\t// \tvar applicationData = self.data.filter(function (d) { return d.id == app.id; });\n\t\t\t// \tapplicationData.forEach(function (app) {\n\t\t\t// \t\tapp.attr('permissions', $.map(permItems, function (item) {\n\t\t\t// \t\t\treturn {\n\t\t\t// \t\t\t\tapplication: app.id,\n\t\t\t// \t\t\t\tpermission: item.id,\n\t\t\t// \t\t\t\tisApplicationRole: item.isApplicationRole\n\t\t\t// \t\t\t}\n\t\t\t// \t\t}));\n\t\t\t// \t});\n\n\t\t\t// \tq.resolve(appRole);\n\t\t\t// \tcb();\n\t\t\t// })\n\t\t},\n\n\t\t/**\n   * @function show()\n   *\n   * Show the Form Component.\n   */\n\t\tshow: function show() {\n\n\t\t\t$$(ids.component).show();\n\t\t}\n\t};\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\t\t// initiate a request to create a new Application\n\t\ttransitionApplicationForm: function transitionApplicationForm(application) {\n\n\t\t\t// if no application is given, then this should be a [create] operation,\n\n\t\t\t// so clear our AppList\n\t\t\tif ('undefined' == typeof application) {\n\t\t\t\tApp.actions.unselectApplication();\n\t\t\t}\n\n\t\t\t// now prepare our form:\n\t\t\t_logic.formReset();\n\t\t\tif (application) {\n\t\t\t\t// populate Form here:\n\t\t\t\t_logic.formPopulate(application);\n\t\t\t}\n\t\t\t_logic.permissionPopulate(application);\n\t\t\t_logic.show();\n\t\t}\n\n\t};\n\n\treturn {\n\t\tui: _ui,\n\t\tinit: _init,\n\t\tactions: _actions,\n\n\t\t_logic: _logic\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\nvar _ABApplication = __webpack_require__(1);\n\nvar _ABApplication2 = _interopRequireDefault(_ABApplication);\n\n__webpack_require__(19);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * AB Choose List\n *\n * Display a list of Applications for the user to select.\n *\n */\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nvar labels = {\n\n\tcomponent: {\n\t\ttitle: L('ab.application.application', '*Application'),\n\n\t\tcreateNew: L('ab.application.createNew', '*Add new application'),\n\t\tnoApplication: L('ab.application.noApplication', \"*There is no application data\")\n\t}\n};\n\nvar idBase = 'ab_choose_list';\nOP.Component.extend(idBase, function (App) {\n\n\tlabels.common = App.labels;\n\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\n\t\tuploader: App.unique(idBase + '_uploader'),\n\t\tlist: App.unique(idBase + '_list'),\n\t\ttoolBar: App.unique(idBase + '_toolbar'),\n\t\tbuttonCreateNewApplication: App.unique(idBase + '_buttonNewApp')\n\t};\n\n\tvar MenuComponent = OP.Component['ab_choose_list_menu'](App);\n\tvar PopupMenu = webix.ui(MenuComponent.ui);\n\tPopupMenu.hide();\n\n\tvar _ui = {\n\n\t\tid: ids.component,\n\t\tresponsive: \"hide\",\n\n\t\tcols: [{\n\t\t\tmaxWidth: App.config.appListSpacerColMaxWidth,\n\t\t\tminWidth: App.config.appListSpacerColMinWidth,\n\t\t\twidth: App.config.appListSpacerColMaxWidth\n\t\t}, {\n\t\t\tresponsiveCell: false,\n\t\t\trows: [{\n\t\t\t\tmaxHeight: App.config.appListSpacerRowHeight,\n\t\t\t\thidden: App.config.hideMobile\n\t\t\t},\n\t\t\t//\n\t\t\t// ToolBar\n\t\t\t//\n\t\t\t{\n\t\t\t\tview: \"toolbar\",\n\t\t\t\tid: ids.toolBar,\n\t\t\t\tcols: [{ view: \"label\", label: labels.component.title, fillspace: true }, {\n\t\t\t\t\tid: ids.buttonCreateNewApplication,\n\t\t\t\t\tview: \"button\",\n\t\t\t\t\tlabel: labels.component.createNew,\n\t\t\t\t\tautowidth: true,\n\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\ticon: \"plus\",\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t// Inform our Chooser we have a request to create an Application:\n\t\t\t\t\t\tApp.actions.transitionApplicationForm();\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tview: \"uploader\",\n\t\t\t\t\tid: ids.uploader,\n\t\t\t\t\tlabel: labels.common.import,\n\t\t\t\t\tautowidth: true,\n\t\t\t\t\tupload: '/app_builder/appJSON',\n\t\t\t\t\tmultiple: false,\n\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\ticon: \"upload\",\n\t\t\t\t\tautosend: true,\n\t\t\t\t\ton: {\n\t\t\t\t\t\tonAfterFileAdd: function onAfterFileAdd() {\n\t\t\t\t\t\t\t_logic.onAfterFileAdd();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonFileUpload: function onFileUpload(item, response) {\n\t\t\t\t\t\t\t_logic.onFileUpload(item, response);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonFileUploadError: function onFileUploadError(details, response) {\n\t\t\t\t\t\t\t_logic.onFileUploadError(details, response);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t},\n\n\t\t\t//\n\t\t\t// The List of Applications\n\t\t\t//\n\t\t\t{\n\t\t\t\tid: ids.list,\n\t\t\t\tview: \"list\",\n\t\t\t\tcss: 'ab-app-select-list',\n\t\t\t\ttemplate: function template(obj, common) {\n\t\t\t\t\treturn _logic.templateListItem(obj, common);\n\t\t\t\t},\n\t\t\t\ttype: {\n\t\t\t\t\theight: App.config.appListRowHeight, // Defines item height\n\t\t\t\t\ticonGear: \"<span class='webix_icon fa-cog'></span>\"\n\t\t\t\t},\n\t\t\t\tselect: false,\n\t\t\t\tonClick: {\n\t\t\t\t\t\"ab-app-list-item\": function abAppListItem(ev, id, trg) {\n\t\t\t\t\t\treturn _logic.onClickListItem(ev, id, trg);\n\t\t\t\t\t},\n\t\t\t\t\t\"ab-app-list-edit\": function abAppListEdit(ev, id, trg) {\n\t\t\t\t\t\treturn _logic.onClickListEdit(ev, id, trg);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tmaxHeight: App.config.appListSpacerRowHeight,\n\t\t\t\thidden: App.config.hideMobile\n\t\t\t}]\n\t\t}, {\n\t\t\tmaxWidth: App.config.appListSpacerColMaxWidth,\n\t\t\tminWidth: App.config.appListSpacerColMinWidth,\n\t\t\twidth: App.config.appListSpacerColMaxWidth\n\t\t}]\n\t};\n\n\tvar _data = {};\n\n\tvar _logic = {\n\n\t\t/**\n   * @function busy\n   *\n   * show a busy indicator on our App List\n   */\n\t\tbusy: function busy() {\n\t\t\tif ($$(ids.list).showProgress) $$(ids.list).showProgress({ icon: 'cursor' });\n\t\t},\n\n\t\t/**\n   * @function loadData\n   *\n   * Load all the ABApplications and display them in our App List\n   */\n\t\tloadData: function loadData() {\n\n\t\t\t// Get applications data from the server\n\t\t\t_logic.busy();\n\t\t\t_ABApplication2.default.allApplications().then(function (data) {\n\n\t\t\t\t_logic.ready();\n\n\t\t\t\t// make sure our overlay is updated when items are added/removed\n\t\t\t\t// from our data list.\n\t\t\t\tdata.attachEvent(\"onAfterAdd\", function (id, index) {\n\t\t\t\t\t_logic.refreshOverlay();\n\t\t\t\t});\n\n\t\t\t\tdata.attachEvent(\"onAfterDelete\", function (id) {\n\t\t\t\t\t_logic.refreshOverlay();\n\t\t\t\t});\n\n\t\t\t\t_data.listApplications = data;\n\n\t\t\t\t_logic.refreshList();\n\t\t\t}).catch(function (err) {\n\t\t\t\t_logic.ready();\n\t\t\t\twebix.message({\n\t\t\t\t\ttype: \"error\",\n\t\t\t\t\ttext: err\n\t\t\t\t});\n\t\t\t\tAD.error.log('App Builder : Error loading application data', { error: err });\n\t\t\t});\n\t\t},\n\n\t\t/**\n   * @function onAfterFileAdd\n   *\n   * UI updates for when a file upload is initiated\n   */\n\t\tonAfterFileAdd: function onAfterFileAdd() {\n\t\t\t$$(ids.uploader).disable();\n\t\t\t_logic.busy();\n\t\t},\n\n\t\t/**\n   * @function onClickListEdit\n   *\n   * UI updates for when the edit gear is clicked\n   */\n\t\tonClickListEdit: function onClickListEdit(ev, id, trg) {\n\n\t\t\t// Show menu\n\t\t\tPopupMenu.show(trg);\n\t\t\t$$(ids.list).select(id);\n\n\t\t\treturn false; // block default behavior\n\t\t},\n\n\t\t/**\n   * @function onClickListItem\n   *\n   * An item in the list is selected. So update the workspace with that \n   * object.\n   */\n\t\tonClickListItem: function onClickListItem(ev, id, trg) {\n\n\t\t\t_logic.busy();\n\n\t\t\t$$(ids.list).select(id);\n\n\t\t\tvar selectedApp = $$(ids.list).getItem(id);\n\n\t\t\tif (selectedApp) {\n\n\t\t\t\t_logic.ready();\n\n\t\t\t\t// We've selected an Application to work with\n\t\t\t\tApp.actions.transitionWorkspace(selectedApp);\n\t\t\t}\n\n\t\t\treturn false; // block default behavior\n\t\t},\n\n\t\t/**\n   * @function onFileUpload\n   *\n   * The File Upload process finished.\n   */\n\t\tonFileUpload: function onFileUpload(item, response) {\n\t\t\t_logic.loadData(); // refresh app list\n\t\t\t$$(ids.uploader).enable();\n\t\t\t_logic.ready();\n\t\t},\n\n\t\t/**\n   * @function onFileUploadError\n   *\n   * The File Upload process exited with an error.\n   */\n\t\tonFileUploadError: function onFileUploadError(details, response) {\n\n\t\t\tvar errorMessage = 'Error: ' + (response && response.message);\n\t\t\tOP.Dialog.Alert({\n\t\t\t\ttext: errorMessage\n\t\t\t});\n\t\t\t// webix.message({\n\t\t\t// \ttype: 'error',\n\t\t\t// \ttext: errorMessage\n\t\t\t// });\n\t\t\t_logic.loadData(); // refresh app list\n\t\t\t$$(ids.uploader).enable();\n\t\t\t_logic.ready();\n\t\t},\n\n\t\t/**\n   * @function refreshOverlay\n   *\n   * If we have no items in our list, display a Message.\n   */\n\t\trefreshOverlay: function refreshOverlay() {\n\t\t\tvar appList = $$(ids.list);\n\n\t\t\tif (!appList.count()) //if no data is available\n\t\t\t\tappList.showOverlay(labels.component.noApplication);else appList.hideOverlay();\n\t\t},\n\n\t\t/**\n   * @function ready\n   *\n   * remove the busy indicator on our App List\n   */\n\t\tready: function ready() {\n\t\t\tif ($$(ids.list).hideProgress) $$(ids.list).hideProgress();\n\t\t},\n\n\t\t/**\n   * @function reset\n   *\n   * Return our App List to an unselected state.\n   */\n\t\treset: function reset() {\n\t\t\t$$(ids.list).unselectAll();\n\t\t},\n\n\t\t/**\n   * @function refreshList\n   *\n   * Apply our list of ABApplication data to our AppList\n   */\n\t\trefreshList: function refreshList() {\n\n\t\t\tvar appList = $$(ids.list);\n\n\t\t\tappList.clearAll();\n\t\t\tappList.data.unsync();\n\t\t\tappList.data.sync(_data.listApplications);\n\n\t\t\t_logic.refreshOverlay();\n\n\t\t\tappList.refresh();\n\n\t\t\t_logic.ready();\n\t\t},\n\n\t\t/**\n   * @function show\n   *\n   * Trigger our List component to show\n   */\n\t\tshow: function show() {\n\t\t\t$$(ids.component).show();\n\t\t},\n\n\t\t/**\n   * @function templateListItem\n   *\n   * Defines the template for each row of our AppList.\n   *\n   * @param {obj} obj the current instance of ABApplication for the row.\n   * @param {?} common the webix.common icon data structure\n   * @return {string}\n   */\n\t\ttemplateListItem: function templateListItem(obj, common) {\n\t\t\treturn _templateListItem.replace('#label#', obj.label || '').replace('#description#', obj.description || '').replace('{common.iconGear}', common.iconGear);\n\t\t}\n\t};\n\n\t/*\n  * _templateListItem\n  *\n  * The AppList Row template definition.\n  */\n\tvar _templateListItem = [\"<div class='ab-app-list-item'>\", \"<div class='ab-app-list-info'>\", \"<div class='ab-app-list-name'>#label#</div>\", \"<div class='ab-app-list-description'>#description#</div>\", \"</div>\", \"<div class='ab-app-list-edit'>\", \"{common.iconGear}\", \"</div>\", \"</div>\"].join('');\n\n\t/*\n  * @function _init\n  *\n  * The init() that performs the necessary setup for our AppList chooser.\n  */\n\tvar _init = function _init() {\n\t\twebix.extend($$(ids.list), webix.ProgressBar);\n\t\twebix.extend($$(ids.list), webix.OverlayBox);\n\n\t\tMenuComponent.init();\n\n\t\t// start things off by loading the current list of Applications\n\t\t_logic.loadData();\n\t};\n\n\t/*\n  * {json} _actions\n  *\n  * The exported methods available to other Components.\n  */\n\tvar _actions = {\n\n\t\t/**\n   * @function unselectApplication\n   *\n   * resets the AppList to an unselected state.\n   */\n\t\tunselectApplication: function unselectApplication() {\n\t\t\t_logic.reset();\n\t\t},\n\n\t\t/**\n   * @function getSelectedApplication\n   *\n   * returns which ABApplication is currently selected.\n   * @return {ABApplication}  or {null} if nothing selected.\n   */\n\t\tgetSelectedApplication: function getSelectedApplication() {\n\t\t\treturn $$(ids.list).getSelectedItem();\n\t\t},\n\n\t\t/**\n   * @function deleteApplication\n   *\n   * deletes the given ABAppliction.\n   *\n   * NOTE: this assumes the component using this method has already\n   * provided the delete confirmation.\n   *\n   * @param {ABApplication} app  the ABAppliction to delete.\n   */\n\t\tdeleteApplication: function deleteApplication(app) {\n\n\t\t\tif (!app) return;\n\n\t\t\t// Delete application data\n\t\t\t_logic.busy();\n\n\t\t\tapp.destroy().then(function (result) {\n\t\t\t\t_logic.reset();\n\t\t\t\t_logic.ready();\n\n\t\t\t\twebix.message({\n\t\t\t\t\ttype: \"success\",\n\t\t\t\t\ttext: labels.common.deleteSuccessMessage.replace('{0}', app.label)\n\t\t\t\t});\n\t\t\t}).catch(function (err) {\n\t\t\t\t_logic.reset();\n\t\t\t\t_logic.ready();\n\n\t\t\t\twebix.message({\n\t\t\t\t\ttype: \"error\",\n\t\t\t\t\ttext: labels.common.deleteErrorMessage.replace(\"{0}\", app.label)\n\t\t\t\t});\n\n\t\t\t\tAD.error.log('App Builder : Error delete application data', { error: err });\n\t\t\t});\n\t\t},\n\n\t\t/**\n   * @function transitionApplicationList\n   *\n   * Trigger our List component to show\n   */\n\t\ttransitionApplicationList: function transitionApplicationList() {\n\t\t\t$$(ids.component).show();\n\t\t}\n\t};\n\n\treturn {\n\t\tui: _ui,\n\t\tinit: _init,\n\t\tactions: _actions,\n\n\t\t_logic: _logic // exposed for Unit Testing\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\n/*\n * AB Choose List\n *\n * Display a list of Applications for the user to select.\n *\n */\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nvar labels = {\n\n\tcomponent: {\n\t\tmenu: L('ab.application.menu', \"*Application Menu\"),\n\t\tconfirmDeleteTitle: L('ab.application.delete.title', \"*Delete application\"),\n\t\tconfirmDeleteMessage: L('ab.application.delete.message', \"*Do you want to delete <b>{0}</b>?\")\n\t}\n};\n\nvar idBase = 'ab_choose_list_menu';\nOP.Component.extend(idBase, function (App) {\n\n\tlabels.common = App.labels;\n\n\tvar ids = {\n\t\tmenu: App.unique(idBase + '_menu')\n\t};\n\n\tvar _ui = {\n\t\tview: \"popup\",\n\t\tid: ids.menu,\n\t\thead: labels.component.menu,\n\t\twidth: 100,\n\t\tbody: {\n\t\t\tview: \"list\",\n\t\t\tborderless: true,\n\t\t\tdata: [{ command: labels.common.edit, icon: \"fa-pencil-square-o\" }, { command: labels.common.export, icon: \"fa-download\" }, { command: labels.common.delete, icon: \"fa-trash\" }],\n\t\t\tdatatype: \"json\",\n\n\t\t\ttemplate: \"<i class='fa #icon#' aria-hidden='true'></i> #command#\",\n\t\t\tautoheight: true,\n\t\t\tselect: false,\n\t\t\ton: {\n\t\t\t\t'onItemClick': function onItemClick(timestamp, e, trg) {\n\t\t\t\t\treturn _logic.onItemClick(timestamp, e, trg);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar _data = {};\n\n\tvar _init = function _init() {};\n\n\tvar _logic = {\n\n\t\t/**\n   * @function onItemClick\n   * process which item in our popup was selected.\n   */\n\t\tonItemClick: function onItemClick(timestamp, e, trg) {\n\n\t\t\t// hide our popup before we trigger any other possible UI animation: (like .edit)\n\t\t\t// NOTE: if the UI is animating another component, and we do .hide()\n\t\t\t// while it is in progress, the UI will glitch and give the user whiplash.\n\t\t\t$$(ids.menu).hide();\n\n\t\t\tvar selectedApp = App.actions.getSelectedApplication();\n\n\t\t\tswitch (trg.textContent.trim()) {\n\t\t\t\tcase labels.common.edit:\n\t\t\t\t\tApp.actions.transitionApplicationForm(selectedApp);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase labels.common.delete:\n\t\t\t\t\tOP.Dialog.ConfirmDelete({\n\t\t\t\t\t\ttitle: labels.component.confirmDeleteTitle,\n\t\t\t\t\t\ttext: labels.component.confirmDeleteMessage.replace('{0}', selectedApp.label),\n\t\t\t\t\t\tcallback: function callback(result) {\n\n\t\t\t\t\t\t\tif (!result) return;\n\n\t\t\t\t\t\t\tApp.actions.deleteApplication(selectedApp);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase labels.common.export:\n\t\t\t\t\t// Download the JSON file to disk\n\t\t\t\t\twindow.location.assign('/app_builder/appJSON/' + selectedApp.id + '?download=1');\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t};\n\n\treturn {\n\t\tui: _ui,\n\t\tinit: _init,\n\n\t\t_logic: _logic // exposed for Unit Testing\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\nvar _ABApplication = __webpack_require__(1);\n\nvar _ABApplication2 = _interopRequireDefault(_ABApplication);\n\n__webpack_require__(22);\n\n__webpack_require__(21);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n/*\n * ab_work\n *\n * Display the component for working with an ABApplication.\n *\n */\n\nvar labels = {\n\n\tapplication: {\n\n\t\t// formHeader: L('ab.application.form.header', \"*Application Info\"),\n\t\tbackToApplication: L('ab.application.backToApplication', \"*Back to Applications page\"),\n\t\tsynchronize: L('ab.application.synchronize', \"*Synchronize\"),\n\t\tobjectTitle: L('ab.object.title', \"*Objects\"),\n\t\tinterfaceTitle: L('ab.interface.title', \"*Interface\")\n\t}\n};\n\nOP.Component.extend('ab_work', function (App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique('ab_work_component'),\n\t\ttoolBar: App.unique('ab_work_toolbar'),\n\t\tbuttonSync: App.unique('ab_work_button_sync'),\n\t\tlabelAppName: App.unique('ab_work_label_appname'),\n\t\ttabbar: App.unique('ab_work_tabbar'),\n\t\ttab_object: App.unique('ab_work_tab_object'),\n\t\ttab_interface: App.unique('ab_work_tab_interface'),\n\t\tworkspace: App.unique('ab_work_workspace')\n\t};\n\n\tvar AppObjectWorkspace = OP.Component['ab_work_object'](App);\n\tvar AppInterfaceWorkspace = OP.Component['ab_work_interface'](App);\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tid: ids.component,\n\t\trows: [{\n\t\t\tview: \"toolbar\",\n\t\t\tid: ids.toolBar,\n\t\t\tautowidth: true,\n\t\t\tcols: [{\n\t\t\t\tview: \"button\",\n\t\t\t\tlabel: labels.application.backToApplication,\n\t\t\t\twidth: 200,\n\t\t\t\ttype: \"icon\",\n\t\t\t\ticon: \"arrow-left\",\n\t\t\t\talign: \"left\",\n\n\t\t\t\tclick: function click() {\n\t\t\t\t\tApp.actions.transitionApplicationChooser();\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tview: \"label\",\n\t\t\t\tid: ids.labelAppName,\n\t\t\t\talign: \"center\"\n\t\t\t}, {\n\t\t\t\tview: \"spacer\",\n\t\t\t\twidth: 200,\n\t\t\t\talrign: \"right\"\n\t\t\t}\n\t\t\t// {\n\t\t\t// \tid: ids.buttonSync,\n\t\t\t// \tview: \"button\",\n\t\t\t// \ttype: \"icon\",\n\t\t\t// \ticon: \"refresh\",\n\t\t\t// \tlabel: labels.application.synchronize,\n\t\t\t// \tautowidth: true,\n\t\t\t// \talign: \"right\",\n\t\t\t// \tclick: function () {\n\t\t\t// \t\t_logic.synchronize();\n\t\t\t// \t}\n\t\t\t// }\n\t\t\t]\n\t\t},\n\t\t//{ height: App.config.mediumSpacer },\n\t\t// {\n\t\t// \tview:\"segmented\",\n\t\t// \tid: ids.tabbar,\n\t\t// \tvalue: ids.tab_object,\n\t\t// \tmultiview: true,\n\t\t// \talign: \"center\",\n\t\t// \toptions:[\n\t\t// \t\t{\n\t\t// \t\t\tid: ids.tab_object,\n\t\t// \t\t\tvalue: labels.application.objectTitle,\n\t\t// \t\t\twidth: App.config.tabWidthMedium\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\tid: ids.tab_interface,\n\t\t// \t\t\tvalue: labels.application.interfaceTitle,\n\t\t// \t\t\twidth: App.config.tabWidthMedium\n\t\t// \t\t}\n\t\t// \t],\n\t\t// \ton: {\n\t\t// \t\tonChange: function (idNew, idOld) {\n\t\t// \t\t\tif (idNew != idOld) {\n\t\t// \t\t\t\t_logic.tabSwitch(idNew, idOld);\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t}\n\t\t// },\n\t\t{ height: App.config.mediumSpacer }, {\n\t\t\tcols: [{\n\t\t\t\twidth: App.config.mediumSpacer\n\t\t\t}, {\n\t\t\t\trows: [{\n\t\t\t\t\tview: \"tabbar\",\n\t\t\t\t\tid: ids.tabbar,\n\t\t\t\t\tvalue: ids.tab_object,\n\t\t\t\t\tmultiview: true,\n\t\t\t\t\toptions: [{\n\t\t\t\t\t\tid: ids.tab_object,\n\t\t\t\t\t\tvalue: labels.application.objectTitle,\n\t\t\t\t\t\twidth: App.config.tabWidthMedium\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid: ids.tab_interface,\n\t\t\t\t\t\tvalue: labels.application.interfaceTitle,\n\t\t\t\t\t\twidth: App.config.tabWidthMedium\n\t\t\t\t\t}],\n\t\t\t\t\ton: {\n\t\t\t\t\t\tonChange: function onChange(idNew, idOld) {\n\t\t\t\t\t\t\tif (idNew != idOld) {\n\t\t\t\t\t\t\t\t_logic.tabSwitch(idNew, idOld);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tid: ids.workspace,\n\t\t\t\t\tcells: [AppObjectWorkspace.ui, AppInterfaceWorkspace.ui]\n\t\t\t\t}]\n\t\t\t}, {\n\t\t\t\twidth: App.config.mediumSpacer\n\t\t\t}]\n\t\t}, { height: App.config.mediumSpacer }]\n\t};\n\n\t// Our init() function for setting up our UI\n\tvar _init = function _init() {\n\n\t\tAppObjectWorkspace.init();\n\t\tAppInterfaceWorkspace.init();\n\n\t\t// initialize the Object Workspace to show first.\n\t\t_logic.tabSwitch(ids.tab_object);\n\t};\n\n\t// our internal business logic\n\tvar _logic = {\n\n\t\tapplicationInit: function applicationInit(application) {\n\n\t\t\t// setup Application Label:\n\t\t\t$$(ids.labelAppName).define('label', application.label);\n\t\t\t$$(ids.labelAppName).refresh();\n\t\t},\n\n\t\t/**\n   * @function show()\n   *\n   * Show this component.\n   */\n\t\tshow: function show() {\n\n\t\t\t$$(ids.component).show();\n\t\t},\n\n\t\t/**\n   * @function synchronize\n   *\n   * Kick off the Synchronization process.\n   */\n\t\tsynchronize: function synchronize() {\n\n\t\t\t// self.element.trigger(self.options.synchronizeEvent, {\n\t\t\t// \tappID: AD.classes.AppBuilder.currApp.id\n\t\t\t// });\n\t\t\t//// Question: where should this logic go?  Here or in ab.js ?\n\n\t\t\tconsole.error('TODO: ab_work.logic.synchronize()!');\n\t\t},\n\n\t\t/**\n   * @function tabSwitch\n   *\n   * Every time a tab switch happens, decide which workspace to show.\n   *\n   * @param {string} idTab\tthe id of the tab that was changed to.\n   * @param {string} idOld\tthe previous tab id\n   */\n\t\ttabSwitch: function tabSwitch(idTab, idOld) {\n\n\t\t\tswitch (idTab) {\n\n\t\t\t\t// Object Workspace Tab\n\t\t\t\tcase ids.tab_object:\n\n\t\t\t\t\t// $$(ids.buttonSync).show();\n\t\t\t\t\tAppObjectWorkspace.show();\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Interface Workspace Tab\n\t\t\t\tcase ids.tab_interface:\n\n\t\t\t\t\t// $$(ids.buttonSync).hide();\n\t\t\t\t\tAppInterfaceWorkspace.show();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\t\t/**\n   * @function transitionWorkspace\n   *\n   * Switch the UI to view the App Workspace screen.\n   *\n   * @param {ABApplication} application\n   */\n\t\ttransitionWorkspace: function transitionWorkspace(application) {\n\n\t\t\t_logic.applicationInit(application);\n\t\t\tAppObjectWorkspace.applicationLoad(application);\n\t\t\tAppInterfaceWorkspace.applicationLoad(application);\n\n\t\t\t_logic.show();\n\t\t}\n\n\t};\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui: _ui, // {obj} \tthe webix ui definition for this component\n\t\tinit: _init, // {fn} \tinit() to setup this component\n\t\tactions: _actions, // {ob}\t\thash of fn() to expose so other components can access.\n\n\t\t_logic: _logic // {obj} \tUnit Testing\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\nvar _ABApplication = __webpack_require__(1);\n\nvar _ABApplication2 = _interopRequireDefault(_ABApplication);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n/*\n * ab_work_interface\n *\n * Display the Interface for designing Pages and Views in the App Builder.\n *\n */\n\nvar labels = {\n\n\tcomponent: {\n\n\t\t// formHeader: L('ab.application.form.header', \"*Application Info\"),\n\n\t}\n};\n\nvar idBase = 'ab_work_interface';\nOP.Component.extend(idBase, function (App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component')\n\n\t};\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tid: ids.component,\n\t\t//scroll: true,\n\t\trows: [{\n\t\t\tview: \"label\",\n\t\t\tlabel: \"interface workspace\"\n\t\t}]\n\t};\n\n\t// Our init() function for setting up our UI\n\tvar _init = function _init() {}\n\t// webix.extend($$(ids.form), webix.ProgressBar);\n\n\t// our internal business logic\n\t;var _logic = {\n\n\t\t/**\n   * @function applicationLoad\n   *\n   * Initialize the Object Workspace with the given ABApplication.\n   *\n   * @param {ABApplication} application \n   */\n\t\tapplicationLoad: function applicationLoad(application) {\n\t\t\tconsole.error('TODO: ab_work_interface.applicationLoad()');\n\t\t},\n\n\t\t/**\n   * @function show()\n   *\n   * Show this component.\n   */\n\t\tshow: function show() {\n\n\t\t\t$$(ids.component).show();\n\t\t}\n\t};\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {};\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui: _ui, // {obj} \tthe webix ui definition for this component\n\t\tinit: _init, // {fn} \tinit() to setup this component\n\t\tactions: _actions, // {ob}\t\thash of fn() to expose so other components can access.\n\n\t\tapplicationLoad: _logic.applicationLoad,\n\t\tshow: _logic.show,\n\n\t\t_logic: _logic // {obj} \tUnit Testing\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\nvar _ABApplication = __webpack_require__(1);\n\nvar _ABApplication2 = _interopRequireDefault(_ABApplication);\n\n__webpack_require__(23);\n\n__webpack_require__(26);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n/*\n * ab_work_object\n *\n * Display the Object Tab UI:\n *\n */\n\nvar labels = {\n\n\tcomponent: {\n\n\t\t// formHeader: L('ab.application.form.header', \"*Application Info\"),\n\n\t}\n};\n\nvar idBase = 'ab_work_object';\nOP.Component.extend(idBase, function (App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component')\n\n\t};\n\n\tvar ObjectList = OP.Component['ab_work_object_list'](App);\n\tvar ObjectWorkspace = OP.Component['ab_work_object_workspace'](App);\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tid: ids.component,\n\t\tautoheight: true,\n\t\tmargin: 20,\n\t\tcols: [ObjectList.ui, { view: \"resizer\" }, ObjectWorkspace.ui]\n\t};\n\n\t// Our init() function for setting up our UI\n\tvar _init = function _init() {\n\n\t\tObjectWorkspace.init();\n\t\tObjectList.init();\n\t};\n\n\t// our internal business logic\n\tvar _logic = {\n\n\t\t/**\n   * @function applicationLoad\n   *\n   * Initialize the Object Workspace with the given ABApplication.\n   *\n   * @param {ABApplication} application \n   */\n\t\tapplicationLoad: function applicationLoad(application) {\n\t\t\tObjectList.applicationLoad(application);\n\t\t\tObjectWorkspace.clearObjectWorkspace();\n\t\t},\n\n\t\t/**\n   * @function show()\n   *\n   * Show this component.\n   */\n\t\tshow: function show() {\n\n\t\t\t$$(ids.component).show();\n\t\t}\n\t};\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {};\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui: _ui, // {obj} \tthe webix ui definition for this component\n\t\tinit: _init, // {fn} \tinit() to setup this component\n\t\tactions: _actions, // {ob}\t\thash of fn() to expose so other components can access.\n\n\n\t\tapplicationLoad: _logic.applicationLoad,\n\t\tshow: _logic.show,\n\n\t\t_logic: _logic // {obj} \tUnit Testing\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\nvar _ABApplication = __webpack_require__(1);\n\nvar _ABApplication2 = _interopRequireDefault(_ABApplication);\n\n__webpack_require__(24);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * ab_work_object_list\n *\n * Manage the Object List\n *\n */\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nvar labels = {\n\n\tcomponent: {\n\n\t\t// formHeader: L('ab.application.form.header', \"*Application Info\"),\n\t\taddNew: L('ab.object.addNew', '*Add new object')\n\n\t}\n};\n\nvar idBase = 'ab_work_object_list';\nOP.Component.extend(idBase, function (App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\n\t\tlist: App.unique(idBase + '_editlist'),\n\t\tbuttonNew: App.unique(idBase + '_buttonNew')\n\n\t};\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tid: ids.component,\n\t\trows: [{\n\t\t\tview: App.custom.editlist.view, // \"editlist\",\n\t\t\tid: ids.list,\n\t\t\twidth: 250,\n\n\t\t\theight: 800, // #Hack!\n\n\t\t\tselect: true,\n\t\t\teditaction: 'custom',\n\t\t\teditable: true,\n\t\t\teditor: \"text\",\n\t\t\teditValue: \"label\",\n\t\t\ttemplate: function template(obj, common) {\n\t\t\t\treturn _logic.templateListItem(obj, common);\n\t\t\t},\n\t\t\ttype: {\n\t\t\t\theight: \"auto\",\n\t\t\t\t// unsyncNumber: \"\",  // \"<span class='ab-object-unsync'><span class='ab-object-unsync-number'></span> unsync</span>\",\n\t\t\t\ticonGear: \"<div class='ab-object-list-edit'><span class='webix_icon fa-cog'></span></div>\"\n\t\t\t},\n\t\t\ton: {\n\t\t\t\tonAfterRender: function onAfterRender() {\n\t\t\t\t\t_logic.onAfterRender();\n\t\t\t\t},\n\t\t\t\tonAfterSelect: function onAfterSelect(id) {\n\t\t\t\t\t_logic.selectObject(id);\n\t\t\t\t},\n\t\t\t\tonAfterDelete: function onAfterDelete(id) {\n\t\t\t\t\t_logic.onAfterDelete(id);\n\t\t\t\t},\n\t\t\t\tonBeforeEditStop: function onBeforeEditStop(state, editor) {\n\t\t\t\t\t_logic.onBeforeEditStop(state, editor);\n\t\t\t\t},\n\t\t\t\tonAfterEditStop: function onAfterEditStop(state, editor, ignoreUpdate) {\n\t\t\t\t\t_logic.onAfterEditStop(state, editor, ignoreUpdate);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonClick: {\n\t\t\t\t\"ab-object-list-edit\": function abObjectListEdit(e, id, trg) {\n\t\t\t\t\t_logic.clickEditMenu(e, id, trg);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tview: 'button',\n\t\t\tid: ids.buttonNew,\n\t\t\tvalue: labels.component.addNew,\n\t\t\tclick: function click() {\n\t\t\t\t_logic.clickNewObject();\n\t\t\t}\n\t\t}]\n\t};\n\n\t// Our init() function for setting up our UI\n\tvar _init = function _init() {\n\n\t\twebix.extend($$(ids.list), webix.ProgressBar);\n\t\t$$(ids.component).adjust();\n\t\t$$(ids.list).adjust();\n\t};\n\n\t// our internal business logic\n\tvar _logic = {\n\n\t\t/**\n   * @function applicationLoad\n   *\n   * Initialize the Object List from the provided ABApplication\n   *\n   * If no ABApplication is provided, then show an empty form. (create operation)\n   *\n   * @param {ABApplication} application  \t[optional] The current ABApplication \n   *\t\t\t\t\t\t\t\t\t\twe are working with.\n   */\n\t\tapplicationLoad: function applicationLoad(application) {\n\t\t\t_logic.listBusy();\n\n\t\t\tCurrentApplication = application;\n\n\t\t\t// get a DataCollection of all our objects\n\t\t\tobjectList = new webix.DataCollection({\n\t\t\t\tdata: application.objects()\n\t\t\t});\n\n\t\t\t// clear our list and display our objects:\n\t\t\tvar List = $$(ids.list);\n\t\t\tList.clearAll();\n\t\t\tList.data.unsync();\n\t\t\tList.data.sync(objectList);\n\t\t\tList.refresh();\n\t\t\tList.unselectAll();\n\n\t\t\t// \n\t\t\t_logic.syncNumberRefresh();\n\t\t\t_logic.listReady();\n\n\t\t\t// prepare our Popup with the current Application\n\t\t\tPopupNewObjectComponent.applicationLoad(application);\n\t\t},\n\n\t\tclickEditMenu: function clickEditMenu(e, id, trg) {\n\n\t\t\tconsole.error('!! TODO: clickEditMenu()');\n\t\t\t// // Show menu\n\t\t\t// $$(self.webixUiId.objectListMenuPopup).show(trg);\n\n\t\t\t// return false;\n\t\t},\n\n\t\tlistBusy: function listBusy() {\n\t\t\t$$(ids.list).showProgress({ type: \"icon\" });\n\t\t},\n\n\t\tlistReady: function listReady() {\n\t\t\t$$(ids.list).hideProgress();\n\t\t},\n\n\t\tonAfterDelete: function onAfterDelete(id) {\n\t\t\tconsole.error('!! todo: onAfterDelete()');\n\t\t},\n\n\t\tonAfterRender: function onAfterRender() {\n\t\t\tconsole.error('!! todo: onAfterRender() editing');\n\t\t\t// webix.once(function () {\n\t\t\t// \t$$(self.webixUiId.objectList).data.each(function (d) {\n\t\t\t// \t\t$($$(self.webixUiId.objectList).getItemNode(d.id)).find('.ab-object-unsync-number').html(99);\n\t\t\t// \t});\n\t\t\t// });\n\n\t\t\t// // Show gear icon\n\t\t\t// if (this.getSelectedId(true).length > 0) {\n\t\t\t// \t$(this.getItemNode(this.getSelectedId(false))).find('.ab-object-list-edit').show();\n\t\t\t// \tself.refreshUnsyncNumber();\n\t\t\t// }\n\t\t},\n\n\t\tonAfterEditStop: function onAfterEditStop(state, editor, ignoreUpdate) {\n\n\t\t\tconsole.error('!! todo: onAfterEditStop() editing');\n\t\t\t// if (state.value != state.old) {\n\t\t\t// \tvar _this = this;\n\n\t\t\t// \tthis.showProgress({ type: 'icon' });\n\n\t\t\t// \tvar selectedObject = AD.classes.AppBuilder.currApp.objects.filter(function (item, index, list) { return item.id == editor.id; })[0];\n\t\t\t// \tselectedObject.attr('label', state.value);\n\n\t\t\t// \t// Call server to rename\n\t\t\t// \tselectedObject.save()\n\t\t\t// \t\t.fail(function () {\n\t\t\t// \t\t\t_this.hideProgress();\n\n\t\t\t// \t\t\twebix.message({\n\t\t\t// \t\t\t\ttype: \"error\",\n\t\t\t// \t\t\t\ttext: self.labels.common.renameErrorMessage.replace(\"{0}\", state.old)\n\t\t\t// \t\t\t});\n\n\t\t\t// \t\t\tAD.error.log('Object List : Error rename object data', { error: err });\n\t\t\t// \t\t})\n\t\t\t// \t\t.then(function () {\n\t\t\t// \t\t\t_this.hideProgress();\n\n\t\t\t// \t\t\tif (selectedObject.translate) selectedObject.translate();\n\n\t\t\t// \t\t\t// Show success message\n\t\t\t// \t\t\twebix.message({\n\t\t\t// \t\t\t\ttype: \"success\",\n\t\t\t// \t\t\t\ttext: self.labels.common.renameSuccessMessage.replace('{0}', state.value)\n\t\t\t// \t\t\t});\n\n\t\t\t// \t\t\t// Show gear icon\n\t\t\t// \t\t\t$(_this.getItemNode(editor.id)).find('.ab-object-list-edit').show();\n\t\t\t// \t\t});\n\t\t\t// }\n\t\t},\n\n\t\tonBeforeEditStop: function onBeforeEditStop(state, editor) {\n\t\t\tconsole.error('!! todo: onBeforeEditStop() editing');\n\t\t\t// if (!inputValidator.validateFormat(state.value)) {\n\t\t\t// \treturn false;\n\t\t\t// }\n\n\t\t\t// // Validation - check duplicate\n\t\t\t// if (!inputValidator.rules.preventDuplicateObjectName(state.value, editor.id) && state.value != state.old) {\n\t\t\t// \twebix.alert({\n\t\t\t// \t\ttitle: self.labels.object.invalidName,\n\t\t\t// \t\tok: self.labels.common.ok,\n\t\t\t// \t\ttext: self.labels.object.duplicateName.replace(\"{0}\", state.value)\n\t\t\t// \t});\n\n\t\t\t// \treturn false;\n\t\t\t// }\n\t\t},\n\n\t\t/**\n   * @function selectObject()\n   *\n   * Perform these actions when an Object is selected in the List.\n   */\n\t\tselectObject: function selectObject(id) {\n\n\t\t\tvar object = $$(ids.list).getItem(id);\n\t\t\tApp.actions.populateObjectWorkspace(object);\n\n\t\t\t//// TODO: do we need these?\n\n\t\t\t// // Refresh unsync number\n\t\t\t// self.refreshUnsyncNumber();\n\n\t\t\t// // Show gear icon\n\t\t\t// $(this.getItemNode(id)).find('.ab-object-list-edit').show();\n\t\t},\n\n\t\t/**\n   * @function show()\n   *\n   * Show this component.\n   */\n\t\tshow: function show() {\n\n\t\t\t$$(ids.component).show();\n\t\t},\n\n\t\tsyncNumberRefresh: function syncNumberRefresh() {\n\n\t\t\t//// NOTE: I think we are removing Sync Numbers with the refactor.\n\t\t\t//// probably wont need this.\n\t\t\tconsole.error('TODO: syncNumRefresh()');\n\t\t\t// var self = this,\n\t\t\t// \tobjects = [];\n\n\t\t\t// objects = $$(self.webixUiId.objectList).data.find(function (d) {\n\t\t\t// \treturn objectName ? d.name == objectName : true;\n\t\t\t// }, false, true);\n\n\t\t\t// objects.forEach(function (obj) {\n\t\t\t// \tvar objectModel = modelCreator.getModel(AD.classes.AppBuilder.currApp, obj.name),\n\t\t\t// \t\tunsyncNumber = (objectModel && objectModel.Cached ? objectModel.Cached.count() : 0),\n\t\t\t// \t\thtmlItem = $($$(self.webixUiId.objectList).getItemNode(obj.id));\n\n\t\t\t// \tif (unsyncNumber > 0) {\n\t\t\t// \t\thtmlItem.find('.ab-object-unsync-number').html(unsyncNumber);\n\t\t\t// \t\thtmlItem.find('.ab-object-unsync').show();\n\t\t\t// \t}\n\t\t\t// \telse {\n\t\t\t// \t\thtmlItem.find('.ab-object-unsync').hide();\n\t\t\t// \t}\n\t\t\t// });\n\t\t},\n\n\t\t/**\n   * @function templateListItem\n   *\n   * Defines the template for each row of our ObjectList.\n   *\n   * @param {obj} obj the current instance of ABObject for the row.\n   * @param {?} common the webix.common icon data structure\n   * @return {string}\n   */\n\t\ttemplateListItem: function templateListItem(obj, common) {\n\t\t\treturn _templateListItem.replace('#label#', obj.label || '??label??').replace('{common.iconGear}', common.iconGear);\n\t\t},\n\n\t\t/**\n   * @function callbackNewObject\n   *\n   * Once a New Object was created in the Popup, follow up with it here.\n   */\n\t\tcallbackNewObject: function callbackNewObject(err, object) {\n\n\t\t\tif (err) {\n\t\t\t\tOP.Error.log('Error creating New Object', { error: err });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tobjectList.add(object, 0);\n\t\t\t$$(ids.list).select(newObject.id);\n\t\t},\n\n\t\t/**\n   * @function clickNewObject\n   *\n   * Manages initiating the transition to the new Object Popup window\n   */\n\t\tclickNewObject: function clickNewObject() {\n\n\t\t\t// show the new popup\n\t\t\tPopupNewObject.show();\n\t\t}\n\t};\n\n\t/*\n  * _templateListItem\n  *\n  * The Object Row template definition.\n  */\n\tvar _templateListItem = [\"<div class='ab-object-list-item'>\", \"#label#\",\n\t// \"{common.unsyncNumber}\",\n\t\"{common.iconGear}\", \"</div>\"].join('');\n\n\t// Note: put these here so _logic is defined:\n\t// There is a Popup for adding a new Object:\n\tvar PopupNewObjectComponent = OP.Component['ab_work_object_list_newObject'](App);\n\tvar PopupNewObject = webix.ui(PopupNewObjectComponent.ui);\n\tPopupNewObjectComponent.init({\n\t\tonDone: _logic.callbackNewObject\n\t});\n\n\tvar CurrentApplication = null;\n\tvar objectList = null;\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\t\t/**\n   * @function getSelectedObject\n   *\n   * returns which ABObject is currently selected.\n   * @return {ABObject}  or {null} if nothing selected.\n   */\n\t\tgetSelectedObject: function getSelectedObject() {\n\t\t\treturn $$(ids.list).getSelectedItem();\n\t\t}\n\n\t};\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui: _ui, // {obj} \tthe webix ui definition for this component\n\t\tinit: _init, // {fn} \tinit() to setup this component\n\t\tactions: _actions, // {ob}\t\thash of fn() to expose so other components can access.\n\n\t\t// interface methods for parent component:\n\t\tapplicationLoad: _logic.applicationLoad,\n\n\t\t_logic: _logic // {obj} \tUnit Testing\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\n__webpack_require__(25);\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n/*\n * ab_work_object_list_newObject\n *\n * Display the form for creating a new Object.  This Popup will manage several \n * different sub components for gathering Object data for saving.\n *\n * The sub components will gather the data for the object and do basic form \n * validations on their interface.  \n *\n * when ready, the sub component will call onSave(values, cb)  to allow this \n * component to manage the actual final object validation, and saving to this\n * application.  On success, cb(null) will be called.  on error cb(err) will\n * be called.\n *\n */\n\nvar labels = {\n\n\tcomponent: {\n\n\t\t// formHeader: L('ab.application.form.header', \"*Application Info\"),\n\t\taddNew: L('ab.object.addNew', '*Add new object')\n\n\t}\n};\n\nvar idBase = 'ab_work_object_list_newObject';\nOP.Component.extend(idBase, function (App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component')\n\t};\n\n\tvar BlankTab = OP.Component['ab_work_object_list_newObject_blank'](App);\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tview: \"window\",\n\t\tid: ids.component,\n\t\twidth: 400,\n\t\tposition: \"center\",\n\t\tmodal: true,\n\t\thead: labels.component.addNew,\n\t\tselectNewObject: true,\n\t\tbody: {\n\t\t\tview: \"tabview\",\n\t\t\tcells: [BlankTab.ui]\n\t\t}\n\t};\n\n\t// Our init() function for setting up our UI\n\tvar _init = function _init(options) {\n\n\t\t// register our callbacks:\n\t\tfor (var c in _logic.callbacks) {\n\t\t\t_logic.callbacks[c] = options[c] || _logic.callbacks[c];\n\t\t}\n\n\t\tvar ourCBs = {\n\t\t\tonCancel: _logic.hide,\n\t\t\tonSave: _logic.save\n\t\t};\n\n\t\tBlankTab.init(ourCBs);\n\t};\n\n\t// our internal business logic \n\tvar _logic = {\n\n\t\t/**\n   * @function applicationLoad()\n   *\n   * prepare ourself with the current application\n   */\n\t\tapplicationLoad: function applicationLoad(application) {\n\t\t\t// _logic.show();\n\t\t\tcurrentApplication = application; // remember our current Application.\n\t\t},\n\n\t\tcallbacks: {\n\t\t\tonDone: function onDone() {}\n\t\t},\n\n\t\t/**\n   * @function hide()\n   *\n   * remove the busy indicator from the form.\n   */\n\t\thide: function hide() {\n\t\t\t$$(ids.component).hide();\n\t\t},\n\n\t\t/**\n   * @function save\n   *\n   * take the data gathered by our child creation tabs, and \n   * add it to our current application.\n   *\n   * @param {obj} values  key=>value hash of model values.\n   * @param {fn}  cb \t\tnode style callback to indicate success/failure\n   */\n\t\tsave: function save(values, cb) {\n\n\t\t\t// must have an application set.\n\t\t\tif (!currentApplication) {\n\t\t\t\tOP.Dialog.Alert({\n\t\t\t\t\ttitle: 'Shoot!',\n\t\t\t\t\ttest: 'No Application Set!  Why?'\n\t\t\t\t});\n\t\t\t\tcb(true); // there was an error.\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// create a new (unsaved) instance of our object:\n\t\t\tvar newObject = currentApplication.objectNew(values);\n\n\t\t\t// have newObject validate it's values.\n\t\t\tvar validationErrors = newObject.isValid();\n\t\t\tif (validationErrors) {\n\t\t\t\tcb(validationErrors); // tell current Tab component the errors\n\t\t\t\treturn false; // stop here.\n\t\t\t}\n\n\t\t\t// if we get here, save the new Object\n\t\t\tnewObject.save().then(function (obj) {\n\n\t\t\t\t// successfully done:\n\t\t\t\tcb(); // tell current tab component save successful\n\t\t\t\t_logic.hide(); // hide our popup\n\t\t\t\t_logic.callbacks.onDone(null, obj); // tell parent component we're done\n\t\t\t}).catch(function (err) {\n\t\t\t\tcb(err); // tell current Tab component there was an error\n\t\t\t});\n\t\t},\n\n\t\t/**\n   * @function show()\n   *\n   * Show this component.\n   */\n\t\tshow: function show() {\n\n\t\t\t$$(ids.component).show();\n\t\t}\n\t};\n\n\tvar currentApplication = null;\n\t// var currentCallBack = null;\n\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {};\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui: _ui, // {obj} \tthe webix ui definition for this component\n\t\tinit: _init, // {fn} \tinit() to setup this component  \n\t\tactions: _actions, // {ob}\t\thash of fn() to expose so other components can access.\n\n\t\t// interface methods for parent component:\n\t\tapplicationLoad: _logic.applicationLoad,\n\n\t\t_logic: _logic // {obj} \tUnit Testing\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\n/*\n * ab_work_object_list_newObject_blank\n *\n * Display the form for creating a new Application.\n *\n */\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nvar labels = {\n\n\tcomponent: {\n\t\tplaceholderName: L('ab.object.form.placeholderName', \"*Object name\")\n\t}\n};\n\nvar idBase = 'ab_work_object_list_newObject_blank';\nOP.Component.extend(idBase, function (App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\n\t\tform: App.unique(idBase + '_blank'),\n\t\tbuttonSave: App.unique(idBase + '_save'),\n\t\tbuttonCancel: App.unique(idBase + '_cancel')\n\t};\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tid: ids.component,\n\t\theader: labels.common.create,\n\t\tbody: {\n\t\t\tview: \"form\",\n\t\t\tid: ids.form,\n\t\t\twidth: 400,\n\t\t\trules: {\n\n\t\t\t\t// TODO:\n\t\t\t\t// name: inputValidator.rules.validateObjectName\n\t\t\t},\n\t\t\telements: [{ view: \"text\", label: labels.common.formName, name: \"name\", required: true, placeholder: labels.component.placeholderName, labelWidth: 70 }, {\n\t\t\t\tmargin: 5,\n\t\t\t\tcols: [{\n\t\t\t\t\tview: \"button\", id: ids.buttonCancel, value: labels.common.cancel,\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t_logic.cancel();\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tview: \"button\", id: ids.buttonSave, value: labels.common.add, type: \"form\",\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\treturn _logic.save();\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t}]\n\t\t}\n\t};\n\n\t// Our init() function for setting up our UI\n\tvar _init = function _init(options) {\n\t\t// webix.extend($$(ids.form), webix.ProgressBar);\n\n\t\t// load up our callbacks.\n\t\tfor (var c in _logic.callbacks) {\n\t\t\t_logic.callbacks[c] = options[c] || _logic.callbacks[c];\n\t\t}\n\t};\n\n\t// our internal business logic \n\tvar _logic = {\n\n\t\tcallbacks: {\n\t\t\tonCancel: function onCancel() {\n\t\t\t\tconsole.warn('NO onCancel()!');\n\t\t\t},\n\t\t\tonSave: function onSave(values, cb) {\n\t\t\t\tconsole.warn('NO onSave()!');\n\t\t\t}\n\t\t},\n\n\t\tcancel: function cancel() {\n\n\t\t\t_logic.formClear();\n\t\t\t_logic.callbacks.onCancel();\n\t\t},\n\n\t\tformClear: function formClear() {\n\t\t\t$$(ids.form).clearValidation();\n\t\t\t$$(ids.form).clear();\n\t\t},\n\n\t\t/**\n   * @function hide()\n   *\n   * hide this component.\n   */\n\t\thide: function hide() {\n\n\t\t\t$$(ids.component).hide();\n\t\t},\n\n\t\t/**\n   * @function save\n   *\n   * verify the current info is ok, package it, and return it to be \n   * added to the application.createModel() method.\n   */\n\t\tsave: function save() {\n\t\t\tvar saveButton = $$(ids.buttonSave);\n\t\t\tsaveButton.disable();\n\n\t\t\tvar Form = $$(ids.form);\n\n\t\t\tForm.clearValidation();\n\n\t\t\t// if it doesn't pass the basic form validation, return:\n\t\t\tif (!Form.validate()) {\n\t\t\t\tsaveButton.enable();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar values = Form.getValues();\n\n\t\t\t// now send data back to be added:\n\t\t\t_logic.callbacks.onSave(values, function (err) {\n\n\t\t\t\tif (err) {\n\t\t\t\t\tif (OP.Form.isValidationError(err, Form)) {}\n\t\t\t\t\t// do I do anything else here?\n\t\t\t\t\t// this auto updates the form\n\n\n\t\t\t\t\t// get notified if there was an error saving.\n\t\t\t\t\tsaveButton.enable();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// if there was no error, clear the form for the next\n\t\t\t\t// entry:\n\t\t\t\t_logic.formClear();\n\t\t\t});\n\t\t},\n\n\t\t/**\n   * @function show()\n   *\n   * Show this component.\n   */\n\t\tshow: function show() {\n\n\t\t\t$$(ids.component).show();\n\t\t}\n\t};\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {}\n\n\t/**\n  * @function populateApplicationForm()\n  *\n  * Initialze the Form with the values from the provided ABApplication.\n  *\n  * If no ABApplication is provided, then show an empty form. (create operation)\n  *\n  * @param {ABApplication} Application  \t[optional] The current ABApplication \n  *\t\t\t\t\t\t\t\t\t\twe are working with.\n  */\n\t// populateApplicationForm:function(Application){\n\n\t// \t_logic.formReset();\n\t// \tif (Application) {\n\t// \t\t// populate Form here:\n\t// \t\t_logic.formPopulate(Application);\n\t// \t}\n\t// \t_logic.permissionPopulate(Application);\n\t// \t_logic.show();\n\t// }\n\n\t// return the current instance of this component:\n\t;return {\n\t\tui: _ui, // {obj} \tthe webix ui definition for this component\n\t\tinit: _init, // {fn} \tinit() to setup this component  \n\t\tactions: _actions, // {ob}\t\thash of fn() to expose so other components can access.\n\n\t\t_logic: _logic // {obj} \tUnit Testing\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\nvar _ABApplication = __webpack_require__(1);\n\nvar _ABApplication2 = _interopRequireDefault(_ABApplication);\n\n__webpack_require__(27);\n\n__webpack_require__(28);\n\n__webpack_require__(30);\n\n__webpack_require__(31);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n/*\n * ab_work_object_workspace\n *\n * Manage the Object Workspace area.\n *\n */\n\nvar labels = {\n\n\tcomponent: {\n\n\t\taddNewRow: L('ab.object.addNewRow', \"*Add new row\"),\n\n\t\tselectObject: L('ab.object.selectObject', \"*Select an object to work with.\"),\n\n\t\t// formHeader: L('ab.application.form.header', \"*Application Info\"),\n\n\t\t// Toolbar:\n\t\thideFields: L('ab.object.toolbar.hideFields', \"*Hide fields\"),\n\t\tfilterFields: L('ab.object.toolbar.filterFields', \"*Add filters\"),\n\t\tsortFields: L('ab.object.toolbar.sortFields', \"*Apply sort\"),\n\t\tfrozenColumns: L('ab.object.toolbar.frozenColumns', \"*Frozen columns\"),\n\t\tdefineLabel: L('ab.object.toolbar.defineLabel', \"*Define label\"),\n\t\tpermission: L('ab.object.toolbar.permission', \"*Permission\"),\n\t\taddFields: L('ab.object.toolbar.addFields', \"*Add new column\"),\n\t\t\"export\": L('ab.object.toolbar.export', \"*Export\"),\n\n\t\tconfirmDeleteTitle: L('ab.object.delete.title', \"*Delete data field\"),\n\t\tconfirmDeleteMessage: L('ab.object.delete.message', \"*Do you want to delete <b>{0}</b>?\")\n\t}\n};\n\nvar idBase = 'ab_work_object_workspace';\nOP.Component.extend(idBase, function (App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\n\t\tbuttonAddField: App.unique(idBase + '_buttonAddField'),\n\t\tbuttonExport: App.unique(idBase + '_buttonExport'),\n\t\tbuttonFieldsVisible: App.unique(idBase + '_buttonFieldsVisible'),\n\t\tbuttonFilter: App.unique(idBase + '_buttonFilter'),\n\t\tbuttonFrozen: App.unique(idBase + '_buttonFrozen'),\n\t\tbuttonLabel: App.unique(idBase + '_buttonLabel'),\n\t\tbuttonRowNew: App.unique(idBase + '_buttonRowNew'),\n\t\tbuttonSort: App.unique(idBase + '_buttonSort'),\n\n\t\tdatatable: App.unique(idBase + '_datatable'),\n\n\t\t// Toolbar:\n\t\ttoolbar: App.unique(idBase + '_toolbar'),\n\n\t\tnoSelection: App.unique(idBase + '_noSelection'),\n\t\tselectedObject: App.unique(idBase + '_selectedObject')\n\n\t};\n\n\t// The DataTable that displays our object:\n\tvar DataTable = OP.Component['ab_work_object_workspace_datatable'](App);\n\n\t// Various Popups on our page:\n\tvar PopupDefineLabelComponent = OP.Component['ab_work_object_workspace_popupDefineLabel'](App);\n\tvar PopupDefineLabel = webix.ui(PopupDefineLabelComponent.ui);\n\n\tvar PopupNewDataFieldComponent = OP.Component['ab_work_object_workspace_popupNewDataField'](App);\n\t// var PopupNewDataField = webix.ui(PopupNewDataFieldComponent.ui);\n\twebix.ui(PopupNewDataFieldComponent.ui);\n\n\tvar PopupHideFieldComponent = OP.Component['ab_work_object_workspace_popupHideFields'](App);\n\tvar PopupHideField = webix.ui(PopupHideFieldComponent.ui);\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tview: 'multiview',\n\t\tid: ids.component,\n\t\trows: [{\n\t\t\tid: ids.noSelection,\n\t\t\trows: [{\n\t\t\t\tview: 'label',\n\t\t\t\tlabel: labels.component.selectObject\n\t\t\t}]\n\t\t}, {\n\t\t\tid: ids.selectedObject,\n\t\t\trows: [{\n\t\t\t\tview: 'toolbar',\n\t\t\t\tid: ids.toolbar,\n\t\t\t\thidden: true,\n\t\t\t\tcss: \"ab-data-toolbar\",\n\t\t\t\tcols: [{\n\t\t\t\t\tview: \"button\",\n\t\t\t\t\tid: ids.buttonFieldsVisible,\n\t\t\t\t\tlabel: labels.component.hideFields,\n\t\t\t\t\t// popup: 'self.webixUiId.visibleFieldsPopup',\n\t\t\t\t\ticon: \"eye-slash\",\n\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t// width: 120,\n\t\t\t\t\tautowidth: true,\n\t\t\t\t\tbadge: 0,\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t_logic.toolbarFieldsVisible(this.$view);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tview: 'button',\n\t\t\t\t\tid: ids.buttonFilter,\n\t\t\t\t\tlabel: labels.component.filterFields,\n\t\t\t\t\ticon: \"filter\",\n\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t// width: 120,\n\t\t\t\t\tautowidth: true,\n\t\t\t\t\tbadge: 0,\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t_logic.toolbarFilter(this);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tview: 'button',\n\t\t\t\t\tid: ids.buttonSort,\n\t\t\t\t\tlabel: labels.component.sortFields,\n\t\t\t\t\ticon: \"sort\",\n\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t// width: 120,\n\t\t\t\t\tautowidth: true,\n\t\t\t\t\tbadge: 0,\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t_logic.toolbarSort(this.$view);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tview: 'button',\n\t\t\t\t\tid: ids.buttonFrozen,\n\t\t\t\t\tlabel: labels.component.frozenColumns,\n\t\t\t\t\ticon: \"thumb-tack\",\n\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\tautowidth: true,\n\t\t\t\t\tbadge: 0,\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t_logic.toolbarFrozen(this.$view);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tview: 'button',\n\t\t\t\t\tid: ids.buttonLabel,\n\t\t\t\t\tlabel: labels.component.defineLabel,\n\t\t\t\t\ticon: \"crosshairs\",\n\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t// width: 130,\n\t\t\t\t\tautowidth: true,\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t_logic.toolbarDefineLabel(this.$view);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tview: 'button',\n\t\t\t\t\tlabel: labels.component.permission,\n\t\t\t\t\ticon: \"lock\",\n\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\tautowidth: true,\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t_logic.toolbarPermission(this.$view);\n\t\t\t\t\t}\n\n\t\t\t\t}, {\n\t\t\t\t\tview: 'button',\n\t\t\t\t\tid: ids.buttonAddField,\n\t\t\t\t\tlabel: labels.component.addFields,\n\t\t\t\t\ticon: \"plus\",\n\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t// width: 150,\n\t\t\t\t\tautowidth: true,\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t_logic.toolbarAddFields(this.$view);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tview: 'button',\n\t\t\t\t\tid: ids.buttonExport,\n\t\t\t\t\tlabel: labels.component.export,\n\t\t\t\t\ticon: \"download\",\n\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\tautowidth: true,\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t_logic.toolbarButtonExport(this.$view);\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t}, DataTable.ui, {\n\t\t\t\tcols: [{\n\t\t\t\t\tview: \"button\",\n\t\t\t\t\tid: ids.buttonRowNew,\n\t\t\t\t\tvalue: labels.component.addNewRow,\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t// TODO:\n\t\t\t\t\t\t_logic.rowAdd();\n\t\t\t\t\t\t// self.addNewRow({});\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t}]\n\n\t\t}]\n\t};\n\n\t// Our init() function for setting up our UI\n\tvar _init = function _init() {\n\t\t// webix.extend($$(ids.form), webix.ProgressBar);\n\n\t\tDataTable.init({\n\t\t\tonEditorMenu: _logic.callbackHeaderEditorMenu\n\t\t});\n\n\t\tPopupDefineLabelComponent.init({\n\t\t\tonChange: _logic.callbackDefineLabel // be notified when there is a change in the label\n\t\t});\n\n\t\tPopupNewDataFieldComponent.init({\n\t\t\tonSave: _logic.callbackAddFields // be notified when a new Field is created & saved\n\t\t});\n\n\t\tPopupHideFieldComponent.init({\n\t\t\tonChange: _logic.callbackFieldsVisible // be notified when there is a change in the hidden fields\n\t\t});\n\n\t\t$$(ids.noSelection).show();\n\t};\n\n\tvar CurrentObject = null;\n\n\t// our internal business logic\n\tvar _logic = {\n\n\t\t/**\n   * @function callbackDefineLabel\n   *\n   * call back for when the Define Label popup is finished.\n   */\n\t\tcallbackAddFields: function callbackAddFields(field) {\n\t\t\tDataTable.refresh();\n\t\t},\n\n\t\t/**\n   * @function callbackDefineLabel\n   *\n   * call back for when the Define Label popup is finished.\n   */\n\t\tcallbackDefineLabel: function callbackDefineLabel() {},\n\n\t\t/**\n   * @function callbackFieldsVisible\n   *\n   * call back for when the hidden fields have changed.\n   */\n\t\tcallbackFieldsVisible: function callbackFieldsVisible() {\n\n\t\t\tvar hiddenFields = CurrentObject.workspaceHiddenFields;\n\t\t\t$$(ids.buttonFieldsVisible).define('badge', hiddenFields.length);\n\t\t\t$$(ids.buttonFieldsVisible).refresh();\n\n\t\t\tDataTable.refresh();\n\t\t},\n\n\t\t/**\n   * @function callbackFieldsVisible\n   *\n   * call back for when an editor menu action has been selected.\n   * @param {string} action [ 'hide', 'filter', 'sort', 'edit', 'delete' ]\n   */\n\t\tcallbackHeaderEditorMenu: function callbackHeaderEditorMenu(action, field, node) {\n\n\t\t\tswitch (action) {\n\n\t\t\t\tcase 'hide':\n\t\t\t\tcase 'filter':\n\t\t\t\tcase 'sort':\n\t\t\t\t\tconsole.error('!! TODO: callbackHeaderEditorMenu():  unimplemented action:' + action);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'edit':\n\t\t\t\t\t// pass control on to our Popup:\n\t\t\t\t\tPopupNewDataFieldComponent.show(node, field);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'delete':\n\n\t\t\t\t\t// verify they mean to do this:\n\t\t\t\t\tOP.Dialog.Confirm({\n\t\t\t\t\t\ttitle: labels.component.confirmDeleteTitle,\n\t\t\t\t\t\tmessage: labels.component.confirmDeleteMessage.replace('{0}', field.label),\n\t\t\t\t\t\tcallback: function callback(isOK) {\n\n\t\t\t\t\t\t\tif (isOK) {\n\t\t\t\t\t\t\t\t//// LEFT OFF HERE:\n\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\t/**\n   * @function clearObjectWorkspace()\n   *\n   * Clear the object workspace. \n   */\n\t\tclearObjectWorkspace: function clearObjectWorkspace() {\n\n\t\t\t// NOTE: to clear a visual glitch when multiple views are updating\n\t\t\t// at one time ... stop the animation on this one:\n\t\t\t$$(ids.noSelection).show(false, false);\n\t\t},\n\n\t\t/**\n   * @function show()\n   *\n   * Show this component.\n   */\n\t\tshow: function show() {\n\n\t\t\t$$(ids.component).show();\n\t\t},\n\n\t\t/**\n   * @function toolbarAddFields\n   *\n   * Show the popup to allow the user to create new fields for \n   * this object.\n   */\n\t\ttoolbarAddFields: function toolbarAddFields($view) {\n\t\t\tPopupNewDataFieldComponent.show($view);\n\t\t},\n\n\t\ttoolbarButtonExport: function toolbarButtonExport($view) {\n\t\t\tconsole.error('TODO: Button Export()');\n\t\t},\n\n\t\t/**\n   * @function toolbarDefineLabel\n   *\n   * Show the popup to allow the user to define the default label for \n   * this object.\n   */\n\t\ttoolbarDefineLabel: function toolbarDefineLabel($view) {\n\t\t\tPopupDefineLabel.show($view);\n\t\t},\n\n\t\t/**\n   * @function toolbarFieldsVisible\n   *\n   * Show the popup to allow the user to hide columns for this view.\n   */\n\t\ttoolbarFieldsVisible: function toolbarFieldsVisible($view) {\n\t\t\tPopupHideField.show($view);\n\t\t},\n\n\t\t/**\n   * @function toolbarFilter\n   *\n   * show the popup to add a filter to the datatable\n   */\n\t\ttoolbarFilter: function toolbarFilter($view) {\n\t\t\t// self.refreshPopupData();\n\t\t\t// $$(self.webixUiId.filterFieldsPopup).show($view);\n\t\t\tconsole.error('TODO: button filterFields()');\n\t\t},\n\n\t\t/**\n   * @function toolbarFrozen\n   *\n   * show the popup to freeze columns for the datatable\n   */\n\t\ttoolbarFrozen: function toolbarFrozen($view) {\n\t\t\tconsole.error('TODO: toolbarFrozen()');\n\t\t},\n\n\t\ttoolbarPermission: function toolbarPermission($view) {\n\t\t\tconsole.error('TODO: toolbarPermission()');\n\t\t},\n\n\t\t/**\n   * @function toolbarSort\n   *\n   * show the popup to sort the datatable\n   */\n\t\ttoolbarSort: function toolbarSort($view) {\n\t\t\t// self.refreshPopupData();\n\t\t\t// $$(self.webixUiId.sortFieldsPopup).show($view);\n\t\t\tconsole.error('TODO: toolbarSort()');\n\t\t}\n\t};\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\t\t/**\n   * @function populateObjectWorkspace()\n   *\n   * Initialize the Object Workspace with the provided ABObject.\n   *\n   * @param {ABObject} object  \tcurrent ABObject instance we are working with.\n   */\n\t\tpopulateObjectWorkspace: function populateObjectWorkspace(object) {\n\n\t\t\t$$(ids.toolbar).show();\n\t\t\t$$(ids.selectedObject).show();\n\n\t\t\tCurrentObject = object;\n\n\t\t\tApp.actions.populateObjectPopupAddDataField(object);\n\n\t\t\t// update hiddenFields \n\t\t\t_logic.callbackFieldsVisible();\n\n\t\t\tPopupDefineLabelComponent.objectLoad(object);\n\t\t\tPopupHideFieldComponent.objectLoad(object);\n\t\t\tDataTable.objectLoad(object);\n\t\t}\n\n\t};\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui: _ui, // {obj} \tthe webix ui definition for this component\n\t\tinit: _init, // {fn} \tinit() to setup this component\n\t\tactions: _actions, // {ob}\t\thash of fn() to expose so other components can access.\n\n\t\t// interface methods for parent component:\n\t\tclearObjectWorkspace: _logic.clearObjectWorkspace,\n\n\t\t_logic: _logic // {obj} \tUnit Testing\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\n__webpack_require__(29);\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n/*\n * ab_work_object_workspace\n *\n * Manage the Object Workspace area.\n *\n */\n\nvar labels = {\n\n\tcomponent: {}\n};\n\nvar idBase = 'ab_work_object_workspace_datatable';\nOP.Component.extend(idBase, function (App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component')\n\n\t};\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tview: \"datatable\",\n\t\tid: ids.component,\n\t\tresizeColumn: true,\n\t\tresizeRow: true,\n\t\tprerender: false,\n\t\teditable: true,\n\t\tfixedRowHeight: false,\n\t\teditaction: \"custom\",\n\t\tselect: \"cell\",\n\t\tdragColumn: true,\n\t\t//height:800,  // #hack!\n\t\ton: {\n\t\t\tonBeforeSelect: function onBeforeSelect(data, preserve) {\n\t\t\t\tconsole.error('!! ToDo: onBeforeSelect()');\n\t\t\t\t// var itemNode = this.getItemNode({ row: data.row, column: data.column });\n\n\t\t\t\t// var column = AD.classes.AppBuilder.currApp.currObj.columns.filter(function (col) { return col.name == data.column; });\n\t\t\t\t// if (!column || column.length < 1) {\n\t\t\t\t// \tconsole.log('System could not found this column data');\n\t\t\t\t// \treturn false;\n\t\t\t\t// } else\n\t\t\t\t// \tcolumn = column[0];\n\n\t\t\t\t// return dataFieldsManager.customEdit(AD.classes.AppBuilder.currApp, AD.classes.AppBuilder.currApp.currObj, column, data.row, itemNode);\n\t\t\t},\n\t\t\tonAfterSelect: function onAfterSelect(data, prevent) {\n\t\t\t\tconsole.error('!! todo: onAfterSelect()');\n\t\t\t\t// var columnConfig = $$(self.webixUiId.objectDatatable).getColumnConfig(data.column),\n\t\t\t\t// \tfieldData = AD.classes.AppBuilder.currApp.currObj.columns.filter(function (col) { return col.name == data.column; });\n\n\t\t\t\t// if (!fieldData || fieldData.length < 1) {\n\t\t\t\t// \tconsole.log('System could not found this column data');\n\t\t\t\t// \treturn false;\n\t\t\t\t// } else\n\t\t\t\t// \tfieldData = fieldData[0];\n\n\t\t\t\t// // Custom update data\n\t\t\t\t// if (dataFieldsManager.hasCustomEdit(columnConfig.fieldName, fieldData))\n\t\t\t\t// \treturn false;\n\n\t\t\t\t// // Normal update data\n\t\t\t\t// this.editCell(data.row, data.column);\n\t\t\t},\n\t\t\tonCheck: function onCheck(row, col, val) {\n\t\t\t\t// Update checkbox data\n\t\t\t\tconsole.error('!! ToDo: onCheck()');\n\t\t\t\t// var item = $$(self.webixUiId.objectDatatable).getItem(row);\n\n\t\t\t\t// self.updateRowData({ value: (val > 0 ? true : false) }, { row: row, column: col }, false)\n\t\t\t\t// \t.fail(function (err) {\n\t\t\t\t// \t\t// Rollback\n\t\t\t\t// \t\titem[col] = !val;\n\t\t\t\t// \t\t$$(self.webixUiId.objectDatatable).updateItem(row, item);\n\t\t\t\t// \t\t$$(self.webixUiId.objectDatatable).refresh(row);\n\n\t\t\t\t// \t\t$$(self.webixUiId.objectDatatable).hideProgress();\n\t\t\t\t// \t})\n\t\t\t\t// \t.then(function (result) {\n\t\t\t\t// \t\t$$(self.webixUiId.objectDatatable).hideProgress();\n\t\t\t\t// \t});\n\t\t\t},\n\t\t\tonBeforeEditStop: function onBeforeEditStop(state, editor) {\n\t\t\t\tconsole.error('!! ToDo: onCheck()');\n\t\t\t\t// var column = AD.classes.AppBuilder.currApp.currObj.columns.filter(function (col) { return col.name == editor.column; });\n\n\t\t\t\t// if (!column || column.length < 1) return true;\n\t\t\t\t// column = column[0];\n\n\t\t\t\t// var passValidate = dataFieldsManager.validate(column, state.value);\n\n\t\t\t\t// if (!passValidate) {\n\t\t\t\t// \t$$(self.webixUiId.objectDatatable).editCancel();\n\t\t\t\t// }\n\n\t\t\t\t// return passValidate;\n\t\t\t},\n\t\t\tonAfterEditStop: function onAfterEditStop(state, editor, ignoreUpdate) {\n\t\t\t\tconsole.error('!! ToDo: onAfterEditStop()');\n\t\t\t\t// var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n\t\t\t\t// self.updateRowData(state, editor, ignoreUpdate)\n\t\t\t\t// \t.fail(function (err) { // Cached\n\t\t\t\t// \t\titem[editor.column] = state.old;\n\t\t\t\t// \t\t$$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n\t\t\t\t// \t\t$$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n\t\t\t\t// \t\t// TODO : Message\n\n\t\t\t\t// \t\t$$(self.webixUiId.objectDatatable).hideProgress();\n\t\t\t\t// \t})\n\t\t\t\t// \t.then(function (result) {\n\t\t\t\t// \t\tif (item) {\n\t\t\t\t// \t\t\titem[editor.column] = state.value;\n\n\t\t\t\t// \t\t\tif (result && result.constructor.name === 'Cached' && result.isUnsync())\n\t\t\t\t// \t\t\t\titem.isUnsync = true;\n\n\t\t\t\t// \t\t\t$$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n\t\t\t\t// \t\t}\n\n\t\t\t\t// \t\t// TODO : Message\n\n\t\t\t\t// \t\t$$(self.webixUiId.objectDatatable).hideProgress();\n\t\t\t\t// \t});\n\t\t\t},\n\t\t\tonColumnResize: function onColumnResize(id, newWidth, oldWidth, user_action) {\n\t\t\t\tconsole.error('!! ToDo: onColumnResize()');\n\t\t\t\t// var columnConfig = $$(self.webixUiId.objectDatatable).getColumnConfig(id);\n\t\t\t\t// var column = self.data.columns.filter(function (col) { return col.id == columnConfig.dataId; });\n\t\t\t\t// if (column && column[0])\n\t\t\t\t// \tcolumn[0].setWidth(newWidth);\n\n\t\t\t\t// // if (typeof columnConfig.template !== 'undefined' && columnConfig.template !== null) {\n\t\t\t\t// // \t// For calculate/refresh row height\n\t\t\t\t// // \t$$(self.webixUiId.objectDatatable).render();\n\t\t\t\t// // }\n\t\t\t},\n\t\t\tonBeforeColumnDrag: function onBeforeColumnDrag(sourceId, event) {\n\t\t\t\tconsole.error('!! ToDo: onBeforeColumnDrag()');\n\t\t\t\t// if (sourceId === 'appbuilder_trash') // Remove column\n\t\t\t\t// \treturn false;\n\t\t\t\t// else\n\t\t\t\t// \treturn true;\n\t\t\t},\n\t\t\tonBeforeColumnDrop: function onBeforeColumnDrop(sourceId, targetId, event) {\n\t\t\t\tconsole.error('!! ToDo: onBeforeColumnDrag()');\n\t\t\t\t// if (targetId === 'appbuilder_trash') // Remove column\n\t\t\t\t// \treturn false;\n\n\t\t\t\t// if ($$(self.webixUiId.visibleButton).config.badge > 0) {\n\t\t\t\t// \twebix.alert({\n\t\t\t\t// \t\ttitle: self.labels.object.couldNotReorderField,\n\t\t\t\t// \t\tok: self.labels.common.ok,\n\t\t\t\t// \t\ttext: self.labels.object.couldNotReorderFieldDetail\n\t\t\t\t// \t});\n\n\t\t\t\t// \treturn false;\n\t\t\t\t// }\n\t\t\t},\n\t\t\tonAfterColumnDrop: function onAfterColumnDrop(sourceId, targetId, event) {\n\t\t\t\tconsole.error('!! ToDo: onAfterColumnDrop()');\n\t\t\t\t// self.reorderColumns();\n\t\t\t},\n\t\t\tonAfterColumnShow: function onAfterColumnShow(id) {\n\t\t\t\tconsole.error('!! ToDo: onAfterColumnShow()');\n\t\t\t\t// $$(self.webixUiId.visibleFieldsPopup).showField(id);\n\t\t\t},\n\t\t\tonAfterColumnHide: function onAfterColumnHide(id) {\n\t\t\t\tconsole.error('!! ToDo: onAfterColumnHide()');\n\t\t\t\t// $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n\t\t\t},\n\n\t\t\tonHeaderClick: function onHeaderClick(id, e, node) {\n\t\t\t\t_logic.onHeaderClick(id, e, node);\n\t\t\t}\n\t\t}\n\t};\n\n\t// Our init() function for setting up our UI\n\tvar _init = function _init(options) {\n\n\t\t// register our callbacks:\n\t\tfor (var c in _logic.callbacks) {\n\t\t\t_logic.callbacks[c] = options[c] || _logic.callbacks[c];\n\t\t}\n\n\t\t// webix.extend($$(ids.form), webix.ProgressBar);\n\t};\n\n\tvar CurrentObject = null; // current ABObject being displayed\n\tvar EditField = null; // which field (column header) is popup editor for\n\tvar EditNode = null; // which html node (column header) is popup editor for\n\n\t// our internal business logic\n\tvar _logic = {\n\n\t\tcallbacks: {\n\n\t\t\t/**\n    * @function onEditorMenu\n    * report back which menu action was clicked.\n    * We get the info from our popupHeaderEditor component, but all the \n    * logic to respond to those options are in our parent. So we pass it \n    * on ...\n    * \n    * @param {string} action [ 'hide', 'filter', 'sort', 'edit', 'delete' ]\n    * @param {ABField} field  the field to which the action is to be applied\n    * @param {dom} node  the optional html node for this header item.\n    */\n\t\t\tonEditorMenu: function onEditorMenu(action, field) {}\n\t\t},\n\n\t\t/**\n   * @function callbackHeaderEdit\n   *\n   * call back for when an item in the Header Edit Menu has been selected.\n   * @param {string} action the action requested for this field:\n   */\n\t\tcallbackHeaderEdit: function callbackHeaderEdit(action) {\n\n\t\t\tPopupHeaderEdit.hide();\n\t\t\t_logic.callbacks.onEditorMenu(action, EditField, EditNode);\n\t\t},\n\n\t\t/**\n   * @function onHeaderClick\n   * \n   * process the user clicking on the header for one of our columns.\n   */\n\t\tonHeaderClick: function onHeaderClick(id, e, node) {\n\n\t\t\t// Ignore system columns\n\t\t\tif (id.column == 'appbuilder_trash') return false;\n\n\t\t\t// save our EditNode & EditField:\n\t\t\tEditNode = node;\n\n\t\t\tEditField = CurrentObject.fields(function (f) {\n\t\t\t\treturn f.id == id.column;\n\t\t\t})[0];\n\t\t\tif (EditField) {\n\n\t\t\t\t// show the popup\n\t\t\t\tPopupHeaderEdit.show(node);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\tobjectLoad: function objectLoad(object) {\n\n\t\t\tCurrentObject = object;\n\n\t\t\tPopupHeaderEditComponent.objectLoad(object);\n\n\t\t\t_logic.refresh();\n\t\t},\n\n\t\t// rebuild the data table view:\n\t\trefresh: function refresh() {\n\n\t\t\t// wait until we have an Object defined:\n\t\t\tif (CurrentObject) {\n\n\t\t\t\tvar DataTable = $$(ids.component);\n\t\t\t\tDataTable.clearAll();\n\n\t\t\t\t// update DataTable structure:\n\t\t\t\tvar columnHeaders = CurrentObject.columnHeaders(true);\n\t\t\t\tDataTable.refreshColumns(columnHeaders);\n\n\t\t\t\t// update DataTable Content\n\t\t\t}\n\t\t},\n\n\t\t/**\n   * @function show()\n   *\n   * Show this component.\n   */\n\t\tshow: function show() {\n\n\t\t\t$$(ids.component).show();\n\t\t}\n\n\t};\n\n\t//// NOTE: declare these after _logic  for the callbacks:\n\n\tvar PopupHeaderEditComponent = OP.Component['ab_work_object_workspace_popupHeaderEditMenu'](App);\n\tvar PopupHeaderEdit = webix.ui(PopupHeaderEditComponent.ui);\n\tPopupHeaderEditComponent.init({\n\t\tonClick: _logic.callbackHeaderEdit // be notified when there is a change in the hidden fields\n\t});\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {};\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui: _ui, // {obj} \tthe webix ui definition for this component\n\t\tinit: _init, // {fn} \tinit() to setup this component\n\t\tactions: _actions, // {ob}\t\thash of fn() to expose so other components can access.\n\n\t\t// interface methods for parent component:\n\t\tobjectLoad: _logic.objectLoad,\n\t\trefresh: _logic.refresh,\n\n\t\t_logic: _logic // {obj} \tUnit Testing\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\n/*\n * ab_work_object_workspace_popupDefineLabel\n *\n * Manage the Add New Data Field popup.\n *\n */\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nvar labels = {\n\n\tcomponent: {\n\n\t\tlabelFormat: L('ab.define_label.labelFormat', \"*Label format\"),\n\t\tselectFieldToGenerate: L('ab.define_label.selectFieldToGenerate', \"*Select field item to generate format.\"),\n\t\tlabelFields: L('ab.define_label.labelFields', \"*Fields\")\n\t}\n};\n\nvar idBase = 'ab_work_object_workspace_popupDefineLabel';\nOP.Component.extend(idBase, function (App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\t\tformat: App.unique(idBase + '_format'),\n\t\tlist: App.unique(idBase + '_list'),\n\n\t\tbuttonSave: App.unique(idBase + '_buttonSave')\n\t};\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tview: \"popup\",\n\t\tid: ids.component,\n\t\tmodal: true,\n\t\tautoheight: true,\n\t\t// maxHeight: 420,\n\n\t\twidth: 500,\n\t\tbody: {\n\t\t\trows: [{\n\t\t\t\tview: \"label\",\n\t\t\t\tlabel: \"<b>{0}</b>\".replace(\"{0}\", labels.component.labelFormat)\n\t\t\t}, {\n\t\t\t\tview: \"textarea\",\n\t\t\t\tid: ids.format,\n\t\t\t\theight: 100\n\t\t\t}, {\n\t\t\t\tview: \"label\",\n\t\t\t\tlabel: labels.component.selectFieldToGenerate\n\t\t\t}, {\n\t\t\t\tview: \"label\",\n\t\t\t\tlabel: \"<b>{0}</b>\".replace(\"{0}\", labels.component.labelFields)\n\t\t\t}, {\n\t\t\t\tview: 'list',\n\t\t\t\tid: ids.list,\n\t\t\t\twidth: 500,\n\t\t\t\tmaxHeight: 180,\n\t\t\t\tselect: false,\n\t\t\t\ttemplate: '#label#',\n\t\t\t\ton: {\n\t\t\t\t\tonItemClick: function onItemClick(id, e, node) {\n\t\t\t\t\t\t_logic.onItemClick(id, e, node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\theight: 10\n\t\t\t}, {\n\t\t\t\tcols: [{\n\t\t\t\t\tview: \"button\", value: labels.common.cancel, width: 100,\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t_logic.buttonCancel();\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tview: \"button\", id: ids.buttonSave, label: labels.common.save, type: \"form\", width: 120,\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t_logic.buttonSave();\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t}]\n\t\t},\n\t\ton: {\n\t\t\tonShow: function onShow() {\n\t\t\t\t_logic.onShow();\n\t\t\t}\n\t\t}\n\t};\n\n\tvar _currentObject = null;\n\n\t// Our init() function for setting up our UI\n\tvar _init = function _init(options) {\n\n\t\t// register our callbacks:\n\t\tfor (var c in _logic.callbacks) {\n\t\t\t_logic.callbacks[c] = options[c] || _logic.callbacks[c];\n\t\t}\n\n\t\twebix.extend($$(ids.list), webix.ProgressBar);\n\t};\n\n\t// our internal business logic \n\tvar _logic = {\n\n\t\tbuttonCancel: function buttonCancel() {\n\t\t\t$$(ids.component).hide();\n\t\t},\n\n\t\tbuttonSave: function buttonSave() {\n\n\t\t\t// disable our save button\n\t\t\tvar ButtonSave = $$(ids.buttonSave);\n\t\t\tButtonSave.disable();\n\n\t\t\t// get our current labelFormt\n\t\t\tvar labelFormat = $$(ids.format).getValue();\n\n\t\t\t// start our spinner\n\t\t\tvar List = $$(ids.list);\n\t\t\tList.showProgress({ type: 'icon' });\n\n\t\t\t// convert from our User Friendly {Label} format to our \n\t\t\t// object friendly {Name} format\n\t\t\tList.data.each(function (d) {\n\t\t\t\tlabelFormat = labelFormat.replace(new RegExp('{' + d.label + '}', 'g'), '{' + d.id + '}');\n\t\t\t});\n\n\t\t\t// save the value\n\t\t\t_currentObject.labelFormat = labelFormat;\n\t\t\t_currentObject.save().then(function () {\n\n\t\t\t\t// all good, so\n\t\t\t\tList.hideProgress(); // hide the spinner\n\t\t\t\tButtonSave.enable(); // enable the save button\n\t\t\t\t_logic.hide(); // hide the popup\n\n\t\t\t\t// alert our parent component we are done with our changes:\n\t\t\t\t_logic.callbacks.onSave();\n\t\t\t}).catch(function (err) {\n\t\t\t\tList.hideProgress(); // hide the spinner\n\t\t\t\tButtonSave.enable(); // enable the save button\n\n\t\t\t\t// display some error to the user:\n\t\t\t\tOP.Error.log('Error trying to save our Object', { error: err });\n\t\t\t});\n\t\t},\n\n\t\tcallbacks: {\n\t\t\tonCancel: function onCancel() {\n\t\t\t\tconsole.warn('NO onCancel()!');\n\t\t\t},\n\t\t\tonSave: function onSave(field) {\n\t\t\t\tconsole.warn('NO onSave()!');\n\t\t\t}\n\t\t},\n\n\t\thide: function hide() {\n\t\t\t$$(ids.component).hide();\n\t\t},\n\n\t\tobjectLoad: function objectLoad(object) {\n\t\t\t_currentObject = object;\n\n\t\t\t// clear our list\n\t\t\tvar List = $$(ids.list);\n\t\t\tList.clearAll();\n\n\t\t\t// refresh list with new set of fields\n\t\t\tvar allFields = _currentObject.fields();\n\t\t\tvar listFields = [];\n\t\t\tallFields.forEach(function (f) {\n\t\t\t\tlistFields.push({\n\t\t\t\t\tid: f.name,\n\t\t\t\t\tlabel: f.label\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tList.parse(allFields);\n\t\t},\n\n\t\tonItemClick: function onItemClick(id, e, node) {\n\n\t\t\tvar selectedItem = $$(ids.list).getItem(id);\n\n\t\t\tvar labelFormat = $$(ids.format).getValue();\n\t\t\tlabelFormat += '{{0}}'.replace('{0}', selectedItem.label);\n\n\t\t\t$$(ids.format).setValue(labelFormat);\n\t\t},\n\n\t\tonShow: function onShow() {\n\n\t\t\tvar labelFormat = _currentObject.labelFormat;\n\n\t\t\tvar Format = $$(ids.format);\n\t\t\tvar List = $$(ids.list);\n\n\t\t\tFormat.setValue('');\n\n\t\t\tFormat.enable();\n\t\t\tList.enable();\n\t\t\t$$(ids.buttonSave).enable();\n\n\t\t\t// our labelFormat should be in a computer friendly {name} format\n\t\t\t// here we want to convert it to a user friendly {label} format\n\t\t\t// to use in our popup:\n\t\t\tif (labelFormat) {\n\t\t\t\tif (List.data && List.data.count() > 0) {\n\t\t\t\t\tList.data.each(function (d) {\n\t\t\t\t\t\tlabelFormat = labelFormat.replace('{' + d.id + '}', '{' + d.label + '}');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// no label format:\n\t\t\t\t// Default to first field\n\t\t\t\tif (List.data && List.data.count() > 0) {\n\t\t\t\t\tvar field = List.getItem(List.getFirstId());\n\t\t\t\t\tlabelFormat = '{' + field.label + '}';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tFormat.setValue(labelFormat || '');\n\t\t},\n\n\t\t/**\n   * @function show()\n   *\n   * Show this component.\n   * @param {obj} $view  the webix.$view to hover the popup around.\n   */\n\t\tshow: function show($view) {\n\n\t\t\t$$(ids.component).show($view);\n\t\t}\n\n\t};\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {};\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui: _ui, // {obj} \tthe webix ui definition for this component\n\t\tinit: _init, // {fn} \tinit() to setup this component  \n\t\tactions: _actions, // {ob}\t\thash of fn() to expose so other components can access.\n\n\n\t\t// interface methods for parent component:\n\t\tobjectLoad: _logic.objectLoad,\n\n\t\t_logic: _logic // {obj} \tUnit Testing\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\n/*\n * ab_work_object_workspace_popupHeaderEditMenu\n *\n * Manage the Add New Data Field popup.\n *\n */\n\n// import ABApplication from \"../classes/ABApplication\"\n// import ABFieldManager from \"../classes/ABFieldManager\"\n\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nvar labels = {\n\n\tcomponent: {\n\n\t\thideField: L('ab.object.hideField', \"*Hide field\"),\n\t\tfilterField: L('ab.object.filterField', \"*Filter field\"),\n\t\tsortField: L('ab.object.sortField', \"*Sort field\"),\n\t\teditField: L('ab.object.editField', \"*Edit field\"),\n\t\tdeleteField: L('ab.object.deleteField', \"*Delete field\")\n\t}\n};\n\nvar idBase = 'ab_work_object_workspace_popupHeaderEditMenu';\nOP.Component.extend(idBase, function (App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\n\t\tlist: App.unique(idBase + '_list')\n\t};\n\n\t// the list of options shown in the popup menu:\n\tvar menuItems = {\n\n\t\t// Normally all items are available\n\t\t'default': [{ command: labels.component.hideField, icon: \"fa-columns\" }, { command: labels.component.filterField, icon: \"fa-filter\" }, { command: labels.component.sortField, icon: \"fa-sort\" }, { command: labels.component.editField, icon: \"fa-pencil-square-o\" }, { command: labels.component.deleteField, icon: \"fa-trash\" }],\n\t\t// But for imported objects, edit & delete are disabled\n\t\t'imported': [{ command: labels.component.hideField, icon: \"fa-columns\" }, { command: labels.component.filterField, icon: \"fa-filter\" }, { command: labels.component.sortField, icon: \"fa-sort\" }]\n\t};\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tview: \"popup\",\n\t\tid: ids.component,\n\t\tmodal: false,\n\t\tautoheight: true,\n\n\t\twidth: 180,\n\t\tbody: {\n\t\t\tid: ids.list,\n\t\t\tview: 'list',\n\t\t\tdatatype: \"json\",\n\t\t\tautoheight: true,\n\t\t\tselect: false,\n\t\t\ttemplate: \"<i class='fa #icon#' aria-hidden='true'></i> #command#\",\n\t\t\tdata: menuItems['default'], // start with the default set:\n\t\t\ton: {\n\t\t\t\t'onItemClick': function onItemClick(timestamp, e, node) {\n\t\t\t\t\t_logic.onItemClick(timestamp, e, node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar CurrentObject = null;\n\n\t// Our init() function for setting up our UI\n\tvar _init = function _init(options) {\n\n\t\t// register our callbacks:\n\t\tfor (var c in _logic.callbacks) {\n\t\t\t_logic.callbacks[c] = options[c] || _logic.callbacks[c];\n\t\t}\n\n\t\t// $$(ids.editDefinitions).cells() // define the edit Definitions here.\n\t};\n\n\t// our internal business logic\n\tvar _logic = {\n\n\t\tcallbacks: {\n\t\t\t/**\n    * @function onClick\n    * report back which menu action was clicked.\n    * possible actions: [ 'hide', 'filter', 'sort', 'edit', 'delete' ]\n    */\n\t\t\tonClick: function onClick(action) {}\n\t\t},\n\n\t\thide: function hide() {\n\t\t\t$$(ids.component).hide();\n\t\t},\n\n\t\t/**\n   * @function objectLoad\n   * Ready the Popup according to the current object\n   * @param {ABObject} object  the currently selected object.\n   */\n\t\tobjectLoad: function objectLoad(object) {\n\t\t\tCurrentObject = object;\n\n\t\t\t// TODO:\n\t\t\t// check if object is imported, if so, then switch the shown fields to the imported menu:\n\n\t\t\tvar listItems = menuItems['default'];\n\t\t\t// if (object.isImported) {\n\t\t\t// \tlistItems = menuItems['imported'];\n\t\t\t// }\n\t\t\tvar List = $$(ids.list);\n\t\t\tList.clearAll();\n\t\t\tList.parse(listItems);\n\t\t},\n\n\t\t/**\n   * @function onItemClick\n   * when an entry in our popup menu is selected, make sure our parent component is\n   * alerted to the action requested.\n   *\n   * possible return action values: [ 'hide', 'filter', 'sort', 'edit', 'delete' ]\n   *\n   */\n\t\tonItemClick: function onItemClick(timestamp, e, node) {\n\n\t\t\tvar action = null;\n\t\t\tvar menu = node.textContent.trim();\n\t\t\tswitch (menu) {\n\t\t\t\tcase labels.component.hideField:\n\t\t\t\t\taction = 'hide';\n\t\t\t\t\tbreak;\n\t\t\t\tcase labels.component.filterField:\n\t\t\t\t\taction = 'filter';\n\t\t\t\t\tbreak;\n\t\t\t\tcase labels.component.sortField:\n\t\t\t\t\taction = 'sort';\n\t\t\t\t\tbreak;\n\t\t\t\tcase labels.component.editField:\n\t\t\t\t\taction = 'edit';\n\t\t\t\t\tbreak;\n\t\t\t\tcase labels.component.deleteField:\n\t\t\t\t\taction = 'delete';\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t_logic.callbacks.onClick(action);\n\t\t},\n\n\t\t/**\n   * @function show()\n   *\n   * Show this component.\n   * @param {obj} $view  the webix.$view to hover the popup around.\n   */\n\t\tshow: function show($view) {\n\n\t\t\t$$(ids.component).show($view);\n\t\t}\n\n\t};\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {}\n\n\t// populateObjectPopupAddDataField: function(object) {\n\t// \t_currentObject = object;\n\t// }\n\n\t// return the current instance of this component:\n\t;return {\n\t\tui: _ui, // {obj} \tthe webix ui definition for this component\n\t\tinit: _init, // {fn} \tinit() to setup this component\n\t\tactions: _actions, // {ob}\t\thash of fn() to expose so other components can access.\n\n\n\t\thide: _logic.hide,\n\t\tobjectLoad: _logic.objectLoad,\n\t\tshow: _logic.show, // function($view, field_id) \n\n\n\t\t_logic: _logic // {obj} \tUnit Testing\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\nvar _ABApplication = __webpack_require__(1);\n\nvar _ABApplication2 = _interopRequireDefault(_ABApplication);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n/*\n * ab_work_object_workspace_popupHideFields\n *\n * Manage the Hide Fields popup.\n *\n */\n\nvar labels = {\n\n\tcomponent: {\n\n\t\tshowAll: L('ab.visible_fields.showAll', \"*Show All\"),\n\t\thideAll: L('ab.visible_fields.hideAll', \"*Hide All\")\n\t}\n};\n\nvar idBase = 'ab_work_object_workspace_popupHideFields';\nOP.Component.extend(idBase, function (App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\t\tlist: App.unique(idBase + \"_list\")\n\t};\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tview: \"popup\",\n\t\tid: ids.component,\n\t\t// modal: true,\n\t\tautoheight: true,\n\t\tbody: {\n\t\t\trows: [{\n\t\t\t\tcols: [{\n\t\t\t\t\tview: 'button',\n\t\t\t\t\tvalue: labels.component.showAll,\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t_logic.clickShowAll();\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tview: 'button',\n\t\t\t\t\tvalue: labels.component.hideAll,\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t_logic.clickHideAll();\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t}, {\n\t\t\t\tview: 'list',\n\t\t\t\tid: ids.list,\n\t\t\t\tautoheight: true,\n\t\t\t\tselect: false,\n\t\t\t\ttemplate: '<span style=\"min-width: 18px; display: inline-block;\"><i class=\"fa fa-circle ab-visible-field-icon\"></i>&nbsp;</span> #label#',\n\t\t\t\ton: {\n\t\t\t\t\tonItemClick: function onItemClick(id, e, node) {\n\t\t\t\t\t\t_logic.listItemClick(id, e, node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}]\n\t\t},\n\t\ton: {\n\t\t\tonShow: function onShow() {\n\t\t\t\t_logic.iconsReset();\n\t\t\t}\n\t\t}\n\t};\n\n\t// Our init() function for setting up our UI\n\tvar _init = function _init(options) {\n\n\t\t// register our callbacks:\n\t\tfor (var c in _logic.callbacks) {\n\t\t\t_logic.callbacks[c] = options[c] || _logic.callbacks[c];\n\t\t}\n\t};\n\n\tvar CurrentObject = null;\n\n\t// our internal business logic \n\tvar _logic = {\n\n\t\tcallbacks: {\n\n\t\t\t/**\n    * @function onChange\n    * called when we have made changes to the hidden field settings \n    * of our Current Object.\n    *\n    * this is meant to alert our parent component to respond to the \n    * change.\n    */\n\t\t\tonChange: function onChange() {}\n\t\t},\n\n\t\t/**\n   * @function clickHideAll\n   * the user clicked the [hide all] option.  So hide all our fields.\n   */\n\t\tclickHideAll: function clickHideAll() {\n\n\t\t\t// create an array of all our field.id's:\n\t\t\tvar allFields = CurrentObject.fields();\n\t\t\tvar newHidden = [];\n\t\t\tallFields.forEach(function (f) {\n\t\t\t\tnewHidden.push(f.id);\n\t\t\t});\n\n\t\t\t// store that\n\t\t\tCurrentObject.workspaceHiddenFields = newHidden;\n\t\t\tCurrentObject.save().then(function () {\n\t\t\t\t_logic.iconsReset();\n\t\t\t\t_logic.callbacks.onChange();\n\t\t\t}).catch(function (err) {\n\t\t\t\tOP.Error.log('Error trying to save workspaceHiddenFields', { error: err, fields: newHidden });\n\t\t\t});\n\t\t},\n\n\t\t/**\n   * @function clickShowAll\n   * the user clicked the [show all] option.  So show all our fields.\n   */\n\t\tclickShowAll: function clickShowAll() {\n\n\t\t\t// store an empty array of hidden fields\n\t\t\tCurrentObject.workspaceHiddenFields = [];\n\t\t\tCurrentObject.save().then(function () {\n\t\t\t\t_logic.iconsReset();\n\t\t\t\t_logic.callbacks.onChange();\n\t\t\t}).catch(function (err) {\n\t\t\t\tOP.Error.log('Error trying to save workspaceHiddenFields', { error: err, fields: newHidden });\n\t\t\t});\n\t\t},\n\n\t\t/**\n   * @function listItemClick\n   * update the clicked field setting.\n   */\n\t\tlistItemClick: function listItemClick(id, e, node) {\n\t\t\tvar newFields = [];\n\t\t\tvar isHidden = CurrentObject.workspaceHiddenFields.filter(function (fID) {\n\t\t\t\treturn fID == id;\n\t\t\t}).length > 0;\n\t\t\tif (isHidden) {\n\t\t\t\t// unhide this field\n\n\t\t\t\t// get remaining fields \n\t\t\t\tnewFields = CurrentObject.workspaceHiddenFields.filter(function (fID) {\n\t\t\t\t\treturn fID != id;\n\t\t\t\t});\n\n\t\t\t\t// find the icon and display it:\n\t\t\t\t_logic.iconShow(node);\n\t\t\t} else {\n\t\t\t\tnewFields = CurrentObject.workspaceHiddenFields;\n\t\t\t\tnewFields.push(id);\n\n\t\t\t\t_logic.iconHide(node);\n\t\t\t}\n\n\t\t\t// update our Object with current hidden fields\n\t\t\tCurrentObject.workspaceHiddenFields = newFields;\n\t\t\tCurrentObject.save().then(function () {\n\t\t\t\t_logic.callbacks.onChange();\n\t\t\t}).catch(function (err) {\n\t\t\t\tOP.Error.log('Error trying to save workspaceHiddenFields', { error: err, fields: newFields });\n\t\t\t});\n\t\t},\n\n\t\t/**\n   * @function iconHide\n   * Hide the icon for the given node\n   * @param {DOM} node  the html dom node of the element that contains our icon\n   */\n\t\ticonHide: function iconHide(node) {\n\t\t\tif (node) {\n\t\t\t\tnode.querySelector('.ab-visible-field-icon').style.visibility = \"hidden\";\n\t\t\t}\n\t\t},\n\n\t\t/**\n   * @function iconShow\n   * Show the icon for the given node\n   * @param {DOM} node  the html dom node of the element that contains our icon\n   */\n\t\ticonShow: function iconShow(node) {\n\t\t\tif (node) {\n\t\t\t\tnode.querySelector('.ab-visible-field-icon').style.visibility = \"visible\";\n\t\t\t}\n\t\t},\n\n\t\t/**\n   * @function iconsReset\n   * Reset the icon displays according to the current values in our Object\n   */\n\t\ticonsReset: function iconsReset() {\n\n\t\t\tvar List = $$(ids.list);\n\n\t\t\t// for each item in the List\n\t\t\tvar id = List.getFirstId();\n\t\t\twhile (id) {\n\n\t\t\t\t// find it's HTML Node\n\t\t\t\tvar node = List.getItemNode(id);\n\n\t\t\t\t// if this item is not hidden, show it.\n\t\t\t\tif (CurrentObject.workspaceHiddenFields.indexOf(id) == -1) {\n\t\t\t\t\t_logic.iconShow(node);\n\t\t\t\t} else {\n\t\t\t\t\t// else hide it\n\t\t\t\t\t_logic.iconHide(node);\n\t\t\t\t}\n\n\t\t\t\t// next item\n\t\t\t\tid = List.getNextId(id);\n\t\t\t}\n\t\t},\n\n\t\t/**\n   * @function objectLoad\n   * Ready the Popup according to the current object\n   * @param {ABObject} object  the currently selected object.\n   */\n\t\tobjectLoad: function objectLoad(object) {\n\t\t\tCurrentObject = object;\n\n\t\t\t// refresh list\n\t\t\tvar allFields = CurrentObject.fields();\n\t\t\tvar listFields = [];\n\t\t\tallFields.forEach(function (f) {\n\t\t\t\tlistFields.push({\n\t\t\t\t\tid: f.id,\n\t\t\t\t\tlabel: f.label\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t$$(ids.list).parse(allFields);\n\t\t}\n\n\t};\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {};\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui: _ui, // {obj} \tthe webix ui definition for this component\n\t\tinit: _init, // {fn} \tinit() to setup this component  \n\t\tactions: _actions, // {ob}\t\thash of fn() to expose so other components can access.\n\n\n\t\t// interface methods for parent component:\n\t\tobjectLoad: _logic.objectLoad,\n\n\t\t_logic: _logic // {obj} \tUnit Testing\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\nvar _ABApplication = __webpack_require__(1);\n\nvar _ABApplication2 = _interopRequireDefault(_ABApplication);\n\nvar _ABFieldManager = __webpack_require__(9);\n\nvar _ABFieldManager2 = _interopRequireDefault(_ABFieldManager);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * ab_work_object_workspace_popupNewDataField\n *\n * Manage the Add New Data Field popup.\n *\n */\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nvar labels = {\n\n\tcomponent: {\n\n\t\tchooseType: L('ab.add_fields.chooseType', \"*Choose field type...\"),\n\t\tlabel: L('ab.add_fields.label', \"*Label\"),\n\t\taddNewField: L('ab.add_fields.addNewField', \"*Add Column\")\n\n\t}\n};\n\nvar idBase = 'ab_work_object_workspace_popupNewDataField';\nOP.Component.extend(idBase, function (App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\t\ttypes: App.unique(idBase + '_types'),\n\t\teditDefinitions: App.unique(idBase + '_editDefinitions'),\n\n\t\tbuttonSave: App.unique(idBase + '_buttonSave'),\n\t\tbuttonCancel: App.unique(idBase + '_buttonCancel')\n\t};\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tview: \"popup\",\n\t\tid: ids.component,\n\t\tmodal: true,\n\t\tautoheight: true,\n\t\t// maxHeight: 420,\n\n\t\t// ready: function () {\n\t\t// \tconsole.error('ready() called!!!')\n\t\t// \t_logic.resetState();\n\t\t// },\n\n\t\tbody: {\n\t\t\tcss: 'ab-add-fields-popup',\n\t\t\tborderless: true,\n\t\t\trows: [{\n\t\t\t\tview: \"menu\",\n\t\t\t\tid: ids.types,\n\t\t\t\tdata: [{\n\t\t\t\t\tvalue: labels.component.chooseType,\n\t\t\t\t\tsubmenu: ['dataFieldsManager', '.getFieldMenuList()']\n\t\t\t\t}],\n\t\t\t\tclick: function click(id, ev, node) {\n\t\t\t\t\t_logic.typeClick();\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t},\n\t\t\t\ton: {\n\t\t\t\t\tonMenuItemClick: function onMenuItemClick(id, ev, node) {\n\t\t\t\t\t\t_logic.onMenuItemClick(id);\n\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tview: 'multiview',\n\t\t\t\tid: ids.editDefinitions,\n\t\t\t\t// NOTE: can't leave this an empty []. We redefine this value later.\n\t\t\t\tcells: [{ id: 'del_me', view: 'label', label: 'edit definition here' }]\n\t\t\t}, { height: 10 }, {\n\t\t\t\tcols: [{ fillspace: true }, {\n\t\t\t\t\tview: \"button\",\n\t\t\t\t\tvalue: labels.common.cancel,\n\t\t\t\t\tcss: \"ab-cancel-button\",\n\t\t\t\t\tautowidth: true,\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t_logic.buttonCancel();\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tview: \"button\",\n\t\t\t\t\tid: ids.buttonSave,\n\t\t\t\t\tlabel: labels.component.addNewField,\n\t\t\t\t\tautowidth: true,\n\t\t\t\t\ttype: \"form\",\n\t\t\t\t\tclick: function click() {\n\t\t\t\t\t\t_logic.buttonSave();\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t}]\n\t\t},\n\t\ton: {\n\t\t\tonBeforeShow: function onBeforeShow() {\n\t\t\t\t_logic.resetState();\n\t\t\t},\n\t\t\tonShow: function onShow() {\n\t\t\t\t_logic.onShow();\n\t\t\t},\n\t\t\tonHide: function onHide() {\n\t\t\t\t_logic.resetState();\n\t\t\t}\n\t\t}\n\t};\n\n\tvar _objectHash = {}; // 'name' => ABFieldXXX object\n\tvar _componentHash = {}; // 'name' => ABFieldXXX ui component\n\tvar _componentsByType = {}; // 'type' => ABFieldXXX ui component\n\tvar _currentEditor = null;\n\tvar _currentObject = null;\n\n\tvar defaultEditorComponent = null; // the default editor.\n\n\tvar _editField = null; // field instance being edited\n\n\t// Our init() function for setting up our UI\n\tvar _init = function _init(options) {\n\n\t\t// register our callbacks:\n\t\tfor (var c in _logic.callbacks) {\n\t\t\t_logic.callbacks[c] = options[c] || _logic.callbacks[c];\n\t\t}\n\n\t\tvar Fields = _ABFieldManager2.default.allFields();\n\n\t\t//// we need to load a submenu entry and an editor definition for each\n\t\t//// of our Fields\n\n\n\t\tvar submenus = []; // Create the submenus for our Data Fields:\n\t\tvar newEditorList = {\n\t\t\tid: ids.editDefinitions,\n\t\t\trows: []\n\t\t};\n\n\t\tFields.forEach(function (F) {\n\n\t\t\tvar menuName = F.defaults().menuName;\n\t\t\tvar type = F.defaults().type;\n\n\t\t\t// add a submenu for the fields multilingual key\n\t\t\tsubmenus.push(menuName);\n\n\t\t\t// Add the Field's definition editor here:\n\t\t\tvar editorComponent = F.propertiesComponent(App);\n\t\t\tif (!defaultEditorComponent) {\n\t\t\t\tdefaultEditorComponent = editorComponent;\n\t\t\t}\n\t\t\tnewEditorList.rows.push(editorComponent.ui);\n\n\t\t\t_objectHash[menuName] = F;\n\t\t\t_componentHash[menuName] = editorComponent;\n\t\t\t_componentsByType[type] = editorComponent;\n\t\t});\n\n\t\t// the submenu button has a placeholder we need to remove and update\n\t\t// with one that has all our submenus in it.\n\t\tvar firstID = $$(ids.types).getFirstId();\n\t\t$$(ids.types).updateItem(firstID, {\n\t\t\tvalue: labels.component.chooseType,\n\t\t\tsubmenu: submenus\n\t\t});\n\n\t\t// now remove the 'del_me' definition editor placeholder.\n\t\twebix.ui(newEditorList, $$(ids.editDefinitions));\n\n\t\tdefaultEditorComponent.show(); // show the default editor\n\t\t_currentEditor = defaultEditorComponent;\n\n\t\t// $$(ids.editDefinitions).show();\n\n\t\t// $$(ids.editDefinitions).cells() // define the edit Definitions here.\n\t};\n\n\t// our internal business logic\n\tvar _logic = {\n\n\t\tbuttonCancel: function buttonCancel() {\n\n\t\t\t_logic.resetState();\n\n\t\t\t// clear all editors:\n\t\t\tfor (var c in _componentHash) {\n\t\t\t\t_componentHash[c].clear();\n\t\t\t}\n\n\t\t\t// hide this popup.\n\t\t\t$$(ids.component).hide();\n\t\t},\n\n\t\tbuttonSave: function buttonSave() {\n\n\t\t\t$$(ids.buttonSave).disable();\n\n\t\t\tvar editor = _currentEditor;\n\t\t\tif (editor) {\n\n\t\t\t\t// the editor can define some basic form validations.\n\t\t\t\tif (editor.isValid()) {\n\n\t\t\t\t\tvar values = editor.values();\n\n\t\t\t\t\tvar field = null;\n\t\t\t\t\tvar oldData = null;\n\n\t\t\t\t\t// if this is an ADD operation, (_editField will be undefined)\n\t\t\t\t\tif (!_editField) {\n\n\t\t\t\t\t\t// get a new instance of a field:\n\t\t\t\t\t\tfield = _currentObject.fieldNew(values);\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// use our _editField, backup our oldData\n\t\t\t\t\t\toldData = _editField.toObj();\n\t\t\t\t\t\t_editField.fromValues(values);\n\n\t\t\t\t\t\tfield = _editField;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar errors = field.isValid();\n\t\t\t\t\tif (errors) {\n\t\t\t\t\t\tOP.Form.isValidationError(errors, $$(editor.ui.id));\n\n\t\t\t\t\t\t// keep our old data\n\t\t\t\t\t\tif (oldData) {\n\t\t\t\t\t\t\tfield.fromValues(oldData);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$$(ids.buttonSave).enable();\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfield.save().then(function () {\n\n\t\t\t\t\t\t\t$$(ids.buttonSave).enable();\n\t\t\t\t\t\t\t_logic.hide();\n\t\t\t\t\t\t\t_currentEditor.clear();\n\t\t\t\t\t\t\t_logic.callbacks.onSave(field);\n\t\t\t\t\t\t}).catch(function (err) {\n\t\t\t\t\t\t\t$$(ids.buttonSave).enable();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$$(ids.buttonSave).enable();\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\tOP.Dialog.Alert({\n\t\t\t\t\ttitle: '! Could not find the current editor.',\n\t\t\t\t\ttext: 'go tell a developer about this.'\n\t\t\t\t});\n\t\t\t\t$$(ids.buttonSave).enable();\n\t\t\t}\n\n\t\t\t// if (!inputValidator.validateFormat(fieldInfo.name)) {\n\t\t\t// \tself.enable();\n\t\t\t// \treturn;\n\t\t\t// }\n\n\t\t\t// // Validate duplicate field name\n\t\t\t// var existsColumn = $.grep(dataTable.config.columns, function (c) { return c.id == fieldInfo.name.replace(/ /g, '_'); });\n\t\t\t// if (existsColumn && existsColumn.length > 0 && !data.editFieldId) {\n\t\t\t// \twebix.alert({\n\t\t\t// \t\ttitle: labels.add_fields.duplicateFieldTitle,\n\t\t\t// \t\ttext: labels.add_fields.duplicateFieldDescription,\n\t\t\t// \t\tok: labels.common.ok\n\t\t\t// \t});\n\t\t\t// \tthis.enable();\n\t\t\t// \treturn;\n\t\t\t// }\n\n\t\t\t// if (fieldInfo.weight == null)\n\t\t\t// \tfieldInfo.weight = dataTable.config.columns.length;\n\n\t\t\t// // Call callback function\n\t\t\t// if (base.saveFieldCallback && base.fieldName) {\n\t\t\t// \tbase.saveFieldCallback(base.fieldName, fieldInfo)\n\t\t\t// \t\t.then(function () {\n\t\t\t// \t\t\tself.enable();\n\t\t\t// \t\t\tbase.resetState();\n\t\t\t// \t\t\tbase.hide();\n\t\t\t// \t\t});\n\t\t\t// }\n\n\t\t},\n\n\t\tcallbacks: {\n\t\t\tonCancel: function onCancel() {\n\t\t\t\tconsole.warn('NO onCancel()!');\n\t\t\t},\n\t\t\tonSave: function onSave(field) {\n\t\t\t\tconsole.warn('NO onSave()!');\n\t\t\t}\n\t\t},\n\n\t\thide: function hide() {\n\t\t\t$$(ids.component).hide();\n\t\t},\n\n\t\tmodeAdd: function modeAdd() {\n\n\t\t\t// show default editor:\n\t\t\tdefaultEditorComponent.show();\n\t\t\t_currentEditor = defaultEditorComponent;\n\n\t\t\t// show the ability to switch data types\n\t\t\t$$(ids.types).show();\n\n\t\t\t// change button text to 'add'\n\t\t\t$$(ids.buttonSave).define('label', labels.component.addNewField);\n\t\t\t$$(ids.buttonSave).refresh();\n\t\t},\n\n\t\tmodeEdit: function modeEdit(field) {\n\n\t\t\t// switch to this field's editor:\n\t\t\t// hide the rest\n\t\t\tfor (var c in _componentsByType) {\n\t\t\t\tif (c == field.type) {\n\t\t\t\t\t_componentsByType[c].populate(field);\n\t\t\t\t\t_componentsByType[c].show();\n\t\t\t\t} else {\n\t\t\t\t\t_componentsByType[c].hide();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// hide the ability to switch data types\n\t\t\t$$(ids.types).hide();\n\n\t\t\t// change button text to 'save'\n\t\t\t$$(ids.buttonSave).define('label', labels.common.save);\n\t\t\t$$(ids.buttonSave).refresh();\n\t\t},\n\n\t\t/**\n   * @function onMenuItemClick\n   * swap the editor view to match the data field selected in the menu.\n   *\n   * @param {string} name  the menuName() of the submenu that was selected.\n   */\n\t\tonMenuItemClick: function onMenuItemClick(name) {\n\n\t\t\t// note, the submenu returns the Field.menuName() values.\n\t\t\t// we use that to lookup the Field here:\n\t\t\tvar editor = _componentHash[name];\n\t\t\tif (editor) {\n\t\t\t\teditor.show();\n\t\t\t\t_currentEditor = editor;\n\t\t\t} else {\n\n\t\t\t\t// most likely they clicked on the menu button itself.\n\t\t\t\t// do nothing.\n\n\t\t\t\t// OP.Error.log(\"App Builder:Workspace:Object:NewDataField: could not find editor for submenu item:\"+name, { name:name });\n\t\t\t}\n\t\t},\n\n\t\tonShow: function onShow() {\n\t\t\t// if (!AD.comm.isServerReady()) {\n\t\t\t// \tthis.getTopParentView().hide();\n\n\t\t\t// \twebix.alert({\n\t\t\t// \t\ttitle: labels.add_fields.cannotUpdateFields,\n\t\t\t// \t\ttext: labels.add_fields.waitRestructureObjects,\n\t\t\t// \t\tok: labels.common.ok\n\t\t\t// \t});\n\t\t\t// }\n\t\t\t// else { // Set default field type\n\t\t\t// \tthis.showFieldData('string');\n\t\t\t// }\n\t\t\tconsole.error('TODO: onShow();');\n\t\t},\n\n\t\tresetState: function resetState() {\n\n\t\t\t// add mode :  change button text to 'Add'\n\t\t\t// show the default editor\n\t\t\tconsole.error('TODO: resetState()');\n\t\t},\n\n\t\t/**\n   * @function show()\n   *\n   * Show this component.\n   * @param {obj} $view  the webix.$view to hover the popup around.\n   * @param {ABField} field the ABField to edit.  If not provided, then\n   *\t\t\t\t\t\t  this is an ADD operation.\n   */\n\t\tshow: function show($view, field) {\n\n\t\t\t_editField = field;\n\n\t\t\tif (_editField) {\n\n\t\t\t\t_logic.modeEdit(field);\n\t\t\t} else {\n\n\t\t\t\t_logic.modeAdd();\n\t\t\t}\n\n\t\t\t$$(ids.component).show($view);\n\t\t},\n\n\t\ttypeClick: function typeClick() {\n\t\t\t// NOTE: for functional testing we need a way to display the submenu\n\t\t\t// (functional tests don't do .hover very well)\n\t\t\t// so this routine is to enable .click() to show the submenu.\n\n\t\t\tvar subMenuId = $$(ids.types).config.data[0].submenu;\n\n\t\t\t// #HACK Sub-menu popup does not render on initial\n\t\t\t// Force it to render popup by use .getSubMenu()\n\t\t\tif (typeof subMenuId != 'string') {\n\t\t\t\t$$(ids.types).getSubMenu($$(ids.types).config.data[0].id);\n\t\t\t\tsubMenuId = $$(ids.types).config.data[0].submenu;\n\t\t\t}\n\n\t\t\tif ($$(subMenuId)) $$(subMenuId).show();\n\t\t}\n\t};\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\t\tpopulateObjectPopupAddDataField: function populateObjectPopupAddDataField(object) {\n\t\t\t_currentObject = object;\n\t\t}\n\n\t};\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui: _ui, // {obj} \tthe webix ui definition for this component\n\t\tinit: _init, // {fn} \tinit() to setup this component\n\t\tactions: _actions, // {ob}\t\thash of fn() to expose so other components can access.\n\n\n\t\tshow: _logic.show, // {fn} \tfn(node, ABField)\n\n\n\t\t_logic: _logic // {obj} \tUnit Testing\n\t};\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\n//\n// REFACTORING:\n//\n// Our goal here is to create a Model object that will interact with Sails' blueprints and \n// return native Webix DataCollections.\n//\n// We also want to listen for updates on Sails Sockets and notify the DataCollections.\n//\n// Until we have the refactoring in place, we will reuse the AD.Model.extent() objects,\n// and convert the results to DataCollections.\n//\n\n\n// Namespacing conventions:\n// OP.Model.extend('[application].[Model]', {static}, {instance} );  --> Object\nOP.Model.extend('opstools.BuildApp.ABApplication', {\n\tuseSockets: true,\n\trestURL: '/app_builder/abapplication'\n}, {\n\t// instance Methods\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\n/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nvar labels = {\n\n\tcomponent: {\n\t\t// formHeader: L('ab.application.form.header', \"*Application Info\"),\n\t}\n};\n\nvar ComponentKey = 'ab_custom_editlist';\nOP.CustomComponent.extend(ComponentKey, function (App, componentKey) {\n\t// App \t{obj}\tour application instance object.\n\t// componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique('custom_editlist_component')\n\n\t};\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tname: App.unique(\"custom_editlist\") // keep this unique for this App instance.\n\t};\n\n\t// our internal business logic \n\tvar _logic = {};\n\n\t// Tell Webix to create an INSTANCE of our custom component:\n\twebix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n\n\t// current definition of our Component \n\tvar Component = {\n\t\tview: _ui.name, // {string} the webix.view value for this custom component\n\n\t\t_logic: _logic // {obj} \tUnit Testing\n\t};\n\n\t// Save our definition into App.custom.[key]\n\tApp.custom = App.custom || {};\n\tApp.custom[componentKey] = Component;\n\n\t// return the current definition of this component:\n\treturn Component;\n});\n\n// After importing this custom component, you get back the .key to use to \n// lookup the OP.Component[] to create an application instance of \nexports.default = { key: ComponentKey };\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(OP) {\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\n/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nvar labels = {\n\n\tcomponent: {\n\t\t// formHeader: L('ab.application.form.header', \"*Application Info\"),\n\t}\n};\n\nvar ComponentKey = 'ab_custom_edittree';\nOP.CustomComponent.extend(ComponentKey, function (App, componentKey) {\n\t// App \t{obj}\tour application instance object.\n\t// componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique('custom_edittree_component')\n\n\t};\n\n\t// Our webix Prototype definition:\n\tvar _ui = {\n\t\tname: App.unique(\"custom_edittree\") // keep this unique for this App instance.\n\t};\n\n\t// our internal business logic \n\tvar _logic = {};\n\n\t// Tell Webix to create an INSTANCE of our custom component:\n\twebix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n\n\t// current definition of our Component \n\tvar Component = {\n\t\tview: _ui.name, // {string} the webix.view value for this custom component\n\n\t\t_logic: _logic // {obj} \tUnit Testing\n\t};\n\n\t// Save our definition into App.custom.[key]\n\tApp.custom = App.custom || {};\n\tApp.custom[componentKey] = Component;\n\n\t// return the current definition of this component:\n\treturn Component;\n});\n\n// After importing this custom component, you get back the .key to use to \n// lookup the OP.Component[] to create an application instance of \nexports.default = { key: ComponentKey };\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif (item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function (modules, mediaQuery) {\n\t\tif (typeof modules === \"string\") modules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor (var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif (typeof id === \"number\") alreadyImportedModules[id] = true;\n\t\t}\n\t\tfor (i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif (typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif (mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if (mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n\t// get current location\n\tvar location = typeof window !== \"undefined\" && window.location;\n\n\tif (!location) {\n\t\tthrow new Error(\"fixUrls requires window.location\");\n\t}\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t\treturn css;\n\t}\n\n\tvar baseUrl = location.protocol + \"//\" + location.host;\n\tvar currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n This regular expression is just a way to recursively match brackets within\n a string.\n \t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n    (  = Start a capturing group\n      (?:  = Start a non-capturing group\n          [^)(]  = Match anything that isn't a parentheses\n          |  = OR\n          \\(  = Match a start parentheses\n              (?:  = Start another non-capturing groups\n                  [^)(]+  = Match anything that isn't a parentheses\n                  |  = OR\n                  \\(  = Match a start parentheses\n                      [^)(]*  = Match anything that isn't a parentheses\n                  \\)  = Match a end parentheses\n              )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n  \\)  = Match a close parens\n \t /gi  = Get all matches, not the first.  Be case insensitive.\n  */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function (fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl.trim().replace(/^\"(.*)\"$/, function (o, $1) {\n\t\t\treturn $1;\n\t\t}).replace(/^'(.*)'$/, function (o, $1) {\n\t\t\treturn $1;\n\t\t});\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t\treturn fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t\t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(35)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".webix_view, .webix_el_colorpicker input, .webix_el_combo input, .webix_el_datepicker input, .webix_el_search input, .webix_el_text input, .webix_control button, .webix_control input, .webix_control textarea, .webix_el_label, .webix_inp_bottom_label, .webix_inp_label, .webix_inp_top_label {\\n\\tfont-family: \\\"Helvetica Neue\\\",Helvetica,Arial,sans-serif !important;\\n}\\n.ab-generated-page {\\n\\toverflow-y: auto;\\n}\\n.ab-main-container {\\n\\tposition: relative;\\n\\tdisplay: block;\\n\\twidth: 100%;\\n\\tbackground: -moz-linear-gradient(top, rgba(0,0,0,0.2) 0%, rgba(0,0,0,0) 100%); /* FF3.6-15 */\\n\\tbackground: -webkit-linear-gradient(top, rgba(0,0,0,0.2) 0%,rgba(0,0,0,0) 100%); /* Chrome10-25,Safari5.1-6 */\\n\\tbackground: linear-gradient(to bottom, rgba(0,0,0,0.2) 0%,rgba(0,0,0,0) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\n}\\n.ab-main-container .pointer {\\n\\tcursor: pointer;\\n}\\n.ab-main-container .right {\\n\\ttext-align: right;\\n}\\n.ab-main-container .center {\\n\\ttext-align: center;\\n}\\n.ab-main-container .left {\\n\\ttext-align: left;\\n}\\n.ab-text-bold {\\n\\tfont-weight: bold !important;\\n}\\n.ab-scroll-y {\\n\\toverflow-y: auto !important;\\n}\\n.ab-ellipses-text, .ab-ellipses-text > div {\\n\\toverflow: hidden;\\n\\twhite-space: nowrap;\\n\\ttext-overflow: ellipsis;\\n}\\n.float-left {\\n\\tfloat: left;\\n}\\n.float-right {\\n\\tfloat: right;\\n}\\n\\n/* Webix icon */\\n.ab-main-container .webix_icon {\\n\\tline-height: inherit;\\n}\\n\\n/* Fix overflow-x */\\n.ab-generated-page .webix_scroll_cont {\\n\\toverflow: auto !important;\\n}\\n\\n/* == Webix datatable == */\\n/* Checkbox column */\\n.ab-main-container .webix_hcell.center input[type=checkbox] {\\n\\twidth:20px;\\n\\theight:20px;\\n\\tmargin-top:12px;\\n  }\\n.ab-main-container .webix_table_checkbox {\\n\\twidth:20px;\\n\\theight:20px;\\n\\tmargin-top:5px;\\n}\\n/* Last column */\\n.ab-main-container .webix_column.webix_last > div,\\n.ab-main-container .webix_hs_center td.webix_last,\\n.ab-main-container .ab-app-list-descriptionwebix_hs_right td.webix_last {\\n\\tborder-right-width: 1px !important;\\n}\\n/* No padding/margin column */\\n.ab-column-no-padding div {\\n\\tpadding: 0px !important;\\n\\tmargin: 0px !important;\\n}\\n.ab-main-container .ab-cell-warn {\\n\\tbackground-color: #F5AE0F !important;\\n}\\n\\n/* Webix selected item */\\n.webix_list_item.webix_selected,\\n.webix_column>div.webix_cell_select,\\n.webix_column>div.webix_column_select,\\n.webix_column>div.webix_row_select {\\n\\tbackground-color: #3498db !important;\\n}\\n\\n/* Webix message */\\n.webix_success {\\n  background-color: #BFF2BF;\\n}\\n.webix_success div {\\n  background-color: #BFF2BF;\\n  border: 1px solid #007A00;\\n  color: #000;\\n}\\n\\n/* Webix list */\\n.ab-main-container .webix_list_item .webix_selected,\\n.ab-main-container .webix_tree_item.webix_selected {\\n\\tcolor: #fff !important;\\n\\tbackground-color: #3498db !important;\\n}\\n.ab-app-form-permission .webix_selected {\\n\\tcolor: #333 !important;\\n\\tbackground-color: transparent !important;\\n}\\n\\n/* Webix toolbar */\\n.ab-toolbar-submenu, .ab-toolbar-submenu .webix_header>div {\\n\\tbackground: #EEE !important;\\n\\tcolor: #666 !important;\\n\\tfont-size: 15px !important;\\n\\tfont-weight: bold !important;\\n\\tborder-bottom: 0px !important;\\n}\\n\\n/* Webix segmented */\\n.ab-form-component-item .webix_segment_0.webix_selected,\\n.ab-form-component-item .webix_segment_1.webix_selected,\\n.ab-form-component-item .webix_segment_N.webix_selected,\\n.ab-component-view-edit-field .webix_segment_0.webix_selected,\\n.ab-component-view-edit-field .webix_segment_1.webix_selected,\\n.ab-component-view-edit-field .webix_segment_N.webix_selected {\\n\\tcolor: #fff !important;\\n\\tbackground-color: #3498db !important;\\n}\\n\\n.ab-form-component-item .webix_segment_0,\\n.ab-form-component-item .webix_segment_1,\\n.ab-form-component-item .webix_segment_N,\\n.ab-component-view-edit-field .webix_segment_0,\\n.ab-component-view-edit-field .webix_segment_1,\\n.ab-component-view-edit-field .webix_segment_N {\\n\\tcolor: #3498db;\\n\\tbackground: #fff;\\n}\\n\\n/* Add new columns popup */\\n.ab-add-fields-popup {\\n\\toverflow-y: auto;\\n}\\n\\n/* Application list */\\n.ab-app-list {\\n/*\\n\\tmin-height: 300px;\\n\\tpadding: 40px 100px;\\n*/\\n}\\n.ab-app-select-list .webix_selected {\\n\\tbackground-color: #FFF !important;\\n\\tcolor: #333 !important;\\n}\\n.ab-app-select-list .webix_list_item:hover {\\n\\tbackground: #ebebeb;\\n}\\n.ab-app-list-item {\\n\\tposition: relative;\\n\\theight: 100%;\\n\\tmargin: -2px -10px;\\n\\tpadding: 15px;\\n\\tline-height: 20px;\\n}\\ndiv[view_id='ab-app-list'] div.webix_list_item:hover,\\ndiv[view_id='ab-object-list'] div.webix_list_item:hover,\\ndiv[view_id='ab-object-list-menu'] div.webix_list_item:hover,\\ndiv[view_id='ab-new-connectObject-list-item'] div.webix_list_item:hover,\\ndiv[view_id='ab-edit-header-items'] div.webix_list_item:hover,\\ndiv[view_id='ab-frozen-field-list'] div.webix_list_item:hover {\\n\\tbackground-color: #eee;\\n}\\n.ab-app-list-name {\\n\\tfont-size: large;\\n}\\n.ab-app-list-description {\\n\\tcolor: #999;\\n\\tfont-size: small;\\n}\\n.ab-app-list-info {\\n\\twidth: 95%;\\n\\tdisplay: inline-block;\\n}\\n.ab-app-list-edit {\\n\\tposition: absolute;\\n\\ttop: 0;\\n\\tright: 10px;\\n\\topacity: 0.4;\\n\\tline-height: 70px;\\n\\theight: 70px;\\n}\\n.ab-app-list-edit:hover {\\n\\topacity: 1;\\n}\\n\\n/* Application workspace */\\n.ab-app-workspace {\\n\\t/*min-height: 100px;*/\\n}\\n.ab-unsync-data-warning {\\n\\tcursor: pointer;\\n    color: #fff;\\n    background-color: #F5962F;\\n    border: #fff dotted 1px !important;\\n    padding-left: 2px;\\n}\\n.ab-unsync-data-popup .webix_win_head {\\n\\tbackground-color: #F5962F;\\n}\\n.ab-unsync-data-popup .webix_win_head .header {\\n\\tpadding-left: 5px;\\n\\tfont-weight: bold;\\n    color: #fff;\\n}\\n.ab-unsync-data-status {\\n\\tpadding: 3px;\\n}\\n.ab-unsync-data-in-progress {\\n\\tbackground-color: #F5AE0F;\\n}\\n.ab-unsync-data-done {\\n\\tbackground-color: #3AB349;\\n}\\n.ab-unsync-data-error {\\n\\tbackground-color: #EC2F2F;\\n}\\n\\n/* Object list */\\n.ab-object-list-item {\\n\\tposition: relative;\\n\\theight: 100%;\\n}\\n.ab-object-list-edit {\\n\\tposition: absolute;\\n\\ttop: 0px;\\n\\tright: 5px;\\n\\tdisplay: none;\\n}\\n.ab-object-unsync {\\n\\tbackground-color: #d2e3ef;\\n\\tcolor: #4a4a4a;\\n\\tposition: absolute;\\n\\ttop: 4px;\\n\\tright: 30px;\\n\\tfont-size: 12px;\\n\\tborder-radius: 6px;\\n\\tpadding: 0px 4px;\\n\\theight: 20px;\\n\\tline-height: 20px;\\n\\tdisplay: none;\\n}\\n\\n/* Interface list */\\n.ab-page-list-item {\\n\\tposition: relative;\\n\\theight: 100%;\\n}\\n.ab-page-list-edit {\\n\\tposition: absolute;\\n\\ttop: 0px;\\n\\tright: 5px;\\n\\tdisplay: none;\\n\\tcursor: pointer;\\n}\\n\\n/* Object datatable */\\n.ab-object-data-header {\\n\\tposition: relative;\\n}\\n.ab-object-data-new-header {\\n\\tbackground-color: #cfd9e0;\\n}\\n\\n.ab-object-data-header-edit {\\n\\tdisplay: none;\\n\\tposition: absolute;\\n\\ttop: 15px;\\n\\tright: 10px;\\n}\\n.ab-object-data-header:hover .ab-object-data-header-edit {\\n\\tdisplay: block;\\n}\\n.ab-object-unsync-data {\\n\\tbackground-color: #dae6fb;\\n}\\n.ab-object-view-column {\\n\\tcolor: #3498db;\\n\\tfont-weight: bold;\\n\\ttext-align: center;\\n\\tcursor: pointer;\\n}\\n\\n/* Connect object data */\\n.ab-connect-data-info {\\n\\tdisplay: inline-block;\\n\\twidth: 90px;\\n\\twhite-space: nowrap;\\n\\toverflow: hidden;\\n\\ttext-overflow: ellipsis;\\n}\\n\\n.ab-connect-data-disable {\\n\\tbackground-color: #aaa;\\n}\\n\\n/* Custom selectivity */\\n.ab-main-container .selectivity-multiple-input-container {\\n\\tbackground: none !important;\\n\\tpadding: 0px !important;\\n\\toverflow: hidden !important;\\n\\tmax-height: 100% !important;\\n}\\n.ab-main-container .selectivity-multiple-selected-item {\\n\\tbackground: #3498db !important;\\n\\tpadding-right: 5px;\\n\\t/*max-width: 100px !important;*/\\n}\\n\\n/* Interface tree view */\\n.ab-main-container .webix_tree_item.webix_selected span {\\n\\tpadding: 0px;\\n\\tbackground: #3498db !important;\\n}\\n\\n/* Interface new page popup */\\n.ab-interface-new-quick-page {\\n    overflow: scroll !important;\\n\\toverflow-x: hidden !important;\\n\\toverflow-y: auto !important;\\n}\\n\\n.ab-interface-new-quick-page .webix_inp_checkbox_border label {\\n\\tfont-weight: normal; /* Override bootstrap*/\\n}\\n\\n/* Interface page layout */\\n.ab-component-drop-area {\\n\\tmargin-right: 2px;\\n\\tborder: 1px dashed #000 !important;\\n\\tbackground-color: #D3E9EF;\\n\\tbackground-image:url(\\\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' height='30px' width='90px'><text x='20' y='20' fill='#95CBEF' font-size='15'>Drop Here</text></svg>\\\");\\n}\\n\\ndiv[view_id='ab-interface-layout-page'] .webix_list_item,\\n.ab-component-in-page {\\n\\twidth: 100%;\\n\\tposition: relative;\\n\\tbackground-color: #fff;\\n\\tclear: both;\\n}\\n\\n.ab-component-item-name {\\n\\tfloat: left;\\n\\tfont-size: 18px;\\n\\tborder-right: 1px solid #ebebeb;\\n\\tvertical-align: top;\\n\\tpadding-top: 10px;\\n\\twidth: 90px;\\n\\tmargin-bottom: -500em; /* CSS hack: equal height of right float */\\n\\tpadding-bottom: 500em;\\n}\\n\\n.ab-component-item-display {\\n\\tfloat: right;\\n\\tvertical-align: top;\\n\\tpadding: 10px;\\n\\twidth: 87%;\\n\\tline-height: 100%;\\n\\toverflow-x: auto;\\n}\\n\\n.ab-component-remove {\\n\\tposition: absolute;\\n\\ttop: 5px;\\n\\tright: 1px;\\n}\\n\\n.ab-component-link {\\n\\tcolor: #003B7E;\\n\\ttext-decoration: underline;\\n\\tcursor: pointer;\\n}\\n\\n/* Interface component list */\\n.ab-component-item-drag {\\n\\tborder: 1px dotted #000 !important;\\n\\tfont-size: 35px;\\n\\tbackground-color: #fff;\\n}\\n\\n/* Header component */\\n.ab-component-header {\\n\\tfont-size: 25px;\\n\\tfont-weight: bold;\\n\\tmargin: 0px;\\n\\tpadding: 0px;\\n}\\n.ab-component-description {\\n\\tfont-size: 14px;\\n\\tpadding: 0px;\\n}\\n\\n/* Menu component */\\n.ab-page-list-item .webix_tree_checkbox {\\n\\tmargin: 0px !important;\\n}\\n\\n/* Object toolbar */\\n.ab-data-toolbar {\\n\\tbackground: #aaa !important;\\n}\\n.ab-data-toolbar button {\\n\\ttext-align: center;\\n\\tfont-size: 14px;\\n}\\n.ab-data-toolbar button:hover, .ab-data-toolbar button:active {\\n\\tbackground: #aaa !important;\\n}\\n.ab-data-toolbar button .webix_icon_btn {\\n\\topacity: 0.6;\\n\\tfont-size: 15px;\\n}\\n.ab-data-toolbar button:hover .webix_icon_btn {\\n\\topacity: 1;\\n}\\n\\n/* Grid component */\\n.ab-page-grid-column-item .column-checkbox {\\n\\tdisplay: inline-block;\\n\\tposition: relative;\\n\\ttop: -5px;\\n\\twidth: 30px;\\n}\\n\\n.ab-page-grid-column-item .column-empty-checkbox {\\n\\tposition: relative;\\n\\twidth: 50px;\\n\\theight: 38px;\\n}\\n\\n.ab-page-grid-column-item .column-name {\\n\\tdisplay: inline-block;\\n\\tposition: relative;\\n\\ttop: -18px;\\n}\\n\\n/* Form component */\\n.ab-standard-button button, .ab-standard-button button:hover, .ab-standard-button button:active, .ab-standard-button .webix_icon_btn {\\n\\tbackground: transparent !important;\\n\\tborder-color: transparent !important;\\n\\tcolor: #666 !important;\\n\\tbox-shadow: none !important;\\n}\\n.ab-cancel-button button {\\n\\tbackground: transparent !important;\\n\\tcolor: #AAA;\\n\\tborder-color: transparent;\\n}\\n.ab-cancel-button button:hover {\\n\\ttext-decoration: underline;\\n}\\n.ab-cancel-button button:active {\\n\\tbox-shadow: none;\\n}\\n.ab-form-connect-data {\\n\\tfloat: left;\\n\\tborder: #CCC solid 1px;\\n\\tpadding: 0px 5px;\\n\\tmin-width: 70%;\\n\\tborder-radius: 6px;\\n}\\n\\n.ab-main-container .webix_layout_form {\\n\\tbackground-color: #fff !important;\\n}\\n\\n/* Loading Screen */\\n.ab-loading-screen {\\n\\tbackground: #000;\\n\\topacity: 0.7;\\n\\tposition: absolute !important;\\n}\\n.ab-loading-body {\\n\\tbackground: #000;\\n\\tborder-width: 0px !important;\\n}\\n.ab-loading-message {\\n\\tcolor: #fff !important;\\n\\tbackground: #000 !important;\\n\\tfont-size: 30px !important;\\n\\ttext-align: center;\\n\\tvertical-align: middle;\\n\\tborder-width: 0px !important;\\n\\tpadding-top: 20% !important;\\n\\theight: 100px !important;\\n}\\n.ab-loading-button {\\n\\ttext-align: center;\\n}\\n.ab-loading-button button {\\n\\tbackground-color: #003B7E;\\n\\twidth: 200px;\\n}\\n.ab-loading-cancel-button {\\n\\ttext-align: center;\\n\\tbackground: transparent;\\n}\\n.ab-loading-cancel-button a {\\n\\tcolor: #fff !important;\\n}\\n.ab-loading-screen .webix_progress_bottom {\\n\\theight: 40px !important;\\n\\topacity: 1;\\n}\\n.ab-loading-screen .webix_progress_bottom .webix_progress_state {\\n\\theight: 40px !important;\\n}\\n\\n/* Dynamic DataTable */\\n.dynamic-datatable-view .webix_badge {\\n\\tmargin: 0 !important;\\n}\\n\\n/* Number data field */\\n.ab-number-format-show {\\n\\twhite-space: nowrap;\\n}\\n\\n/* Icon Picker */\\n.ab-main-container .iconpicker .iconpicker-items {\\n\\tcolor: #000;\\n}\\n\\n/* Webix Tabs */\\ndiv.webix_item_tab {\\n\\tfont-size: 16px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\t// Test for IE <= 9 as proposed by Browserhacks\n\t\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t\t// Tests for existence of standard globals is to allow style-loader \n\t\t// to operate correctly into non-standard environments\n\t\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\t\treturn window && document && document.all && !window.atob;\n\t}),\n\tgetElement = (function(fn) {\n\t\tvar memo = {};\n\t\treturn function(selector) {\n\t\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t\t}\n\t\t\treturn memo[selector]\n\t\t};\n\t})(function (styleTarget) {\n\t\treturn document.querySelector(styleTarget)\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [],\n\tfixUrls = __webpack_require__(36);\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (typeof options.insertInto === \"undefined\") options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar styleTarget = getElement(options.insertInto)\n\tif (!styleTarget) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\tstyleTarget.insertBefore(styleElement, styleTarget.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\tstyleTarget.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\tstyleTarget.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\tstyleTarget.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\toptions.attrs.type = \"text/css\";\n\n\tattachTagAttrs(styleElement, options.attrs);\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction createLinkElement(options) {\n\tvar linkElement = document.createElement(\"link\");\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\tattachTagAttrs(linkElement, options.attrs);\n\tinsertStyleElement(options, linkElement);\n\treturn linkElement;\n}\n\nfunction attachTagAttrs(element, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\telement.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else if(obj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\") {\n\t\tstyleElement = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, styleElement, options);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t\tif(styleElement.href)\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t};\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyleElement.setAttribute(\"media\", media)\n\t}\n\n\tif(styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink(linkElement, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/* If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls){\n\t\tcss = fixUrls(css);\n\t}\n\n\tif(sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = linkElement.href;\n\n\tlinkElement.href = URL.createObjectURL(blob);\n\n\tif(oldSrc)\n\t\tURL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(37);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(38)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!./AppBuilder.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!./AppBuilder.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// BuildApp.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 189d30a9bb3eaf49680c","\n/**\n * @class AD_Client\n * @parent index 4\n *\n * ###Client side global OpsPortal (OP) namespace.\n *\n * This file defines standard functions and calls for OpsPortal\n * objects on the client side.\n */\n\n// Create our OP  Namespace only if it hasn't been created already\n\n//// TODO: how to disable 'use strict'?  or perform this check without an error\n//// in 'use strict' ?\n\n// if (!window.OP) {\nimport Form from \"./form\"\nimport Multilingual from \"./multilingual\"\nimport Model from \"./model\"\nimport Util  from \"./util\"\n\nimport Config from \"./config/config\"\n\n    window.OP = {};\n\n\n    // OP.xxxx      These properties hold the defined Class/Controller/Model definitions\n    //              for our loaded projects.\n    // OP.UI = {};    \t\t// webix UI definitions\n    // OP.Logic = {}; \t\t// logic references for webix application\n    OP.Component = {};  // our defined components\n\n    OP.CustomComponent = {};  // separate holder for Webix Custom Components\n\n\n\n\t// OP.UI.extend = function(key, definition) {\n\t// \tOP.UI[key] = definition;\n\t// }\n\n\tOP.Component.extend = function(key, fn) {\n\t\tOP.Component[key] = function(App){\n\n//// TODO: verify App has proper structure:\n\t\t\tif (!App) {\n\t\t\t\tApp = OP.Component._newApp();\n\t\t\t}\n\n\t\t\t// make an instance of the component.\n\t\t\tvar component = fn(App);\n\n\t\t\t// transfer to App, any actions in the component:\n\t\t\tif (component.actions){\n\t\t\t\tfor(var a in component.actions) {\n\t\t\t\t\tApp.actions[a] = component.actions[a];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn component;\n\t\t};\n\t}\n\n\tOP.Component._newApp = function () {\n\t\treturn {\n\n\t\t\tuuid: webix.uid(),\n\n\t\t\t/*\n\t\t\t * actions:\n\t\t\t * a hash of exposed application methods that are shared among our\n\t\t\t * components, so one component can invoke an action that updates\n\t\t\t * another component.\n\t\t\t */\n\t\t\tactions:{\n\n\t\t\t},\n\n\n\t\t\t/*\n\t\t\t * config\n\t\t\t * webix configuration settings for our current browser\n\t\t\t */\n\t\t\tconfig:Config.config(),\n\n\t\t\t/*\n\t\t\t * custom\n\t\t\t * a collection of custom components for this App Instance.\n\t\t\t */\n\t\t\tcustom:{\n\n\t\t\t},\n\n\t\t\t/*\n\t\t\t * labels\n\t\t\t * a collection of labels that are common for the Application.\n\t\t\t */\n\t\t\tlabels:{\n\n\t\t\t},\n\n\t\t\t/*\n\t\t\t * unique()\n\t\t\t * A function that returns a globally unique Key.\n\t\t\t * @param {string} key   The key to modify and return.\n\t\t\t * @return {string}\n\t\t\t */\n\t\t\tunique: function(key) { return key+this.uuid; },\n\n\t\t}\n\t}\n\n\n\tOP.CustomComponent.extend = function(key, fn) {\n\t\tOP.CustomComponent[key] = function(App, key){\n\n\t\t\tif (!App) {\n\t\t\t\tApp = OP.Component._newApp();\n\t\t\t}\n\n\t\t\t// make an instance of the component.\n\t\t\treturn fn(App, key);\n\t\t};\n\t}\n\n\n\tOP.Dialog = AD.op.Dialog;\n\n\tOP.Error = AD.error;\n\n\tOP.Form = Form;\n\n\tOP.Multilingual = Multilingual;\n\tOP.Model = Model;\n\n\n\tOP.Util = Util;\n\n\n\n\texport default OP;\n// }\n\n\n// import \"./model.js\"\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/OP/OP.js","\n// import OP from \"OP\"\nimport \"../data/ABApplication\"\n\nimport ABObject from \"./ABObject\"\n\n\nvar _AllApplications = [];\n\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nfunction toDC( data ) {\n\treturn new webix.DataCollection({\n\t\tdata: data,\n\n\t\t// on: {\n\t\t// \tonAfterDelete: function(id) {\n\n\t\t// \t}\n\t\t// }\n\t});\n}\n\nfunction toArray(DC) {\n\tvar ary = [];\n\n\tvar id = DC.getFirstId();\n\twhile(id) {\n\t\tvar element = DC.getItem(id);\n\t\tary.push(element);\n\t\tid = DC.getNextId(id);\n\t}\n\n\treturn ary;\n}\n\nexport default class ABApplication {\n\n    constructor(attributes) {\n\n    \t// ABApplication Attributes\n    \tthis.id    = attributes.id;\n    \tthis.json  = attributes.json;\n    \tthis.name  = attributes.name || this.json.name || \"\";\n    \tthis.role  = attributes.role;\n\n    \t// multilingual fields: label, description\n    \tOP.Multilingual.translate(this, this.json, ABApplication.fieldsMultilingual());\n\n\n\t  \t// import all our ABObjects\n\t  \tvar newObjects = [];\n\t  \t(attributes.json.objects || []).forEach((obj) => {\n\t  \t\tnewObjects.push( new ABObject(obj, this) );\n\t  \t})\n\t  \tthis._objects = newObjects;\n\n\n\t  \t// import all our ABViews\n\n\n\n\t  \t// instance keeps a link to our Model for .save() and .destroy();\n\t  \tthis.Model = OP.Model.get('opstools.BuildApp.ABApplication');\n\t  \tthis.Model.Models(ABApplication);\n  \t}\n\n\n\n  \t///\n  \t/// Static Methods\n  \t///\n  \t/// Available to the Class level object.  These methods are not dependent\n  \t/// on the instance values of the Application.\n  \t///\n\n\n  \t/**\n  \t * @function allApplications\n  \t *\n  \t * return a DataCollection that contains all the ABApplications this user\n  \t * can see (based upon server side permissions);\n  \t *\n  \t * NOTE: this manages the results in the _AllApplications dataCollection\n  \t * store.  Any future .create(), .destroy(), .updates() modify values in\n  \t * that collection.\n  \t *\n  \t * Any webix ui components synced to that collection will be automatically\n  \t * updated.\n  \t *\n  \t * @return {Promise}\n  \t */\n\tstatic allApplications() {\n\t\treturn new Promise(\n\t\t\t(resolve, reject) => {\n\n\t\t\t\tvar ModelApplication = OP.Model.get('opstools.BuildApp.ABApplication');\n\t\t\t\tModelApplication.Models(ABApplication); // set the Models  setting.\n\n\t\t\t\tModelApplication.findAll()\n\t\t\t\t\t.then(function(data){\n\n\t\t\t\t\t\t// NOTE: data is already a DataCollection from .findAll()\n\t\t\t\t\t\t_AllApplications = data;\n\n\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\n\t\t\t}\n\t\t)\n\t}\n\n\n  \t/**\n  \t * @function create\n  \t *\n  \t * take the initial values and create an instance of ABApplication.\n  \t *\n  \t * @return {Promise}\n  \t */\n\tstatic create(values) {\n\t\treturn new Promise(\n\t\t\tfunction(resolve, reject) {\n\n\t\t\t\tvar newApp = {}\n\t\t\t\tOP.Multilingual.unTranslate(values, newApp, ABApplication.fieldsMultilingual());\n\t\t\t\tvalues.json = newApp;\n\t\t\t\tnewApp.name = values.name;\n\n\t\t\t\tvar ModelApplication = OP.Model.get('opstools.BuildApp.ABApplication');\n\t\t\t\tModelApplication.create(values)\n\t\t\t\t.then(function(app){\n\n\t\t\t\t\t// return an instance of ABApplication\n\t\t\t\t\tvar App = new ABApplication(app);\n\n\t\t\t\t\t_AllApplications.add(App,0);\n\t\t\t\t\tresolve(App);\n\t\t\t\t})\n\t\t\t\t.catch(reject)\n\t\t\t}\n\t\t)\n\t}\n\n\n\t/**\n\t * @method fieldsMultilingual()\n\t *\n\t * return an array of fields that are considered Multilingual labels for\n\t * an ABApplication\n\t *\n\t * @return {array}\n\t */\n\tstatic fieldsMultilingual() {\n\t\treturn ['label', 'description'];\n\t}\n\n\n\n//// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n\tstatic isValid(op, values) {\n\n\t\t\tvar errors = null;\n\n\t\t\t// during an ADD operation\n\t\t\tif (op == 'add') {\n\n\t\t\t\t// label/name must be unique:\n\t\t\t\tvar arrayApplications = toArray(_AllApplications);\n\n\t\t\t\tvar nameMatch = values.label.trim().replace(/ /g, '_').toLowerCase();\n\t\t\t\tvar matchingApps = arrayApplications.filter(function (app) {\n\t\t\t\t\treturn app.name.trim().toLowerCase() == nameMatch;\n\t\t\t\t})\n\t\t\t\tif (matchingApps && matchingApps.length > 0) {\n\n\t\t\t\t\terrors = OP.Form.validationError({\n\t\t\t\t\t\tname:'label',\n\t\t\t\t\t\tmessage:L('ab_form_application_duplicate_name', \"*Name (#name#) is already in use\").replace('#name#', nameMatch),\n\t\t\t\t\t}, errors);\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Check the common validations:\n// TODO:\n// if (!inputValidator.validate(values.label)) {\n// \t_logic.buttonSaveEnable();\n// \treturn false;\n// }\n\n\n\t\t\treturn errors;\n\t}\n\n\n\n\t///\n\t/// Instance Methods\n\t///\n\n\n\t/// ABApplication data methods\n\n\n\t/**\n\t * @method destroy()\n\t *\n\t * destroy the current instance of ABApplication\n\t *\n\t * also remove it from our _AllApplications\n\t *\n\t * @return {Promise}\n\t */\n\tdestroy () {\n\t\tif (this.id) {\n\t\t\treturn this.Model.destroy(this.id)\n\t\t\t\t.then(()=>{\n\t\t\t\t\t_AllApplications.remove(this.id);\n\t\t\t\t});\n\t\t}\n\t}\n\n\n\t/**\n\t * @method save()\n\t *\n\t * persist the current instance of ABApplication to the DB\n\t *\n\t * Also, keep the values in _AllApplications up to date.\n\t *\n\t * @return {Promise}\n\t */\n\tsave () {\n\n\t\tvar values = this.toObj();\n\n\t\t// we already have an .id, so this must be an UPDATE\n\t\tif (values.id) {\n\n\t\t\treturn this.Model.update(values.id, values)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t_AllApplications.updateItem(values.id, this);\n\t\t\t\t\t});\n\n\t\t} else {\n\n\t\t\t// must be a CREATE:\n\t\t\treturn this.Model.create(values)\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\tthis.id = data.id;\n\t\t\t\t\t\t_AllApplications.add(this, 0);\n\t\t\t\t\t});\n\t\t}\n\n\t}\n\n\n\t/**\n\t * @method toObj()\n\t *\n\t * properly compile the current state of this ABApplication instance\n\t * into the values needed for saving to the DB.\n\t *\n\t * Most of the instance data is stored in .json field, so be sure to\n\t * update that from all the current values of our child fields.\n\t *\n\t * @return {json}\n\t */\n\ttoObj () {\n\n\t\tOP.Multilingual.unTranslate(this, this.json, ABApplication.fieldsMultilingual());\n\t\tthis.json.name = this.name;\n\n\t\t// for each Object: compile to json\n\t\tvar currObjects = [];\n\t\tthis._objects.forEach((obj) => {\n\t\t\tcurrObjects.push(obj.toObj())\n\t\t})\n\t\tthis.json.objects = currObjects;\n\n\t\treturn {\n\t\t\tid:this.id,\n\t\t\tname:this.name,\n\t\t\tjson:this.json,\n\t\t\trole:this.role\n\t\t}\n\t}\n\n\n\n\t/// ABApplication Permission methods\n\n\n\t/**\n\t * @method assignPermissions()\n\t *\n\t * Make sure the current ABApplication permissions match the given\n\t * array of permissions.\n\t *\n\t * @param {array} permItems\tan array of role assignments that this\n\t * \t\t\t\t\t\t\tABApplication should match.\n\t * @return {Promise}\n\t */\n\tassignPermissions (permItems) {\n\t\treturn new Promise(\n\t\t\t(resolve, reject) => {\n\t\t\t\tAD.comm.service.put({\n\t\t\t\t\turl: '/app_builder/' + this.id + '/role/assign',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\troles: permItems\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.fail(reject)\n\t\t\t\t.done(resolve);\n\t\t\t}\n\t\t)\n\t}\n\n\n\t/**\n\t * @method getPermissions()\n\t *\n\t * Return an array of role assignments that are currently assigned to this\n\t * ABApplication.\n\t *\n\t * @return {Promise} \tresolve(list) : list {array} Role assignments\n\t */\n\tgetPermissions () {\n\n\t\treturn new Promise(\n\t\t\t(resolve, reject) => {\n\n\t\t\t\tAD.comm.service.get({ url: '/app_builder/' + this.id + '/role' })\n\t\t\t\t.fail(reject)\n\t\t\t\t.done(resolve)\n\t\t\t}\n\t\t);\n\t}\n\n\n\t/**\n\t * @method createPermission()\n\t *\n\t * Create a Role in the system after the name of the current ABApplication.\n\t *\n\t * @return {Promise}\n\t */\n\tcreatePermission () {\n\t\treturn new Promise(\n\t\t\t(resolve, reject) => {\n\n// TODO: need to take created role and store as : .json.applicationRole = role.id\n\n\t\t\t\tAD.comm.service.post({ url: '/app_builder/' + this.id + '/role' })\n\t\t\t\t.fail(reject)\n\t\t\t\t.done(resolve)\n\n\t\t\t}\n\t\t);\n\t}\n\n\n\t/**\n\t * @method deletePermission()\n\t *\n\t * Remove the Role in the system of the current ABApplication.\n\t * (the one created by  .createPermission() )\n\t *\n\t * @return {Promise}\n\t */\n\tdeletePermission () {\n\t\treturn new Promise(\n\t\t\t(resolve, reject) => {\n\n// TODO: need to remove created role from : .json.applicationRole\n\t\t\t\tAD.comm.service.delete({ url: '/app_builder/' + this.id + '/role' })\n\t\t\t\t.fail(reject)\n\t\t\t\t.done(resolve)\n\n\t\t\t}\n\t\t);\n\t}\n\n\n\n\n\t///\n\t/// Objects\n\t///\n\n\n\n\n\t/**\n\t * @method objects()\n\t *\n\t * return an array of all the ABObjects for this ABApplication.\n\t *\n\t * @param {fn} filter  \ta filter fn to return a set of ABObjects that this fn\n\t *\t\t\t\t\t\treturns true for.\n\t * @return {array} \tarray of ABObject\n\t */\n\tobjects (filter) {\n\n\t\tfilter = filter || function() {return true; };\n\n\t\treturn this._objects.filter(filter);\n\n\t}\n\n\n\n\t/**\n\t * @method objectNew()\n\t *\n\t * return an instance of a new (unsaved) ABObject that is tied to this\n\t * ABApplication.\n\t *\n\t * NOTE: this new object is not included in our this.objects until a .save()\n\t * is performed on the object.\n\t *\n\t * @return {ABObject}\n\t */\n\tobjectNew( values ) {\n\t\treturn new ABObject(values, this);\n\t}\n\n\n\n\t/**\n\t * @method objectSave()\n\t *\n\t * persist the current ABObject in our list of ._objects.\n\t *\n\t * @param {ABObject} object\n\t * @return {Promise}\n\t */\n\tobjectSave( object ) {\n\t\tvar isIncluded = (this.objects(function(o){ return o.id == object.id }).length > 0);\n\t\tif (!isIncluded) {\n\t\t\tthis._objects.push(object);\n\t\t}\n\n\t\treturn this.save();\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/classes/ABApplication.js","\n/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\"\nimport ConfigMobile from \"./configMobile\"\n\n\nexport default {\n\tconfig:function(){\n\n\t\t// TODO: decide which config file to return here:\n\t\tif (window.innerWidth < 768) {\n\t\t\treturn ConfigMobile;\n\t\t}\n\t\treturn ConfigDesktop;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/OP/config/config.js","\nexport default {\n\n\t/**\n\t * @function OP.Form.validationError\n\t *\n\t * creates an error object that can be used in OP.Form.isValidationError()\n\t * to update a webix form with error validation messages.\n\t *\n\t * @param {json} error \tan error object\n\t *\t\t\t\terror.name\t{string} the attribute name (Form.element[error.name])\n\t *\t\t\t\terror.message {string} the message to display for the error\n\t *\n\t * @return {obj} an error object.\n\t */\n\tvalidationError: function(error, errorObj) {\n\n\t\terrorObj = errorObj || {\n\t\t\terror:'E_VALIDATION',\n\t\t\tinvalidAttributes:{\n\n\t\t\t}\n\t\t}\n\n\t\tvar attr = errorObj.invalidAttributes;\n\t\tattr[error.name] = attr[error.name] || [];\n\n\t\tattr[error.name].push(error);\n\n\t\treturn errorObj;\n\t},\n\n\n\t/**\n\t * @function OP.Form.isValidationError\n\t *\n\t * scans the given error to see if it is a sails' respone about an invalid\n\t * value from one of the form elements.\n\t *\n\t * @codestart\n\t * var form = $$('formID');\n\t * var values = form.getValues();\n\t * model.attr(values);\n\t * model.save()\n\t * .fail(function(err){\n\t *     if (!OP.Form.isValidationError(err, form)) {\n\t *         OP.error.log('Error saving current model ()', {error:err, values:values});\n\t *     }\n\t * })\n\t * .then(function(newData){\n\t * \n\t * });\n\t * @codeend\n\t *\n\t * @param {obj} error  the error response object\n\t * @param {obj} form   the webix form instance (or reference)\n\t * @return {bool}      true if error was about a form element.  false otherwise.\n\t */\n\tisValidationError: function(error, form) {\n\n\t\t// {bool} have we set focus to form component?\n\t\tvar hasFocused = false;\n\n\n\t\t// if we have an error object:\n\t\tif (error) { \n\n\n\t\t\t//// if the error obj is provided by Sails response, \n\t\t\t//// do some clean up on the error object:\n\n\n\t\t\t// dig down to sails provided error object:\n\t\t\tif ((error.error)\n\t\t\t\t&& (error.error == 'E_UNKNOWN')\n\t\t\t\t&& (error.raw)\n\t\t\t\t&& (error.raw.length > 0)) {\n\n\t\t\t\terror = error.raw[0]\n\t\t\t}\n\n\t\t\t// drill down to the embedded .err object if it exists\n\t\t\tif (error.err) {\n\t\t\t\terror = error.err;\n\t\t\t}\n\n\n\t\t\t//// Now process the error object\n\t\t\t//// \n\t\t\tif (((error.error)\n\t\t\t\t\t&& (error.error == 'E_VALIDATION'))\n\t\t\t\t|| ((error.code) && (error.code == 'E_VALIDATION'))) {\n\n\t\t\t\tvar attrs = error.invalidAttributes;\n\t\t\t\tif (attrs) {\n\n\t\t\t\t\tvar wasForm = false;\n\t\t\t\t\tfor (var attr in attrs) {\n\n\t\t\t\t\t\t// if this is a field in the form:\n\t\t\t\t\t\tif (form.elements[attr]) {\n\n\t\t\t\t\t\t\tvar errors = attrs[attr];\n\t\t\t\t\t\t\tvar msg = [];\n\t\t\t\t\t\t\terrors.forEach(function(err) {\n\t\t\t\t\t\t\t\tmsg.push(err.message);\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t// set the invalid error message\n\t\t\t\t\t\t\tform.markInvalid(attr, msg.join(', '));\n\n\t\t\t\t\t\t\t// set focus to the 1st form element we mark:\n\t\t\t\t\t\t\tif (!hasFocused) {\n\t\t\t\t\t\t\t\tform.elements[attr].focus();\n\t\t\t\t\t\t\t\thasFocused = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\twasForm = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (wasForm) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\t// if we missed updating our form with an error\n\t\t// this was not a validation error so return false\n\t\treturn false\n\n\t}\n\n\n\t\n}\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/OP/form.js","\n\nvar _restURLs = {\n\tfindAll: 'GET #url#',\n\tfindOne: 'GET #url#/{id}',\n\tcreate:  'POST #url#',\n\tupdate:  'PUT #url#/{id}',\n\tdestroy: 'DELETE #url#/{id}',\n}\n\n\nvar _Models = {};\n\n\nclass OPModel {\n\n\tconstructor(key, staticData, instanceData) {\n\n\t\tthis.key = key;\n\t\tthis.staticData = staticData;\n\t\tthis.instanceData = instanceData;\n\t\tthis.Model = staticData.Model;\n\n\t\tthis.url = {};\n\t\tfor(var r in _restURLs) {\n\t\t\tthis.url[r] = staticData[r]\n\t\t}\n\n\t}\n\n\tModels(Model) {\n\t\tthis.Model = Model;\n\t}\n\n\tfindAll(cond ) {\n\t\treturn new Promise( \n\t\t\t(resolve, reject) => {\n\n// NOTE: currently reusing AD.Model\n\n\t\t\t\t// var Model = AD.Model.get(this.key);\n\t\t\t\t// Model.findAll(cond)\n\n\t\t\t\tvar service = this.service('findAll');\n\n\t\t\t\tAD.comm.service[service.verb]({ url:service.url, params: cond })\n\t\t\t\t.fail(reject)\n\t\t\t\t.done((data) => {\n\n\t\t\t\t\tdata = data.data || data;\n\n\t\t\t\t\t// our findAll() should return an array of items.\n\t\t\t\t\tif (!Array.isArray(data)) {\n\t\t\t\t\t\tdata = [data];\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// return instances of this.Model if provided:\n\t\t\t\t\tif (this.Model) {\n\t\t\t\t\t\tvar newList = []; // Model.List();\n\t\t\t\t\t\tdata.forEach((l) => {\n\t\t\t\t\t\t\tif (l) {\n\t\t\t\t\t\t\t\tnewList.push( new this.Model(l) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tdata = newList;\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// convert to a WebixDataCollection:\n\t\t\t\t\tvar dc = new webix.DataCollection({\n\t\t\t\t\t\tdata: data,\n\n\t\t\t\t\t\ton: {\n\t\t\t\t\t\t\tonAfterDelete: function(id) {\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\n\t\t\t\t\t// dc._toArray = function() {\n\t\t\t\t\t// \tvar data = [];\n\t\t\t\t\t// \tvar id = this.getFirstId();\n\t\t\t\t\t// \twhile(id) {\n\t\t\t\t\t// \t\tdata.push(this.getItem(id));\n\t\t\t\t\t// \t\tid = this.getNextId(id);\n\t\t\t\t\t// \t}\n\t\t\t\t\t// \treturn data;\n\t\t\t\t\t// }\n\n\n\n\t\t\t\t\tresolve(dc);\n\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tfindOne(cond) {\n\t\treturn new Promise( \n\t\t\t(resolve, reject) => {\n\n\t\t\t\tvar service = this.service('findOne');\n\n\t\t\t\tvar nURI = service.url;\n                for (var k in cond) {\n                    var oURI = nURI;\n                    nURI = AD.util.string.replaceAll(nURI, \"{\" + k + \"}\", cond[k]);\n\n                    // if there was a change, remove k from cond:\n                    if (oURI != nURI) {\n                        delete cond[k];\n                    }\n                }\n                service.url = nURI;\n\n\t\t\t\tAD.comm.service[service.verb]({ url:service.url, params: cond })\n\t\t\t\t.fail(reject)\n\t\t\t\t.done(function(item){\n\t\t\t\t\tif (item.translate) item.translate();\n\n\t\t\t\t\tresolve(item.attr?item.attr():item);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tcreate(attr) {\n\t\treturn new Promise( \n\t\t\t(resolve, reject) => {\n\n\t\t\t\tvar service = this.service('create');\n\n\t\t\t\tAD.comm.service[service.verb]({ url:service.url, params: attr })\n\t\t\t\t.fail(reject)\n\t\t\t\t.done(function(item){\n\t\t\t\t\tif (item.translate) item.translate();\n\n\t\t\t\t\tresolve(item.attr?item.attr():item);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tupdate(id, attr) {\n\t\treturn new Promise( \n\t\t\t(resolve, reject) => {\n\n\t\t\t\tvar service = this.service('update', id);\n\n\t\t\t\tAD.comm.service[service.verb]({ url:service.url, params: attr })\n\t\t\t\t.fail(reject)\n\t\t\t\t.done(resolve);\n\t\t\t}\n\t\t);\n\t}\n\n\tdestroy(id) {\n\t\treturn new Promise( \n\t\t\t(resolve, reject) => {\n\n\t\t\t\tvar service = this.service('destroy', id);\n\n\t\t\t\tAD.comm.service[service.verb]({ url:service.url, params: {} })\n\t\t\t\t.fail(reject)\n\t\t\t\t.done(resolve);\n\t\t\t}\n\t\t);\n\t}\n\n\n\tservice(key, id) {\n\t\tvar parts = this.url[key].split(' ');\n\t\tvar verb = parts[0].toLowerCase();\n\t\tvar uri = parts.pop(); \n\n\t\tif (id) {\n\t\t\tvar key = '{id}';\n\t        uri = AD.util.string.replaceAll(uri, key, id);\n\t    }\n\n        return {\n        \tverb:verb,\n        \turl:uri\n        }\n\t}\n}\n\n\nexport default {\n\n\textend:function(key, staticData, instance) {\n\n\n\t\t//\n\t\t// Create the AD.Model from this definition\n\t\t//\n\n\t\tif (staticData.restURL) {\n\t\t\tfor (var u in _restURLs) {\n\t\t\t\tstaticData[u] = _restURLs[u].replace('#url#', staticData.restURL);\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t// var alreadyThere = AD.Model.get(key);\n\t\t// if (!alreadyThere) {\n\n\t\t// \tAD.Model.Base.extend(key, staticData, instance);\n\t\t// \tAD.Model.extend(key, staticData, instance);\n\t\t// }\n\t\t\n\t\t//\n\t\t// Now create our OP.Model:\n\t\t//\n\t\tvar curr = nameSpace(_Models, key);\n\t\tvar modelName = objectName(key);\n\n\t\tcurr[modelName] = new OPModel(key, staticData, instance);\n\n\t},\n\n\tget: function(key) {\n\t\treturn findObject(_Models, key);\n\t}\n}\n\n\n\n\n\n\n\n\n            /*\n             * @function findObject\n             *\n             * Return the object specified by the given name space:\n             *\n             * @param {object} baseObj  The base object to search on\n             *                          usually AD.models or AD.models_base\n             *\n             * @param {string} name   The provided namespace to parse and search for\n             *                        The name can be spaced using '.' \n             *                        eg.  'coolTool.Resource1' => AD.models.coolTool.Resource1\n             *                             'coolerApp.tool1.Resource1' => AD.models.coolerApp.tool1.Resource1\n             *\n             * @returns {object}  the object resolved by the namespaced base \n             *                    eg:  findObject(AD.models, 'Resource') => return AD.models.Resource\n             *                         findObject(AD.models, 'coolTool.Resource1') => AD.models.coolTool.Resource1\n             *\n             *                    if an object is not found, null is returned.\n             */\n            var findObject = function (baseObj, name) {\n\n                // first lets figure out our namespacing:\n                var nameList = name.split('.');\n\n                // for each remaining name segments, make sure we have a \n                // namespace container for it:\n                var curr = baseObj;\n                nameList.forEach(function (name) {\n\n                    if (curr == null) {\n                        var whoops = true;\n                        console.error('! current name segment is null.  Check your given name to make sure it is properly given: ', name);\n                    }\n                    if (curr) {\n                        if (typeof curr[name] == 'undefined') {\n                            curr = null;\n                        }\n                        if (curr) curr = curr[name];\n                    }\n                })\n\n                return curr;\n            }\n\n\n\n            /*\n             * @function objectName\n             *\n             * parse the name and return the name of the object we will create.\n             *\n             * @param {string} name   The provided namespace to parse \n             *                        The name can be spaced using '.' \n             *\n             * @returns {string}  the name of the model object \n             *                    eg:  objectName('Resource') => return 'Resource'\n             *                         objectName('coolTool.Resource1') => 'Resource1'\n             */\n            var objectName = function (name) {\n\n                // first lets figure out our namespacing:\n                var nameList = name.split('.');\n                var objName = nameList.pop(); // remove the last one.\n\n                return objName;\n            }\n\n\n\n            /*\n             * @function nameSpace\n             *\n             * Make sure the proper name space is created on the given base.\n             *\n             * @param {object} baseObj  The base object to create the namespace on\n             *                          usually AD.models or AD.models_base\n             *\n             * @param {string} name   The provided namespace to parse and create\n             *                        The name can be spaced using '.' \n             *                        eg.  'coolTool.Resource1' => AD.models.coolTool.Resource1\n             *                             'coolerApp.tool1.Resource1' => AD.models.coolerApp.tool1.Resource1\n             *\n             * @returns {object}  the object that represents the namespaced base \n             *                    that the Model is to be created on.\n             *                    eg:  nameSpace(AD.models, 'Resource') => return AD.models\n             *                         nameSpace(AD.models, 'coolTool.Resource1') => AD.models.coolTool\n             */\n            var nameSpace = function (baseObj, name) {\n\n                // first lets figure out our namespacing:\n                var nameList = name.split('.');\n                var controlName = nameList.pop(); // remove the last one.\n\n                // for each remaining name segments, make sure we have a \n                // namespace container for it:\n                var curr = baseObj;\n                nameList.forEach(function (name) {\n\n                    if (typeof curr[name] == 'undefined') {\n                        curr[name] = {};\n                    }\n                    curr = curr[name];\n                })\n\n                return curr;\n            }\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/OP/model.js","/*\n * OP.Multilingual\n *\n * A set of helpers for Multilingual Data.\n *\n */\n\nexport default {\n\n\t/**\n\t * @function OP.Multilingual.translate\n\t *\n\t * Given a set of json data, pull out any multilingual translations\n\t * and flatten those values to the base object.\n\t *\n\t * @param {obj} obj  The instance of the object being translated\n\t * @param {json} json The json data being used for translation.\n\t *\t\t\t\t\t\tThere should be json.translations = [ {transEntry}, ...]\n\t *\t\t\t\t\t\twhere transEntry = {\n\t *\t\t\t\t\t\t\tlanguage_code:'en',\n\t *\t\t\t\t\t\t\tfield1:'value',\n\t *\t\t\t\t\t\t\t...\n\t *\t\t\t\t\t\t}\n\t * @param {array} fields an Array of multilingual fields to pull to \n\t *\t\t\t\t\t\t the obj[field] value.\n\t *\n\t */\n\ttranslate:function(obj, json, fields) {\n\n\t\tif (!json.translations) {\n\t\t\tjson.translations = [];\n\t\t}\n\n\t\tvar currLanguage = AD.lang.currentLanguage || 'en';\n\n\t\tif (fields && fields.length > 0) {\n\n\t\t\tjson.translations.forEach(function(t){\n\t\t\t\t// find the translation for the current language code\n\t\t\t\tif (t.language_code == currLanguage) {\n\n\t\t\t\t\t// copy each field to the root object\n\t\t\t\t\tfields.forEach(function(f){\n\t\t\t\t\t\tobj[f] = t[f] || '';  // default to '' if not found. \n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t}\n\t},\n\n\n\t/**\n\t * @function OP.Multilingual.unTranslate\n\t *\n\t * Take the multilingual information in the base obj, and push that \n\t * down into the json.translations data.\n\t *\n\t * @param {obj} obj  The instance of the object with the translation\n\t * @param {json} json The json data being used for translation.\n\t *\t\t\t\t\t\tThere should be json.translations = [ {transEntry}, ...]\n\t *\t\t\t\t\t\twhere transEntry = {\n\t *\t\t\t\t\t\t\tlanguage_code:'en',\n\t *\t\t\t\t\t\t\tfield1:'value',\n\t *\t\t\t\t\t\t\t...\n\t *\t\t\t\t\t\t}\n\t * @param {array} fields an Array of multilingual fields to pull from \n\t *\t\t\t\t\t\t the obj[field] value.\n\t *\n\t */\n\tunTranslate: function( obj, json, fields) {\n\n\t\tjson = json || {};\n\t\tfields = fields || [];\n\n\t\tif (!json.translations) {\n\t\t\tjson.translations = [];\n\t\t}\n\n\t\tvar currLanguage = AD.lang.currentLanguage || 'en';\n\n\n\t\tif (fields && fields.length > 0) {\n\n\t\t\tvar foundOne = false;\n\n\t\t\tjson.translations.forEach(function(t){\n\t\t\t\t// find the translation for the current language code\n\t\t\t\tif (t.language_code == currLanguage) {\n\n\t\t\t\t\t// copy each field to the root object\n\t\t\t\t\tfields.forEach(function(f){\n\t\t\t\t\t\tt[f] = obj[f];\n\t\t\t\t\t})\n\n\t\t\t\t\tfoundOne = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t// if we didn't update an existing translation\n\t\t\tif (!foundOne) {\n\n\t\t\t\t// create a translation entry:\n\t            var trans = {};\n\n\t            // assume current languageCode:\n\t            trans.language_code = currLanguage;\n\n\t            fields.forEach(function (field) {\n\t                if (obj[field] != null) {\n\t                    trans[field] = obj[field];\n\t                }\n\t            })\n\n\t            json.translations.push(trans);\n\t\t\t}\n\n\t\t}\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/OP/multilingual.js","\nexport default {\n\t\n\tuuid: AD.util.uuid\n\t\n}\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/OP/util.js","\n/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\n\n\nexport default {\n\n\t// Application List\n\tappListRowHeight: 70,\n\n\t// button types\n\tbuttonWidthLarge: 200,\n\tbuttonWidthMedium: 150,\n\tbuttonWidthSmall: 100,\n\tbuttonWidthExtraSmall: 50,\n\n\t// tab types\n\ttabWidthLarge: 200,\n\ttabWidthMedium: 120,\n\ttabWidthSmall: 100,\n\ttabWidthExtraSmall: 50,\n\n\t// column types\n\n\n\t// spacers\n\tsmallSpacer: 10,\n\tmediumSpacer: 25,\n\tlargeSpacer: 50,\n\tappListSpacerRowHeight: 100,\n\tappListSpacerColMinWidth: 100,\n\tappListSpacerColMaxWidth: 200,\n\tobjectWorkspaceColWidth: 20,\n\n\t// labels\n\tlabelWidthSmall: 50,\n\tlabelWidthMedium: 80,\n\tlabelWidthLarge: 150,\n\tlabelWidthCheckbox: 0,\n\n\t// show elements on desktop\n\thideMobile: false,\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/OP/config/configDesktop.js","\n/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\n\n\nexport default {\n\n\t// Application List\n\tappListRowHeight: 70,\n\n\t// button types\n\tbuttonWidthLarge: 200,\n\n\t// column types\n\n\n\t// spacers\n\tsmallSpacer: 1,\n\tmediumSpacer: 10,\n\tlargeSpacer: 20,\n\tappListSpacerRowHeight: 10,\n\tappListSpacerColMinWidth: 1,\n\tappListSpacerColMaxWidth: 1,\n\tobjectWorkspaceColWidth: 1,\n\n\t// labels\n\tlabelWidthSmall: 50,\n\tlabelWidthMedium: 80,\n\tlabelWidthLarge: 120,\n\tlabelWidthCheckbox: 0,\n\n\t// hide elements for mobile\n\thideMobile: true,\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/OP/config/configMobile.js","/* \n * ABFieldManager\n * \n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n\nimport ABFieldString from \"./dataFields/ABFieldString\"\n\n\n/* \n * Fields\n * A type => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\nFields[ABFieldString.defaults().type] = ABFieldString;\n\n\n\n\nexport default  {\n\n\n\t/*\n\t * @function allFields\n\t * return all the currently defined ABFields in an array.\n\t * @return [{ABField},...]\n\t */\n\tallFields: function() {\n\t\tvar fields = [];\n\t\tfor (var f in Fields) {\n\t\t\tfields.push(Fields[f]);\n\t\t}\n\t\treturn fields;\n\t},\n\n\n\t/*\n\t * @function newField\n\t * return an instance of an ABField based upon the values.type value.\n\t * @return {ABField}\n\t */\n\tnewField: function (values, object) {\n\n\t\tif (values.type) {\n\t\t\treturn new Fields[values.type](values, object);\n\t\t} else {\n\n//// TODO: what to do here?\n\t\t}\n\n\t}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/classes/ABFieldManager.js","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\n// import OP from \"../../OP/OP\"\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nexport default class ABField {\n\n    constructor(values, object, fieldDefaults) {\n\n    \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n    \tthis.defaults = fieldDefaults;\n\n\n    \t/*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\ttype:'fieldType',\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name \n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n  \t\tthis.fromValues(values);\n\n\n\n    \t// label is a multilingual value:\n    \tOP.Multilingual.translate(this, this, ['label']);\n\n\n    \tthis.object = object;\n  \t}\n\n\n\n  \t///\n  \t/// Static Methods\n  \t///\n  \t/// Available to the Class level object.  These methods are not dependent\n  \t/// on the instance values of the Application.\n  \t///\n\n  \tstatic clearEditor( ids) {\n\n  \t\tvar defaultValues = {\n  \t\t\tlabel: '',\n  \t\t\tcolumnName:'',\n  \t\t\tshowIcon:1\n  \t\t}\n\n  \t\tfor(var f in defaultValues) {\n\t\t\tvar component = $$(ids[f]);\n\t\t\tcomponent.setValue(defaultValues[f]);\n\t\t}\n  \t}\n\n\n  \tstatic editorPopulate( ids, field ) {\n\n  \t\t$$(ids.label).setValue(field.label);\n  \t\t$$(ids.columnName).setValue(field.columnName);\n  \t\t$$(ids.showIcon).setValue(field.settings.showIcon);\n\n  \t}\n\n\n\t/**\n\t * @function definitionEditor\n\t *\n\t * Many DataFields share some base information for their usage\n\t * in the AppBuilder.  The UI Editors have a common header\n\t * and footer format, and this function allows child DataFields\n\t * to not have to define those over and over.\n\t *\n\t * The common layout header contains:\n\t *\t\t[Menu Label]\n\t *\t\t[textBox: labelName]\n\t *\t\t[text:    description]\n\t *\n\t * The defined DataField UI will be added at the end of this.\n\t *\n\t * This routine actually updated the live DataField definition\n\t * with the common header info.\n\t *\n\t * @param {DataField} field  The DataField object to work with.\n\t */\n  \tstatic definitionEditor( App, ids, _logic, Field ) {\n\n/// TODO: maybe just pass in onChange instead of _logic\n/// if not onChange, then use our default:\n\n  \t\t// setup our default labelOnChange functionality:\n  \t\tvar onChange = function (newVal, oldVal) {\n\n  \t\t\toldVal = oldVal || '';\n\n\t\t\tif (newVal != oldVal &&\n\t\t\t\toldVal == $$(ids.columnName).getValue()) {\n\t\t\t\t$$(ids.columnName).setValue(newVal);\n\t\t\t}\n\t\t}\n\n\t\t// if they provided a labelOnChange() override, use that:\n\t\tif (_logic.labelOnChange) {\n\t\t\tonChange = _logic.labelOnChange;\n\t\t}\n\n\n  \t\tvar _ui = {\n\t\t\t// id: ids.component,\n\t\t\trows: [\n\t\t\t\t{\n\t\t\t\t\tview: \"label\",\n\t\t\t\t\tlabel: \"<span class='webix_icon fa-{0}'></span>{1}\".replace('{0}', Field.icon).replace('{1}', Field.menuName)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tview: \"text\",\n\t\t\t\t\tid: ids.label,\n\t\t\t\t\tname:'label',\n\t\t\t\t\tlabel: App.labels.dataFieldHeaderLabel,\n\t\t\t\t\tplaceholder: App.labels.dataFieldHeaderLabelPlaceholder,\n\t\t\t\t\tlabelWidth: App.config.labelWidthMedium,\n\t\t\t\t\tcss: 'ab-new-label-name',\n\t\t\t\t\ton: {\n\t\t\t\t\t\tonChange: function (newVal, oldVal) {\n\t\t\t\t\t\t\tonChange(newVal, oldVal);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tview: \"text\",\n\t\t\t\t\tid: ids.columnName,\n\t\t\t\t\tname:'columnName',\n\t\t\t\t\tlabel: App.labels.dataFieldColumnName, // 'Name',\n\t\t\t\t\tlabelWidth: App.config.labelWidthMedium,\n\t\t\t\t\tplaceholder: App.labels.dataFieldColumnNamePlaceholder, // 'Column name',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tview: \"label\",\n\t\t\t\t\tid: ids.fieldDescription,\n\t\t\t\t\tlabel: Field.description,\n\t\t\t\t\talign: \"right\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tview: 'checkbox',\n\t\t\t\t\tid: ids.showIcon,\n\t\t\t\t\tname:'showIcon',\n\t\t\t\t\tlabelRight: App.labels.dataFieldShowIcon, // 'Show icon',\n\t\t\t\t\tlabelWidth: App.config.labelWidthCheckbox,\n\t\t\t\t\tvalue:true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\n  \t\treturn _ui;\n  \t}\n\n\n  \tstatic editorValues (settings) {\n\n  \t\tvar obj = {\n  \t\t\tlabel: settings.label,\n  \t\t\tcolumnName: settings.columnName,\n  \t\t\tsettings:settings\n  \t\t}\n\n  \t\tdelete settings.label;\n  \t\tdelete settings.columnName;\n\n  \t\treturn obj;\n  \t}\n\n\n\n\t// unique key to reference this specific DataField\n  \tfieldName() {\n  \t\treturn this.defaults.name;\n  \t}\n\n  \t// http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n  \tfieldType() {\n  \t\treturn this.defaults.type;\n  \t}\n\n  \t// font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\t\t\n  \tfieldIcon() {\n  \t\treturn this.defaults.icon;\n  \t}\n\n  \t// the multilingual text for the name of this data field.\n  \tfieldMenuName() {\n  \t\treturn this.defaults.menuName;\n  \t} \n\n  \t// the multilingual text for the name of this data field.\n  \tfieldDescription() {\n  \t\treturn this.defaults.description;\n  \t} \n\n\n\n  \t/*\n  \t * @method isValid\n  \t * check the current values to make sure they are valid.\n  \t * Here we check the default values provided by ABField.\n  \t *\n  \t * @return null or [{OP.Form.validationError()}] objects.\n  \t */\n\tisValid() {\n\n\t\tvar errors = null;\n\n\t\t// .columnName must be unique among fileds on the same object\n\t\tvar isNameUnique = (this.object.fields((f)=>{ \n\t\t\tvar isDifferent = (f.id != this.id);\n\t\t\treturn (f.id != this.id) \n\t\t\t\t\t&& (f.columnName.toLowerCase() == this.columnName.toLowerCase() ); \n\t\t}).length == 0);\n\t\tif (!isNameUnique) {\n\t\t\terrors = OP.Form.validationError({\n\t\t\t\tname:'columnName',\n\t\t\t\tmessage:L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.columnName),\n\t\t\t}, errors);\n\t\t}\n\n\t\treturn errors;\n\t}\n\n\n\n\t///\n\t/// Instance Methods\n\t///\n\n\n\t/// ABApplication data methods\n\n\n\t/**\n\t * @method destroy()\n\t *\n\t * destroy the current instance of ABApplication\n\t *\n\t * also remove it from our _AllApplications\n\t *\n\t * @return {Promise}\n\t */\n\tdestroy () {\n\t\tif (this.id) {\nconsole.error('TODO: ABField.destroy()');\n\n\t\t}\n\t}\n\n\n\t/**\n\t * @method save()\n\t *\n\t * persist this instance of ABField with it's parent ABObject\n\t *\n\t *\n\t * @return {Promise}\n\t *\t\t\t\t\t\t.resolve( {this} )\n\t */\n\tsave () {\n\t\treturn new Promise(\n\t\t\t(resolve, reject) => {\n\n\t\t\t\t// if this is our initial save()\n\t\t\t\tif (!this.id) {\n\t\t\t\t\tthis.id = OP.Util.uuid();\t// setup default .id\n\t\t\t\t}\n\n\t\t\t\tthis.object.fieldSave(this)\n\t\t\t\t.then(() => {\n\t\t\t\t\tresolve(this);\n\t\t\t\t})\n\t\t\t\t.catch(function(err){\n\t\t\t\t\treject(err);\n\t\t\t\t})\n\t\t\t}\n\t\t)\n\t}\n\n\n\t/**\n\t * @method toObj()\n\t *\n\t * properly compile the current state of this ABField instance\n\t * into the values needed for saving to the DB.\n\t *\n\t * @return {json}\n\t */\n\ttoObj () {\n\n\t\t// store \"label\" in our translations\n\t\tOP.Multilingual.unTranslate(this, this, [\"label\"]);\n\n\t\treturn {\n\t\t\tid : this.id,\n\t\t\ttype : this.type,\n\t\t\ticon : this.icon,\n\t\t\tcolumnName: this.columnName,\n\t\t\tsettings: this.settings,\n\t\t\ttranslations:this.translations\n\t\t}\n\t}\n\n\n\tfromValues (values) {\n\n \t\tthis.id = values.id;\t\t\t// NOTE: only exists after .save()\n    \tthis.type = values.type || this.fieldType();\t\n    \tthis.icon = values.icon || this.fieldIcon();\n\n    \t// if this is being instantiated on a read from the Property UI,\n    \t// .label is coming in under .settings.label\n    \tthis.label = values.label || values.settings.label || '?label?';\n\n    \tthis.columnName = values.columnName || '';\n    \tthis.translations = values.translations || [];\n\n    \tthis.settings = values.settings || {};\n    \tthis.settings.showIcon = values.settings.showIcon+\"\" || \"1\";\n\n\n    \t// convert from \"0\" => 0\n    \tthis.settings.showIcon = parseInt(this.settings.showIcon);\n\t}\n\n\n\n\n\n\n\t///\n\t/// Working with Actual Object Values:\n\t///\n\n\t/*\n\t * @function columnHeader\n\t * Return the column header for a webix grid component for this specific \n\t * data field.\n\t * @param {bool} isObjectWorkspace is this being used in the Object \n\t *\t\t\t\t\t\t\t\t   workspace.\n\t * @return {obj}  configuration obj\n\t */\n\tcolumnHeader (isObjectWorkspace) {\n\n\t\tvar config = {\n\t\t\tid: this.id,\n\t\t\theader: this.label,\n\t\t}\n\n\t\tif (isObjectWorkspace) {\n\t\t\tif (this.settings.showIcon) {\n\t\t\t\tconfig.header = '<span class=\"webix_icon fa-{icon}\"></span>'.replace('{icon}', this.fieldIcon() ) + config.header;\n\t\t\t}\n\t\t}\n\n\t\treturn config;\n\t}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/classes/dataFields/ABField.js","\n/*\n * AB\n *\n * The base AppBuilder component.  It manages these components:\n *   - ab_choose :  choose an application to work with\n *   - ab_work   :  load an application into the work area\n *\n */\n\n// import '../OP/OP'\n\nimport './ab_choose'\nimport './ab_work'\n\n// Import our Custom Components here:\nimport EditTree from '../webix_custom_components/edittree'\nimport EditList from '../webix_custom_components/editlist'\n\nimport style from \"../AppBuilder.css\"\n\n\nOP.Component.extend('ab', function(App) {\n\n\n\tfunction L(key, altText) {\n\t\treturn AD.lang.label.getLabel(key) || altText;\n\t}\n\n\n\t// setup the common labels for our AppBuilder Application.\n\tApp.labels = {\n\t\tadd: L('ab.common.add', \"*Add\"),\n\t\tcreate: L('ab.common.create', \"*Create\"),\n\t\t\"delete\": L('ab.common.delete', \"*Delete\"),\n\t\tedit: \t  L('ab.common.edit', \"*Edit\"),\n\t\t\"export\": L('ab.common.export', \"*Export\"),\n\t\tformName: L('ab.common.form.name', \"*Name\"),\n\t\t\"import\": L('ab.common.import', \"*Import\"),\n\t\tok: \t  L('ab.common.ok', \"*Ok\"),\n\n\t\tcancel:   L('ab.common.cancel', \"*Cancel\"),\n\t\tsave: \t  L('ab.common.save', \"*Save\"),\n\n\t\tyes: \t  L('ab.common.yes', \"*Yes\"),\n\t\tno: \t  L('ab.common.no', \"*No\"),\n\n\t\tcreateErrorMessage:   L('ab.common.create.error', \"*System could not create <b>{0}</b>.\"),\n\t\tcreateSuccessMessage: L('ab.common.create.success', \"*<b>{0}</b> is created.\"),\n\n\t\tupdateErrorMessage:  L('ab.common.update.error', \"*System could not update <b>{0}</b>.\"),\n\t\tupdateSucessMessage: L('ab.common.update.success', \"*<b>{0}</b> is updated.\"),\n\n\t\tdeleteErrorMessage:   L('ab.common.delete.error', \"*System could not delete <b>{0}</b>.\"),\n\t\tdeleteSuccessMessage: L('ab.common.delete.success', \"*<b>{0}</b> is deleted.\"),\n\n\n\t\t// Data Field  common Property labels:\n\t\tdataFieldHeaderLabel: L('ab.dataField.common.headerLabel', '*Label'),\n\t\tdataFieldHeaderLabelPlaceholder: L('ab.dataField.common.headerLabelPlaceholder', '*Header Name'),\n\n\t\tdataFieldColumnName: L('ab.dataField.common.columnName', '*Name'),\n\t\tdataFieldColumnNamePlaceholder: L('ab.dataField.common.columnNamePlaceholder', '*Column Name'),\n\n\t\tdataFieldShowIcon: L('ab.dataField.common.showIcon', '*show icon?')\n\t}\n\n\n\t// make instances of our Custom Components:\n\tOP.CustomComponent[EditTree.key](App, 'edittree'); // ->  App.custom.edittree  now exists\n\tOP.CustomComponent[EditList.key](App, 'editlist'); // ->  App.custom.editlist  now exists\n\n\n\n\n\tvar ids = {\n\t\tcomponent:App.unique('app_builder_root')\n\t}\n\n\n\n\t// Define the external components used in this Component:\n\tvar AppChooser = OP.Component['ab_choose'](App);\n\tvar AppWorkspace = OP.Component['ab_work'](App);\n\n\n\t// This component's UI definition:\n\t// Application multi-views\n\tvar _ui = {\n\t\tid: ids.component,\n\t\tview:\"multiview\",\n\t\tborderless:true,\n\t\tanimate: false,\n\t\trows:[\n\t\t\tAppChooser.ui,\n\t\t\tAppWorkspace.ui\n\t\t]\n\t};\n\n\n\n\t// This component's init() definition:\n\tvar _init = function() {\n\n\t\tAppChooser.init();\n\t\tAppWorkspace.init();\n\n\t\t// start off only showing the App Chooser:\n\t\tApp.actions.transitionApplicationChooser();\n\n\t\t// perform an initial resize adjustment\n\t\t$$(ids.component).adjust();\n\t}\n\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\t}\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui:_ui,\t\t\t\t\t// {obj} \tthe webix ui definition for this component\n\t\tinit:_init,\t\t\t\t// {fn} \tinit() to setup this component\n\t\tactions:_actions\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\t}\n\n});\n\n\n\n\n\n\n//// REFACTORING TODOs:\n// TODO: AppForm-> Permissions : refresh permission list, remove AppRole permission on Application.delete().\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab.js","\n// import 'OP';\n// import '../../../../../assets/js/webix/webix'\n\n\nimport './components/ab'\n\n\nAD.Control.OpsTool.extend('BuildApp', {\n\n\tinit: function (element, options) {\n\t\tvar self = this;\n\n\t\toptions = AD.defaults({\n\t\t\ttemplateDOM: '/opstools/BuildApp/views/BuildApp/BuildApp.ejs',\n\t\t\tresize_notification: 'BuildApp.resize',\n\t\t\ttool: null   // the parent opsPortal Tool() object\n\t\t}, options);\n\t\tself.options = options;\n\n\t\t// Call parent init\n\t\tself._super(element, options);\n\n\t\tself.data = {};\n\n\t\tself.webixUiId = {\n\t\t\tloadingScreen: 'ab-loading-screen',\n\t\t\tsyncButton: 'ab-sync-button'\n\t\t};\n\n\t\tself.initDOM(function(){\n\t\t\tself.initWebixUI();\n\t\t});\n\n\n\t},\n\n\n\tinitDOM: function (cb) {\n\t\tvar _this = this;\n\n\t\tcan.view(this.options.templateDOM, {}, function(fragment){\n\t\t\t_this.element.html(fragment);\n\n\t\t\t// _this.element.find(\".ab-app-list\").show();\n\t\t\t// _this.element.find(\".ab-app-workspace\").hide();\n\n\t\t\tcb();\n\t\t});\n\t},\n\n\n\tinitWebixUI: function () {\n\n\t\t// get the AppBuilder (AB) Webix Component\n\t\tvar AppBuilder = OP.Component['ab']();\n\t\tvar ui = AppBuilder.ui;\n\n\t\t// tell the AppBuilder where to attach\n\t\tui.container = 'ab-main-container'\n\n\t\t// instantiate the UI first\n\t\tthis.AppBuilder = webix.ui(ui);\n\n\t\t// then perform the init()\n\t\tAppBuilder.init();\n\n\t},\n\n\n\tresize: function (height) {\n\t\tvar self = this;\n\n\t\theight = height.height || height;\n\n\t\tvar appListDom = $(self.element);\n\n\t\tif (appListDom) {\n\t\t\tvar width = appListDom.parent().css('width');\n\t\t\tif (width) {\n\t\t\t\twidth = parseInt(width.replace('px', ''));\n\t\t\t}\n\t\t\tappListDom.width(width);\n\n\t\t\t// Removed this because the 140 pixels was causing the list to not scroll to the bottom of the page\n\t\t\t// var computedHeight = height - 140;\n\n\t\t\tvar computedHeight = height;\n\t\t\tconsole.log(\"computed height: \" + computedHeight);\n\t\t\tvar mh = parseInt(appListDom.css('min-height').replace('px', ''));\n\t\t\tconsole.log(\"min-height: \" + mh);\n\t\t\tif (mh < computedHeight) {\n\t\t\t\tappListDom.height(computedHeight);\n\t\t\t\t$('#ab-main-container').height(computedHeight);\n\t\t\t} else {\n\t\t\t\tappListDom.height(mh);\n\t\t\t\t$('#ab-main-container').height(mh);\n\t\t\t}\n\n\t\t\tif (this.AppBuilder) {\n\t\t\t\t// this.AppBuilder.define('height', height - 140);\n\t\t\t\tthis.AppBuilder.adjust();\n\t\t\t}\n\n\t\t}\n\t}\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/AppBuilder.js","\n// import OP from \"OP\"\nimport ABFieldManager from \"./ABFieldManager\"\n\n\nfunction toDC( data ) {\n\treturn new webix.DataCollection({\n\t\tdata: data,\n\n\t\t// on: {\n\t\t// \tonAfterDelete: function(id) {\n\n\t\t// \t}\n\t\t// }\n\t});\n}\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nexport default class ABObject {\n\n    constructor(attributes, application) {\n/*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n\t]\n}\n*/\n\n    \t// ABApplication Attributes\n    \tthis.id    = attributes.id;\n    \tthis.name  = attributes.name || \"\";\n    \tthis.labelFormat = attributes.labelFormat || \"\";\n    \tthis.isImported  = attributes.isImported  || 0;\n    \tthis.urlPath\t = attributes.urlPath     || \"\";\n    \tthis.importFromObject = attributes.importFromObject || \"\";\n    \tthis.translations = attributes.translations;\n\n    \tthis.objectWorkspace = attributes.objectWorkspace || {\n    \t\thiddenFields:[], \t// array of [ids] to add hidden:true to\n    \t};\n\n\n    \t// multilingual fields: label, description\n    \tOP.Multilingual.translate(this, this, ['label']);\n\n\n\t  \t// import all our ABObjects\n\t  \tvar newFields = [];\n\t  \t(attributes.fields || []).forEach((field) => {\n\t  \t\tnewFields.push( this.fieldNew(field) );\n\t  \t})\n\t  \tthis._fields = newFields;\n\n\n\t  \t// link me to my parent ABApplication\n\t  \tthis.application = application;\n  \t}\n\n\n\n  \t///\n  \t/// Static Methods\n  \t///\n  \t/// Available to the Class level object.  These methods are not dependent\n  \t/// on the instance values of the Application.\n  \t///\n\n\n\n//// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n\tisValid() {\n\n\t\tvar errors = null;\n\n\n\t\t// label/name must be unique:\n\t\tvar isNameUnique = (this.application.objects((o) => { return o.name.toLowerCase() == this.name.toLowerCase(); }).length == 0);\n\t\tif (!isNameUnique) {\n\t\t\terrors = OP.Form.validationError({\n\t\t\t\t\tname:'name',\n\t\t\t\t\tmessage:L('ab.validation.object.name.unique', 'Object name must be unique (#name# already used in this Application)').replace('#name#', this.name),\n\t\t\t\t}, errors);\n\t\t}\n\n\n\t\t\t// Check the common validations:\n// TODO:\n// if (!inputValidator.validate(values.label)) {\n// \t_logic.buttonSaveEnable();\n// \treturn false;\n// }\n\n\n\t\treturn errors;\n\t}\n\n\n\n\t///\n\t/// Instance Methods\n\t///\n\n\n\t/// ABApplication data methods\n\n\n\t/**\n\t * @method destroy()\n\t *\n\t * destroy the current instance of ABApplication\n\t *\n\t * also remove it from our _AllApplications\n\t *\n\t * @return {Promise}\n\t */\n\tdestroy () {\n\t\tif (this.id) {\nconsole.error('TODO: ABObject.destroy()');\n\t\t\t// return this.Model.destroy(this.id)\n\t\t\t// \t.then(()=>{\n\t\t\t// \t\t_AllApplications.remove(this.id);\n\t\t\t// \t});\n\t\t}\n\t}\n\n\n\t/**\n\t * @method save()\n\t *\n\t * persist this instance of ABObject with it's parent ABApplication\n\t *\n\t *\n\t * @return {Promise}\n\t *\t\t\t\t\t\t.resolve( {this} )\n\t */\n\tsave () {\n\n\t\treturn new Promise(\n\t\t\t(resolve, reject) => {\n\n\t\t\t\t// if this is our initial save()\n\t\t\t\tif (!this.id) {\n\n\t\t\t\t\tthis.id = OP.Util.uuid();\t// setup default .id\n\t\t\t\t\tthis.label = this.label || this.name;\n\t\t\t\t\tthis.urlPath = this.urlPath || this.application.name + '/' + this.name;\n\t\t\t\t}\n\n\t\t\t\tthis.application.objectSave(this)\n\t\t\t\t.then(() => {\n\t\t\t\t\tresolve(this);\n\t\t\t\t})\n\t\t\t\t.catch(function(err){\n\t\t\t\t\treject(err);\n\t\t\t\t})\n\t\t\t}\n\t\t)\n\t}\n\n\n\t/**\n\t * @method toObj()\n\t *\n\t * properly compile the current state of this ABApplication instance\n\t * into the values needed for saving to the DB.\n\t *\n\t * Most of the instance data is stored in .json field, so be sure to\n\t * update that from all the current values of our child fields.\n\t *\n\t * @return {json}\n\t */\n\ttoObj () {\n\n\t\tOP.Multilingual.unTranslate(this, this, [\"label\"]);\n\n\t\t// // for each Object: compile to json\n\t\tvar currFields = [];\n\t\tthis._fields.forEach((obj) => {\n\t\t\tcurrFields.push(obj.toObj())\n\t\t})\n\n\n\t\treturn {\n\t\t\tid: \t\t\tthis.id,\n\t\t\tname: \t\t\tthis.name,\n    \t\tlabelFormat: \tthis.labelFormat,\n    \t\tisImported:  \tthis.isImported,\n    \t\turlPath: \t\tthis.urlPath,\n    \t\timportFromObject: this.importFromObject,\n    \t\tobjectWorkspace:  this.objectWorkspace,\n    \t\ttranslations: \tthis.translations,\n    \t\tfields: \t \tcurrFields\n\t\t}\n\t}\n\n\n\n\n\n\n\t///\n\t/// Fields\n\t///\n\n\n\n\n\t/**\n\t * @method fields()\n\t *\n\t * return an array of all the ABFields for this ABObject.\n\t *\n\t * @return {array}\n\t */\n\tfields (filter) {\n\n\t\tfilter = filter || function() {return true; };\n\n\t\treturn this._fields.filter(filter);\n\t}\n\n\n\n\t/**\n\t * @method fieldNew()\n\t *\n\t * return an instance of a new (unsaved) ABField that is tied to this\n\t * ABObject.\n\t *\n\t * NOTE: this new field is not included in our this.fields until a .save()\n\t * is performed on the field.\n\t *\n\t * @return {ABField}\n\t */\n\tfieldNew ( values ) {\n\t\t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n\t\treturn ABFieldManager.newField( values, this );\n\t}\n\n\n\n\t/**\n\t * @method fieldSave()\n\t *\n\t * save the given ABField in our ._fields array and persist the current\n\t * values.\n\t *\n\t * @param {ABField} field The instance of the field to save.\n\t * @return {Promise}\n\t */\n\tfieldSave( field ) {\n\t\tvar isIncluded = (this.fields(function(o){ return o.id == field.id }).length > 0);\n\t\tif (!isIncluded) {\n\t\t\tthis._fields.push(field);\n\t\t}\n\n\t\treturn this.save();\n\t}\n\n\n\n\n\n\n\t///\n\t///\tObject Workspace Settings\n\t///\n\n\n\tget workspaceHiddenFields() {\n\t\treturn this.objectWorkspace.hiddenFields;\n\t}\n\n\tset workspaceHiddenFields( fields ) {\n\t\tthis.objectWorkspace.hiddenFields = fields;\n\t}\n\n\n\n\n\t///\n\t/// Working with Actual Object Values:\n\t///\n\n\t// return the column headers for this object\n\t// @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n\tcolumnHeaders (isObjectWorkspace) {\n\n\t\tvar headers = [];\n\t\tvar idLookup = {};\n\n\t\t// get the header for each of our fields:\n\t\tthis._fields.forEach(function(f){\n\t\t\tvar header = f.columnHeader(isObjectWorkspace);\n\t\t\theaders.push(header);\n\t\t\tidLookup[header.id] = f.id;\t// name => id\n\t\t})\n\n\n\t\t// update our headers with any settings applied in the Object Workspace\n\t\tif (isObjectWorkspace) {\n\n\t\t\t// set column width to adjust:true by default;\n\t\t\theaders.forEach((h) => { h.adjust = true; });\n\n\t\t\t// hide any hiddenfields\n\t\t\tthis.workspaceHiddenFields.forEach((hfID)=>{\n\t\t\t\theaders.forEach((h)=> {\n\t\t\t\t\tif (idLookup[h.id] == hfID){\n\t\t\t\t\t\th.hidden = true;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t});\n\n\t\t}\n\n\t\treturn headers;\n\t}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/classes/ABObject.js","/* \n * ABFieldComponent\n * \n * An ABFieldComponent defines the UI component used by an ABField to display it's properties.\n *\n */\n\nimport ABField from \"./ABField\"\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\nexport default class ABFieldComponent {\n\n\n    constructor(options) {\n\n    \tthis.options = options;\n\n    \tthis.fieldDefaults = options.fieldDefaults || {};\n\n    \tthis.elements = options.elements || function (App) { return []; } ;\n\n    \tthis.defaultValues = options.defaultValues || {};\n\n    \tthis.rules = options.rules || {};\n\n    \tthis.logic = options.logic || {};\n\n    \tthis.init = options.init || function() {};\n\n\n\n    \tthis.idBase = this.fieldDefaults.name || '??fieldName??';\n\n    \t// this.ids = options.ids || {};\n    \tthis.ids = {};\n\n    \t\n  \t}\n\n\n\n  \t///\n  \t/// Static Methods\n  \t///\n  \t/// Available to the Class level object.  These methods are not dependent\n  \t/// on the instance values of the Application.\n  \t///\n\n\n\n\n\t///\n\t/// Instance Methods\n\t///\n\n\tcomponent (App) {\n\n\t\t// for each provided element: create an this.ids for it:\n    \tvar elements = this.elements(App);\n    \telements.forEach((e) => {\n    \t\tif (e.name) {\n    \t\t\tthis.ids[e.name] = e.name;\n    \t\t}\n    \t})\n\n\n\n\t\tvar ids = {\n\n\t\t\tcomponent: App.unique(this.idBase+'_component'),\n\n\t\t\t// the common property fields\n\t\t\tlabel: App.unique(this.idBase+'_label'),\n\t\t\tcolumnName: App.unique(this.idBase+'_columnName'),\n\t\t\tfieldDescription: App.unique(this.idBase+'_fieldDescription'),\n\t\t\tshowIcon: App.unique(this.idBase+'_showIcon'),\n\t\t}\n\n\t\t// make sure to include this instances element's ids into our list:\n\t\tfor (var i in this.ids) {\n\t\t\tids[i] = App.unique(this.idBase+'_'+i);\n\t\t}\n\n\t\t// update our elements to include our ids:\n    \telements.forEach((e) => {\n    \t\tif (e.name) {\n    \t\t\te.id = ids[e.name];\n    \t\t}\n    \t})\n\n\t\t//// NOTE: we merge in the common headers below.\n\t\tvar _ui = {\n\t\t\tview:'form',\n\t\t\tid: ids.component,\n\t\t\tautoheight:true,\n\t\t\tborderless:true,\n\t\t\telements: [\n\t\t\t\t// {\n\t\t\t\t// \tview: \"text\",\n\t\t\t\t// \tid: ids.textDefault,\n\t\t\t\t// \tname:'textDefault',\n\t\t\t\t// \tplaceholder: labels.component.defaultText\n\t\t\t\t// },\n\t\t\t\t// {\n\t\t\t\t// \tview: \"checkbox\",\n\t\t\t\t// \tid: ids.supportMultilingual,\n\t\t\t\t// \tname:'supportMultilingual',\n\t\t\t\t// \tlabelRight: labels.component.supportMultilingual,\n\t\t\t\t// \tlabelWidth: 0,\n\t\t\t\t// \tvalue: true\n\t\t\t\t// }\n\t\t\t],\n\n\t\t\trules:{\n\t\t\t\t'label':webix.rules.isNotEmpty,\n\t\t\t\t'columnName':webix.rules.isNotEmpty\n\t\t\t}\n\t\t}\n\n\n\n\t\tvar _init = function() {\n\n\t\t\t// call our provided .init() routine\n\t\t\tthis.init(ids);\n\t\t}\n\n\n\n\t\tvar _logic = {\n\n\t\t\t/*\n\t\t\t * @function clear\n\t\t\t *\n\t\t\t * clear the form.\n\t\t\t */\n\t\t\tclear: () => {\n\n\t\t\t\tABField.clearEditor( ids );\n\n\t\t\t\tfor(var f in this.defaultValues) { \n\t\t\t\t\tvar component = $$(ids[f]);\n\t\t\t\t\tif(component) {\n\t\t\t\t\t\tcomponent.setValue(this.defaultValues[f]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('!! could not find component for default value: name:'+f+' id:'+ids[f]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$$(ids.component).clearValidation();\n\n\n\t\t\t\t// perform provided .clear()\n\t\t\t\tif (this.logic.clear) {\n\t\t\t\t\tthis.logic.clear(ids);\n\t\t\t\t}\n\t\t\t},\n\n\n\t\t\t/*\n\t\t\t * @function isValid\n\t\t\t *\n\t\t\t * checks the current values on the componet to see if they are Valid\n\t\t\t */\n\t\t\tisValid: () => {\n\n\t\t\t\tvar isValid = $$(ids.component).validate();\n\n\t\t\t\t// perform provided .isValid()\n\t\t\t\tif (this.logic.isValid) {\n\t\t\t\t\tisValid = this.logic.isValid(ids, isValid);\n\t\t\t\t}\n\n\t\t\t\treturn isValid;\n\t\t\t},\n\n\n\t\t\t/*\n\t\t\t * @function labelOnChange\n\t\t\t *\n\t\t\t * The ABField.definitionEditor implements a default operation\n\t\t\t * to update the value of the .columnName with the current value of \n\t\t\t * label.\n\t\t\t * \n\t\t\t * if you want to override that functionality, implement this fn()\n\t\t\t *\n\t\t\t * @param {string} newVal\tThe new value of label\n\t\t\t * @param {string} oldVal\tThe previous value\n\t\t\t */\n\t\t\t// labelOnChange: function (newVal, oldVal) {\n\n\t\t\t// \t// When the Label value changes, update our Column Name value \n\t\t\t// \t// to match.\n\n\t\t\t// \toldVal = oldVal || '';\n\t\t\t// \tif (newVal != oldVal &&\n\t\t\t// \t\toldVal == $$(ids.columnName).getValue()) {\n\t\t\t// \t\t$$(ids.columnName).setValue(newVal);\n\t\t\t// \t}\n\t\t\t// },\n\n\n\t\t\t/*\n\t\t\t * @function populate\n\t\t\t *\n\t\t\t * populate the form with the given ABField instance provided.\n\t\t\t *\n\t\t\t * @param {ABField} field\n\t\t\t */\n\t\t\tpopulate: (field) => {\n\nconsole.error('TODO: .populate()');\n\n\t\t\t\t// populate the base ABField values:\n\t\t\t\tABField.editorPopulate(ids, field);\n\n\t\t\t\telements.forEach(function(e){\n\t\t\t\t\t$$(ids[e.name]).setValue(field.settings[e.name]);\n\t\t\t\t})\n\t\t\t},\n\n\n\t\t\t/*\n\t\t\t * @function show\n\t\t\t *\n\t\t\t * show this component.\n\t\t\t */\n\t\t\tshow: () => {\n\t\t\t\t$$(ids.component).clearValidation();\n\t\t\t\t$$(ids.component).show();\n\n\t\t\t\t// perform provided .show()\n\t\t\t\tif (this.logic.show) {\n\t\t\t\t\tthis.logic.show(ids)\n\t\t\t\t}\n\t\t\t},\n\n\n\t\t\t/*\n\t\t\t * @function values\n\t\t\t *\n\t\t\t * return the values for this form.\n\t\t\t * @return {obj}  \n\t\t\t */\n\t\t\tvalues: () => {\n\n\t\t\t\tvar settings = $$(ids.component).getValues();\n\t\t\t\tvar values = ABField.editorValues(settings);\n\n\t\t\t\tvalues.type = this.fieldDefaults.type;\n\t\t\n\t\t\t\t// perform provided .values()\n\t\t\t\tif (this.logic.values) {\n\t\t\t\t\tvalues = this.logic.values(ids, values)\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t}\n\n\t\t}\n\n\t\t// apply additional logic functions:\n\t\tfor (var l in this.logic) {\n\t\t\tif (!_logic[l]) _logic[l] = this.logic[l];\n\t\t}\n\n\n\t\t// make sure our given elements, have an id set:\n\n\n\t\t// get the common UI headers entries, and insert them above ours here:\n\t\t// NOTE: put this here so that _logic is defined.\n\t\tvar commonUI = ABField.definitionEditor(App, ids, _logic, this.fieldDefaults);\n\t\t_ui.elements = commonUI.rows.concat(elements);\n\n\n\t\t// return the current instance of this component:\n\t\treturn this._component = {\n\t\t\tui:_ui,\t\t\t\t\t// {obj} \tthe webix ui definition for this component\n\t\t\tinit:_init,\t\t\t\t// {fn} \tinit() to setup this component  \n\t\t\t// actions:_actions,\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\n\n\t\t\t// DataField exposed actions:\n\t\t\tclear: _logic.clear,\n\t\t\tisValid:_logic.isValid,\n\t\t\tpopulate: _logic.populate,\n\t\t\tshow: _logic.show,\n\t\t\tvalues: _logic.values,\n\n\n\t\t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n\t\t}\n\t}\n\n\n\n\n\t// populate(field) {\n\t// \tthis._component.populate(field);\n\t// }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/classes/dataFields/ABFieldComponent.js","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nimport ABField from \"./ABField\"\nimport ABFieldComponent from \"./ABFieldComponent\"\n\n\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\nvar ABFieldStringDefaults = {\n\tname : 'string', // unique key to reference this specific DataField\n\ttype : 'string', // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\ticon : 'font',   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\t\t\n\t\n\t// menuName: what gets displayed in the Editor drop list\n\tmenuName : L('ab.dataField.string.menuName', '*Single line text'),\n\t\n\t// description: what gets displayed in the Editor description.\n\tdescription: L('ab.dataField.string.description', '*short string value')\n}\n\n\n\n\n/**\n * ABFieldStringComponent\n *\n * Defines the UI Component for this Data Field.  The ui component is responsible\n * for displaying the properties editor, populating existing data, retrieving\n * property values, etc.\n *\n * @param {obj} App  the current Component Application instance for the current UI.\n * @return {obj} the Component object.\n */\n// var ABFieldStringComponent = function(App) {\n\n// \tlabels.common = App.labels;\n\n// \tvar idBase = 'ab_datafield_string';\n\n\n\n// \tvar componentDefaults = {\n// \t\ttextDefault: '', \n// \t\tsupportMultilingual:1\n// \t};\n\n\n\n// \tvar ids = {\n\n// \t\tcomponent: App.unique(idBase+'_component'),\n\n\n// \t\ttextDefault: App.unique(idBase+'_textdefault'),\n// \t\tsupportMultilingual: App.unique(idBase+'_supportMultilingual'),\n\n\n// \t\t// the common property fields\n// \t\tlabel: App.unique(idBase+'_label'),\n// \t\tcolumnName: App.unique(idBase+'_columnName'),\n// \t\tfieldDescription: App.unique(idBase+'_fieldDescription'),\n// \t\tshowIcon: App.unique(idBase+'_showIcon'),\n// \t}\n\n\n// \t//// NOTE: we merge in the common headers below.\n// \tvar _ui = {\n// \t\tview:'form',\n// \t\tid: ids.component,\n// \t\tautoheight:true,\n// \t\tborderless:true,\n// \t\telements: [\n// \t\t\t{\n// \t\t\t\tview: \"text\",\n// \t\t\t\tid: ids.textDefault,\n// \t\t\t\tname:'textDefault',\n// \t\t\t\tplaceholder: labels.component.defaultText\n// \t\t\t},\n// \t\t\t{\n// \t\t\t\tview: \"checkbox\",\n// \t\t\t\tid: ids.supportMultilingual,\n// \t\t\t\tname:'supportMultilingual',\n// \t\t\t\tlabelRight: labels.component.supportMultilingual,\n// \t\t\t\tlabelWidth: 0,\n// \t\t\t\tvalue: true\n// \t\t\t}\n// \t\t],\n\n// \t\trules:{\n// \t\t\t'label':webix.rules.isNotEmpty,\n// \t\t\t'columnName':webix.rules.isNotEmpty\n// \t\t}\n// \t}\n\n\n\n// \tvar _init = function() {\n\n// \t\t// perform any additional setup actions.\n// \t\t// for example, don't want to show the description, then .hide() it here:\n// \t\t// $$(ids.fieldDescription).hide();\n// \t}\n\n\n// \tvar _logic = {\n\n// \t\t/*\n// \t\t * @function clear\n// \t\t *\n// \t\t * clear the form.\n// \t\t */\n// \t\tclear: function () {\n\n// \t\t\tABField.clearEditor(App, ids);\n\n// \t\t\tfor(var f in componentDefaults) { \n// \t\t\t\tvar component = $$(ids[f]);\n// \t\t\t\tcomponent.setValue(componentDefaults[f]);\n// \t\t\t}\n\n// \t\t\t$$(ids.component).clearValidation();\n// \t\t},\n\n\n// \t\t/*\n// \t\t * @function isValid\n// \t\t *\n// \t\t * checks the current values on the componet to see if they are Valid\n// \t\t */\n// \t\tisValid: function () {\n\n// \t\t\treturn $$(ids.component).validate();\n\n// \t\t},\n\n\n\t\t\n// \t\t * @function labelOnChange\n// \t\t *\n// \t\t * The ABField.definitionEditor implements a default operation\n// \t\t * to update the value of the .columnName with the current value of \n// \t\t * label.\n// \t\t * \n// \t\t * if you want to override that functionality, implement this fn()\n// \t\t *\n// \t\t * @param {string} newVal\tThe new value of label\n// \t\t * @param {string} oldVal\tThe previous value\n\t\t \n// \t\t// labelOnChange: function (newVal, oldVal) {\n\n// \t\t// \t// When the Label value changes, update our Column Name value \n// \t\t// \t// to match.\n\n// \t\t// \toldVal = oldVal || '';\n// \t\t// \tif (newVal != oldVal &&\n// \t\t// \t\toldVal == $$(ids.columnName).getValue()) {\n// \t\t// \t\t$$(ids.columnName).setValue(newVal);\n// \t\t// \t}\n// \t\t// },\n\n\n// \t\t/*\n// \t\t * @function populate\n// \t\t *\n// \t\t * populate the form with the given ABField instance provided.\n// \t\t *\n// \t\t * @param {ABFieldString} field\n// \t\t */\n// \t\tpopulate: function (field) {\n// console.error('TODO: .populate()');\n// \t\t},\n\n\n// \t\t/*\n// \t\t * @function show\n// \t\t *\n// \t\t * show this component.\n// \t\t */\n// \t\tshow: function() {\n// \t\t\t$$(ids.component).clearValidation();\n// \t\t\t$$(ids.component).show();\n// \t\t},\n\n\n// \t\t/*\n// \t\t * @function values\n// \t\t *\n// \t\t * return the values for this form.\n// \t\t * @return {obj}  \n// \t\t */\n// \t\tvalues: function () {\n\n// \t\t\tvar settings = $$(ids.component).getValues();\n// \t\t\tvar values = ABField.editorValues(settings);\n\n// \t\t\tvalues.type = ABFieldStringDefaults.type;\n\t\n// \t\t\treturn values;\n// \t\t}\n\n// \t}\n\n\n// \t// get the common UI headers entries, and insert them above ours here:\n// \t// NOTE: put this here so that _logic is defined.\n// \tvar commonUI = ABField.definitionEditor(App, ids, _logic, ABFieldStringDefaults);\n// \t_ui.elements = commonUI.rows.concat(_ui.elements);\n\n\n// \t// return the current instance of this component:\n// \treturn {\n// \t\tui:_ui,\t\t\t\t\t// {obj} \tthe webix ui definition for this component\n// \t\tinit:_init,\t\t\t\t// {fn} \tinit() to setup this component  \n// \t\t// actions:_actions,\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\n\n// \t\t// DataField exposed actions:\n// \t\tclear: _logic.clear,\n// \t\tisValid:_logic.isValid,\n// \t\tpopulate: _logic.populate,\n// \t\tshow: _logic.show,\n// \t\tvalues: _logic.values,\n\n\n// \t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n// \t}\n// }\n\n\n\nvar ABFieldStringComponent = new ABFieldComponent({\n\n\tfieldDefaults: ABFieldStringDefaults,\n\n\telements:function(App) {\n\t\treturn [\n\t\t\t{\n\t\t\t\tview: \"text\",\n\t\t\t\tname:'textDefault',\n\t\t\t\tlabelWidth: App.config.labelWidthLarge,\n\t\t\t\tplaceholder: L('ab.dataField.string.default', '*Default text')\n\t\t\t},\n\t\t\t{\n\t\t\t\tview: \"checkbox\",\n\t\t\t\tname:'supportMultilingual',\n\t\t\t\tlabelRight: L('ab.dataField.string.supportMultilingual', '*Support multilingual'),\n\t\t\t\tlabelWidth: App.config.labelWidthCheckbox,\n\t\t\t\tvalue: true\n\t\t\t}\n\t\t]\n\t},\n\n\t// defaultValues: the keys must match a .name of your elements to set it's default value.\n\tdefaultValues:{\n\t\t'textDefault': '', \n\t\t'supportMultilingual':1\n\t},\n\n\t// rules: basic form validation rules for webix form entry.\n\t// the keys must match a .name of your .elements for it to apply\n\trules:{\n\t\t// 'textDefault':webix.rules.isNotEmpty,\n\t\t// 'supportMultilingual':webix.rules.isNotEmpty\n\t},\n\n\t// include additional behavior on default component operations here:\n\t// The base routines will be processed first, then these.  Any results\n\t// from the base routine, will be passed on to these: \n\t// \t@param {obj} ids  the list of ids used to generate the UI.  your \n\t//\t\t\t\t\t  provided .elements will have matching .name keys\n\t//\t\t\t\t\t  to access them here.\n\t//  @param {obj} values the current set of values provided for this instance\n\t// \t\t\t\t\t  of ABField:\n\t//\t\t\t\t\t  {\n\t//\t\t\t\t\t\tid:'',\t\t\t// if already .saved()\n\t// \t\t\t\t\t\tlabel:'',\n\t// \t\t\t\t\t\tcolumnName:'',\n\t//\t\t\t\t\t\tsettings:{\n\t//\t\t\t\t\t\t\tshowIcon:'',\n\t//\n\t//\t\t\t\t\t\t\tyour element key=>values here\t\n\t//\t\t\t\t\t\t}\n\t//\t\t\t\t\t  }\n\t//\n\t// \t\t.clear(ids)  : reset the display to an empty state\n\t// \t\t.isValid(ids, isValid): perform validation on the current editor values\n\t// \t\t.populate(ids, values) : populate the form with your current settings\n\t// \t\t.show(ids)   : display the form in the editor\n\t// \t\t.values(ids, values) : return the current values from the form\n\tlogic:{\n\n\t},\n\n\t// perform any additional setup actions here.\n\t// @param {obj} ids  the hash of id values for all the current form elements.\n\t//\t\t\t\t\t it should have your elements + the default Header elements:\n\t//\t\t\t\t\t\t.label, .columnName, .fieldDescription, .showIcon\n\tinit:function(ids) {\n\t\t// want to hide the description? :\n\t\t// $$(ids.fieldDescription).hide();\n\t}\n\n})\n\n\n\n\n\nclass ABFieldString extends ABField {\n\n    constructor(values, object) {\n    \tsuper(values, object, ABFieldStringDefaults);\n\n    \t/*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n    \t// we're responsible for setting up our specific settings:\n    \tthis.settings.textDefault = values.settings.textDefault || '';\n    \tthis.settings.supportMultilingual = values.settings.supportMultilingual+\"\" || \"1\";\n\n    \t// text to Int:\n    \tthis.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n\n  \t}\n\n\n  \t// return the default values for this DataField\n  \tstatic defaults() {\n  \t\treturn ABFieldStringDefaults;\n  \t}\n\n\n\n\t/*\n\t * @function propertiesComponent\n\t *\n\t * return a UI Component that contains the property definitions for this Field.\n\t *\n\t * @param {App} App the UI App instance passed around the Components.\n\t * @return {Component}\n\t */\n  \tstatic propertiesComponent(App) {\n  \t\treturn ABFieldStringComponent.component(App);\n  \t}\n\n\n\n\t///\n\t/// Instance Methods\n\t///\n\n\n\tisValid() {\n\n\t\tvar errors = super.isValid();\n\n\t\t// errors = OP.Form.validationError({\n\t\t// \tname:'columnName',\n\t\t// \tmessage:L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name),\n\t\t// }, errors);\n\n\t\treturn errors;\n\t}\n\n\n\t/**\n\t * @method toObj()\n\t *\n\t * properly compile the current state of this ABApplication instance\n\t * into the values needed for saving to the DB.\n\t *\n\t * Most of the instance data is stored in .json field, so be sure to\n\t * update that from all the current values of our child fields.\n\t *\n\t * @return {json}\n\t */\n\t// toObj () {\n\n\t// \tvar obj = super.toObj();\n\n\t// \t// obj.settings = this.settings;  // <--  super.toObj()\n\n\t// \treturn obj;\n\t// }\n\n\n\n\n\t///\n\t/// Working with Actual Object Values:\n\t///\n\n\t// return the grid column header definition for this instance of ABFieldString\n\tcolumnHeader (isObjectWorkspace) {\n\t\tvar config = super.columnHeader(isObjectWorkspace);\n\n\t\tconfig.editor = 'text';\n\t\tconfig.sort   = 'string'\n\n\t\treturn config;\n\t}\n\n}\n\n\n\nexport default ABFieldString;\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/classes/dataFields/ABFieldString.js","\n/*\n * AB Choose\n *\n * When choosing an initial application to work with, we can\n *   - select an application from a list  :  ab_choose_list\n *   - create an application from a form  :  ab_choose_form\n *\n */\n\n\nimport './ab_choose_list'\nimport './ab_choose_form'\n\nvar idBase = 'ab_choose';\nOP.Component.extend(idBase, function(App) {\n\n\n\tvar ids = {\n\t\tcomponent:App.unique(idBase + '_component')\n\t}\n\n\n\n\t// Define the external components used in this Component:\n\tvar AppList = OP.Component['ab_choose_list'](App);\n\tvar AppForm = OP.Component['ab_choose_form'](App);\n\n\n\t// This component's UI definition:\n\t// Application multi-views\n\tvar _ui = {\n\t\tview:\"multiview\",\n\t\tanimate:false,\n\t\tid: ids.component,\n\t\tcells: [\n\t\t\tAppList.ui,\n\t\t\tAppForm.ui\n\t\t]\n\t};\n\n\n\n\t// This component's Init definition:\n\tvar _init = function() {\n\n\t\tAppList.init();\n\t\tAppForm.init();\n\n\t}\n\n\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\n\t\t/**\n\t\t * @function transitionApplicationChooser\n\t\t *\n\t\t * Switch the AppBuilder UI to show the Application Chooser component.\n\t\t */\n\t\ttransitionApplicationChooser:function() {\n\t\t\t$$(ids.component).show();\n\t\t}\n\n\t}\n\n\n\n\tvar _logic = {\n\n\t}\n\n\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui:_ui,\n\t\tinit:_init,\n\t\tactions:_actions,\n\n\t\t_logic:_logic\t\t// Unit Testing\n\t}\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab_choose.js","\n/*\n * AB Choose Form\n *\n * Display the form for creating a new Application.\n *\n */\n\nimport ABApplication from \"../classes/ABApplication\"\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\nvar labels = {\n\n\tcomponent: {\n\n\t\tformHeader: L('ab.application.form.header', \"*Application Info\"),\n\t\tplaceholderName: L('ab.application.form.placeholderName', \"*Application name\"),\n\t\tplaceholderDescription: L('ab.application.form.placeholderDescription', \"*Application description\"),\n\t\tformDescription: L('ab.application.form.formDescription', \"*Description\"),\n\n\t\tsectionPermission: L('ab.application.form.sectionPermission', \"*Permission\"),\n\t\tpermissionHeader: L('ab.application.form.headerPermission',  \"*Who can use this app?\"),\n\t\tcreateNewRole: L('ab.application.form.createNewRoleButton', \"*Create new roll\"),\n\n\t\tinvalidName: L('ab.application.invalidName', \"*This application name is invalid\"),\n\t\tduplicateName: L('ab.application.duplicateName', \"*Name must be unique.\"),\n\n\t}\n}\n\n\nvar idBase = 'ab_choose_form';\nOP.Component.extend(idBase, function(App) {\n\n\tlabels.common = App.labels;\n\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\n\t\tform: App.unique(idBase + '_form'),\n\t\tappFormPermissionList: App.unique(idBase + '_permission'),\n\t\tappFormCreateRoleButton: App.unique(idBase + '_createRole'),\n\n\t\tsaveButton: App.unique(idBase + '_buttonSave')\n\t}\n\n\n\n\tvar _ui = {\n\n\t\tid: ids.component,\n\t\tresponsive:\"hide\",\n\t\tcols: [\n\t\t\t{\n\t\t\t\tmaxWidth: App.config.appListSpacerColMaxWidth,\n\t\t\t\tminWidth: App.config.appListSpacerColMinWidth,\n\t\t\t\twidth: App.config.appListSpacerColMaxWidth\n\t\t\t},\n\t\t\t{\n\t\t\t\tresponsiveCell:false,\n\t\t\t\trows: [\n\t\t\t\t\t{\n\t\t\t\t\t\tmaxHeight: App.config.appListSpacerRowHeight,\n\t\t\t\t\t\thidden: App.config.hideMobile\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tview: \"toolbar\",\n\t\t\t\t\t\tcols: [{ view: \"label\", label: labels.component.formHeader, fillspace: true }]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tview: \"form\",\n\t\t\t\t\t\tid: ids.form,\n\t\t\t\t\t\tautoheight: true,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\telements: [\n\t\t\t\t\t\t\t//{ type: \"section\", template: '<span class=\"webix_icon fa-edit\" style=\"max-width:32px;\"></span>Information', margin: 0 },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"label\",\n\t\t\t\t\t\t\t\tview: \"text\",\n\t\t\t\t\t\t\t\tlabel: labels.common.formName,\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\tplaceholder: labels.component.placeholderName,\n\t\t\t\t\t\t\t\tlabelWidth: 100,\n\t\t\t\t\t\t\t\ton: {\n\t\t\t\t\t\t\t\t\tonChange: function (newValue, oldValue) {\n\t\t\t\t\t\t\t\t\t\t_logic.permissionRenameRole(newValue, oldValue);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ height: App.config.smallSpacer },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"description\",\n\t\t\t\t\t\t\t\tview: \"textarea\",\n\t\t\t\t\t\t\t\t// label: labels.common.formDescription,\n\t\t\t\t\t\t\t\tlabel: \"Description\",\n\t\t\t\t\t\t\t\tlabelAlign: \"left\",\n\t\t\t\t\t\t\t\tlabelWidth: 100,\n\t\t\t\t\t\t\t\tplaceholder: labels.component.placeholderDescription,\n\t\t\t\t\t\t\t\theight: 100\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ height: App.config.smallSpacer },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tview: \"toolbar\",\n\t\t\t\t\t\t\t\tcss: \"ab-toolbar-submenu\",\n\t\t\t\t\t\t\t\tcols: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttemplate: labels.component.permissionHeader,\n\t\t\t\t\t\t\t\t\t\ttype: 'header',\n\t\t\t\t\t\t\t\t\t\tborderless: true\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tview: \"toggle\",\n\t\t\t\t\t\t\t\t\t\tid: ids.appFormCreateRoleButton,\n\t\t\t\t\t\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t\t\t\t\t\talign: \"right\",\n\t\t\t\t\t\t\t\t\t\tautowidth: true,\n\t\t\t\t\t\t\t\t\t\tcss: \"ab-standard-button\",\n\t\t\t\t\t\t\t\t\t\toffIcon: \"square-o\",\n\t\t\t\t\t\t\t\t\t\tonIcon: \"check-square-o\",\n\t\t\t\t\t\t\t\t\t\tlabel: labels.component.createNewRole,\n\t\t\t\t\t\t\t\t\t\ton: {\n\t\t\t\t\t\t\t\t\t\t\tonItemClick: function (id, e) {\n\t\t\t\t\t\t\t\t\t\t\t\t_logic.createRoleButtonClick();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"permissions\",\n\t\t\t\t\t\t\t\tid: ids.appFormPermissionList,\n\t\t\t\t\t\t\t\tview: \"list\",\n\t\t\t\t\t\t\t\t//height: 130,\n\t\t\t\t\t\t\t\tautowidth: true,\n\t\t\t\t\t\t\t\tautoheight: true,\n\t\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\t\tcss: \"ab-app-form-permission\",\n\t\t\t\t\t\t\t\ttemplate: \"{common.markCheckbox()} #name#\",\n\t\t\t\t\t\t\t\ttype:{\n\t\t\t\t\t\t\t\t\tmarkCheckbox:function(obj ){\n\t\t\t\t\t\t\t\t\t\treturn \"<span class='check webix_icon fa-\"+(obj.markCheckbox?\"check-\":\"\")+\"square-o'></span>\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ton: {\n\t\t\t\t\t\t\t\t\tonItemClick: function (id, e, node) {\n\t\t\t\t\t\t\t\t\t\t_logic.permissionClick(id, e, node);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ height: App.config.smallSpacer },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmargin: 5,\n\t\t\t\t\t\t\t\tcols: [\n\t\t\t\t\t\t\t\t\t{ fillspace: true },\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tview: \"button\",\n\t\t\t\t\t\t\t\t\t\tvalue: labels.common.cancel,\n\t\t\t\t\t\t\t\t\t\twidth: App.config.buttonWidthSmall,\n\t\t\t\t\t\t\t\t\t\tcss: \"ab-cancel-button\",\n\t\t\t\t\t\t\t\t\t\tclick: function () {\n\t\t\t\t\t\t\t\t\t\t\t_logic.cancel();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid: ids.saveButton,\n\t\t\t\t\t\t\t\t\t\tview: \"button\",\n\t\t\t\t\t\t\t\t\t\tlabel: labels.common.save,\n\t\t\t\t\t\t\t\t\t\ttype: \"form\",\n\t\t\t\t\t\t\t\t\t\twidth: App.config.buttonWidthSmall,\n\t\t\t\t\t\t\t\t\t\tclick: function () {\n\t\t\t\t\t\t\t\t\t\t\t_logic.buttonSaveClick();\n\t\t\t\t\t\t\t\t\t\t} // end click()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tmaxHeight: App.config.appListSpacerRowHeight,\n\t\t\t\t\t\thidden: App.config.hideMobile\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tmaxWidth: App.config.appListSpacerColMaxWidth,\n\t\t\t\tminWidth: App.config.appListSpacerColMinWidth,\n\t\t\t\twidth: App.config.appListSpacerColMaxWidth\n\t\t\t}\n\t\t]\n\t};\n\n\tconst FormFields = ['label', 'description'];\n\n\n\n\tvar _init = function() {\n\t\twebix.extend($$(ids.form), webix.ProgressBar);\n\t\twebix.extend($$(ids.appFormPermissionList), webix.ProgressBar);\n\t}\n\n\n\n\tvar _logic = {\n\n\n\t\t/**\n\t\t * @function applicationCreate\n\t\t *\n\t\t * Step through the process of creating an ABApplication with the\n\t\t * current state of the Form.\n\t\t *\n\t\t * @param {obj} values \tcurrent value hash of the form values.\n\t\t */\n\t\tapplicationCreate: function(values) {\n\n\t\t\tvar newApp = {\n\t\t\t\tname: values.label,\n\t\t\t\tlabel: values.label,\n\t\t\t\tdescription: values.description\n\t\t\t};\n\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (cb) {\n\t\t\t\t\t// Create application data\n\t\t\t\t\tABApplication.create(newApp)\n\t\t\t\t\t\t.then(function (result) {\n\t\t\t\t\t\t\tcb(null, result);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(cb);\n\t\t\t\t},\n\t\t\t\tfunction (createdApp, cb) {\n\t\t\t\t\t_logic.permissionSave(createdApp)\n\t\t\t\t\t\t.then(function () { cb(); })\n\t\t\t\t\t\t.catch(cb)\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\t_logic.formReady();\n\n\t\t\t\tif (err) {\n\t\t\t\t\twebix.message({\n\t\t\t\t\t\ttype: \"error\",\n\t\t\t\t\t\ttext: labels.common.createErrorMessage.replace('{0}', values.label)\n\t\t\t\t\t});\n\n\t\t\t\t\tAD.error.log('App Builder : Error create application data', { error: err });\n\n\t\t\t\t\t_logic.buttonSaveEnable();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tApp.actions.transitionApplicationList();\n\n\t\t\t\twebix.message({\n\t\t\t\t\ttype: \"success\",\n\t\t\t\t\ttext: labels.common.createSuccessMessage.replace('{0}', values.label)\n\t\t\t\t});\n\n\t\t\t\t_logic.buttonSaveEnable();\n\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * @function applicationUpdate\n\t\t *\n\t\t * Step through the process of updating an ABApplication with the\n\t\t * current state of the Form.\n\t\t *\n\t\t * @param {ABApplication} application\n\t\t */\n\t\tapplicationUpdate: function(Application) {\n\t\t\tvar values = _logic.formValues();\n\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\t_logic.permissionSave(Application)\n\t\t\t\t\t\t.then(function (result) { next(null, result); })\n\t\t\t\t\t\t.catch(next);\n\t\t\t\t},\n\t\t\t\tfunction (app_role, next) {\n\t\t\t\t\t// Update application data\n\t\t\t\t\tApplication.label = values.label;\n\t\t\t\t\tApplication.description = values.description;\n\n\t\t\t\t\tif (app_role && app_role.id)\n\t\t\t\t\t\tApplication.role = app_role.id;\n\t\t\t\t\telse\n\t\t\t\t\t\tApplication.role = null;\n\n\t\t\t\t\tApplication.save()\n\t\t\t\t\t\t.then(function () {\n\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(next)\n\n\t\t\t\t}\n\t\t\t], function (err) {\n\n\t\t\t\t_logic.formReady();\n\t\t\t\t_logic.buttonSaveEnable();\n\t\t\t\tif (err) {\n\t\t\t\t\twebix.message({\n\t\t\t\t\t\ttype: \"error\",\n\t\t\t\t\t\ttext: labels.common.updateErrorMessage.replace('{0}', Application.label)\n\t\t\t\t\t});\n\t\t\t\t\tAD.error.log('App Builder : Error update application data', { error: err });\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tApp.actions.transitionApplicationList();\n\n\t\t\t\twebix.message({\n\t\t\t\t\ttype: \"success\",\n\t\t\t\t\ttext: labels.common.updateSucessMessage.replace('{0}', Application.label)\n\t\t\t\t});\n\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * @function buttonSaveClick\n\t\t *\n\t\t * Process the user clicking on the [Save] button.\n\t\t */\n\t\tbuttonSaveClick: function() {\n\n\t\t\t_logic.buttonSaveDisable();\n\t\t\t_logic.formBusy();\n\n\t\t\t// if there is a selected Application, then this is an UPDATE\n\t\t\tvar updateApp = App.actions.getSelectedApplication();\n\t\t\tif (updateApp) { \n\n\t\t\t\tif (_logic.formValidate('update')) {\n\n\t\t\t\t\t_logic.applicationUpdate(updateApp);\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else { \n\n\t\t\t\t// else this is a Create\n\t\t\t\tif (_logic.formValidate('add')) {\n\n\t\t\t\t\t_logic.applicationCreate(_logic.formValues());\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\t/**\n\t\t * @function buttonSaveDisable\n\t\t *\n\t\t * Disable the save button.\n\t\t */\n\t\tbuttonSaveDisable:function() {\n\t\t\t$$(ids.saveButton).disable();\n\t\t},\n\n\n\t\t/**\n\t\t * @function buttonSaveEnable\n\t\t *\n\t\t * Re-enable the save button.\n\t\t */\n\t\tbuttonSaveEnable:function() {\n\t\t\t$$(ids.saveButton).enable();\n\t\t},\n\n\n\t\t/**\n\t\t * @function cancel\n\t\t *\n\t\t * Cancel the current Form Operation and return us to the AppList.\n\t\t */\n\t\tcancel: function() {\n\n\t\t\t_logic.formReset();\n\t\t\tApp.actions.transitionApplicationList();\n\t\t},\n\n\n\t\t/**\n\t\t * @function createRoleButtonClick\n\t\t *\n\t\t * The user clicked the [Create Role] button.  Update the UI and add a\n\t\t * unique Application permission to our list.\n\t\t */\n\t\tcreateRoleButtonClick: function() {\n\n\t\t\tif ($$(ids.appFormCreateRoleButton).getValue()) {\n\n// TODO: if not called from anywhere else, then move the name gathering into .permissionAddNew()\n\t\t\t\t// Add new app role\n\t\t\t\tvar appName = $$(ids.form).elements[\"label\"].getValue();\n\t\t\t\t_logic.permissionAddNew(appName);\n\t\t\t}\n\t\t\telse { \n\t\t\t\t// Remove app role\n\t\t\t\t_logic.permissionRemoveNew();\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * @function formBusy\n\t\t *\n\t\t * Show the progress indicator to indicate a Form operation is in\n\t\t * progress.\n\t\t */\n\t\tformBusy: function() {\n\n\t\t\t$$(ids.form).showProgress({ type: 'icon' });\n\t\t},\n\n\n\t\t/**\n\t\t * @function formPopulate()\n\t\t *\n\t\t * populate the form values from the given ABApplication\n\t\t *\n\t\t * @param {ABApplication} application  instance of the ABApplication\n\t\t */\n\t\tformPopulate: function(application) {\n\n\t\t\tvar Form = $$(ids.form);\n\n\t\t\t// Populate data to form\n\t\t\tif (application) {\n\t\t\t\tFormFields.forEach(function(f){\n\t\t\t\t\tif (Form.elements[f]) {\n\t\t\t\t\t\tForm.elements[f].setValue(application[f]);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\t// _logic.permissionPopulate(application);\n\n\t\t},\n\n\n\t\t/**\n\t\t * @function formReady()\n\t\t *\n\t\t * remove the busy indicator from the form.\n\t\t */\n\t\tformReady: function() {\n\t\t\t$$(ids.form).hideProgress();\n\t\t},\n\n\n\t\t/**\n\t\t * @function formReset()\n\t\t *\n\t\t * return the form to an empty state.\n\t\t */\n\t\tformReset: function() {\n\n\t\t\t$$(ids.form).clear();\n\t\t\t$$(ids.form).clearValidation();\n\t\t\t// $$(self.webixUiids.appFormPermissionList).clearValidation();\n\t\t\t// $$(self.webixUiids.appFormPermissionList).clearAll();\n\t\t\t// $$(self.webixUiids.appFormCreateRoleButton).setValue(0);\n\t\t},\n\n\n\t\t/**\n\t\t * @function formValidate()\n\t\t *\n\t\t * validate the form values.\n\t\t *\n\t\t * @return {bool}  true if all values pass validation.  false otherwise.\n\t\t */\n\t\tformValidate:function(op) {\n\t\t\t// op : ['add', 'update', 'destroy']\n\n\t\t\tvar Form = $$(ids.form);\n\t\t\tif (!Form.validate()) {\n\t\t\t\t// TODO : Error message\n\n\t\t\t\t_logic.buttonSaveEnable();\n\t\t\t\treturn false;\n\t\t\t}\n\n\n\t\t\tvar errors = ABApplication.isValid(op, Form.getValues());\n\t\t\tif (OP.Form.isValidationError(errors, Form)) {\n\t\t\t\t_logic.formReady();\n\t\t\t\t_logic.buttonSaveEnable();\n\t\t\t\treturn false;\n\t\t\t}\n\n\n///// TODO: \n// Implement common Form Input Validations\n// convert this to:  \n// app = ABApplication.newApplication(Form.getValues())\n// errors = app.inValid()\n// if (OP.Form.isValidationError(errors, Form)) { }\n\n\n\t\t\t// var appName = $$(ids.form).elements['label'].getValue(),\n\t\t\t// \tappDescription = $$(ids.form).elements['description'].getValue();\n\n\t\t\t// if (!inputValidator.validate(appName)) {\n\t\t\t// \t_logic.buttonSaveEnable();\n\t\t\t// \treturn false;\n\t\t\t// }\n\n\t\t\t// // Prevent duplicate application name\n\t\t\t// if (self.data.filter(function (app) { return app.name.trim().toLowerCase() == appName.trim().replace(/ /g, '_').toLowerCase(); }).length > 0) {\n\t\t\t// \tOP.Dialog.Alert({\n\t\t\t// \t\ttitle: labels.component.invalidName,\n\t\t\t// \t\ttext: labels.component.duplicateName.replace(\"#appName#\", appName),\n\t\t\t// \t\tok: labels.common.ok\n\t\t\t// \t});\n\n\t\t\t// \t$$(ids.form).elements['label'].focus();\n\t\t\t// \t_logic.buttonSaveEnable();\n\t\t\t// \treturn false;\n\t\t\t// }\n\n\t\t\treturn true;\n\t\t},\n\n\n\t\t/**\n\t\t * @function formValues()\n\t\t *\n\t\t * return an object hash of name:value pairs of the current Form.\n\t\t *\n\t\t * @return {obj}\n\t\t */\n\t\tformValues: function() {\n\t\t\t// return the current values of the Form elements.\n\t\t\treturn $$(ids.form).getValues();\n\n\t\t},\n\n\n\t\t/**\n\t\t * @function permissionAddNew\n\t\t *\n\t\t * create a new permission entry based upon the current Application.label\n\t\t *\n\t\t * This not only adds it to our Permission List, but also selects it.\n\t\t *\n\t\t * @param {string} appName\tThe Application.label of the current Application\n\t\t */\n\t\tpermissionAddNew: function(appName) {\n\n\t\t\t// add new role entry\n\t\t\t$$(ids.appFormPermissionList).add({\n\t\t\t\tid: 'newRole',\n\t\t\t\tname: _logic.permissionName(appName),\n\t\t\t\tisApplicationRole: true,\n\t\t\t\tmarkCheckbox: 1\n\t\t\t}, 0);\n\n\n\t\t\t// Select new role\n\t\t\tvar selectedIds = $$(ids.appFormPermissionList).getSelectedId(true);\n\t\t\tselectedIds.push('newRole');\n\t\t\t$$(ids.appFormPermissionList).select(selectedIds);\n\n\t\t},\n\n\n\t\t/**\n\t\t * @function permissionClick\n\t\t *\n\t\t * Process when a permission entry in the list is clicked.\n\t\t */\n\t\tpermissionClick: function (id, e, node) {\n\t\t\t\n\n\t\t\tvar List = $$(ids.appFormPermissionList);\n\n\t\t\tvar item = List.getItem(id); \n\n\t\t\tif (List.getItem(id).isApplicationRole) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (List.isSelected(id)) {\n\t\t\t\titem.markCheckbox = 0; \n\t\t\t\tList.unselect(id);\n\t\t\t}\n\t\t\telse {\n\t\t\t\titem.markCheckbox = 1; \n\t\t\t\tvar selectedIds = List.getSelectedId();\n\n\t\t\t\tif (typeof selectedIds === 'string' || !isNaN(selectedIds)) {\n\t\t\t\t\tif (selectedIds)\n\t\t\t\t\t\tselectedIds = [selectedIds];\n\t\t\t\t\telse\n\t\t\t\t\t\tselectedIds = [];\n\t\t\t\t}\n\n\t\t\t\tselectedIds.push(id);\n\n\t\t\t\tList.select(selectedIds);\n\n\t\t\t\tList.updateItem(id, item); \n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * @function permissionName\n\t\t *\n\t\t * returns a formatted name for a Permission Role based upon the provided Application.label\n\t\t *\n\t\t * @param {string} appName\tthe current value of the Application.label\n\t\t * @return {string} \tPermission Role Name.\n\t\t */\n\t\tpermissionName: function(appName) {\n\t\t\treturn appName  + \" Application Role\";\n\t\t},\n\n\n\t\t/**\n\t\t * @function permissionPopulate\n\t\t *\n\t\t * fill out the Permission list\n\t\t *\n\t\t * @param {ABApplication} application\tthe current ABApplication we are editing\n\t\t */\n\t\tpermissionPopulate: function(application) {\n\n\t\t\tvar PermForm = $$(ids.appFormPermissionList);\n\t\t\t// Get user's roles\n\t\t\tPermForm.showProgress({ type: 'icon' });\n\t\t\tasync.waterfall([\n\t\t\t\tfunction (next) {\n\t\t\t\t\tAD.comm.service.get({ url: '/app_builder/user/roles' })\n\t\t\t\t\t\t.fail(function (err) { next(err); })\n\t\t\t\t\t\t.done(function (roles) {\n\n\t\t\t\t\t\t\t// scan the roles and determine if any of them have been created\n\t\t\t\t\t\t\t// after the current Application.name:\n\t\t\t\t\t\t\tvar parsedRoles = roles.map((r) => {\n\t\t\t\t\t\t\t\tif (application) {\n\t\t\t\t\t\t\t\t\tif (r.name == _logic.permissionName(application.name.split('_').join(' '))) {\n\t\t\t\t\t\t\t\t\t\tr.isApplicationRole = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn r;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tnext(null, parsedRoles);\n\t\t\t\t\t\t});\n\t\t\t\t},\n\n\t\t\t\tfunction (available_roles, next) {\n\t\t\t\t\tif (application && application.id) {\n\t\t\t\t\t\tapplication.getPermissions()\n\t\t\t\t\t\t\t.then(function (selected_role_ids) {\n\t\t\t\t\t\t\t\tnext(null, available_roles, selected_role_ids);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function (err) { next(err); });\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnext(null, available_roles, []);\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tfunction (available_roles, selected_role_ids, next) {\n\n\t\t\t\t\t// mark the role(s) in available_roles that is tied\n\t\t\t\t\t// this application:\n\t\t\t\t\tif (application && application.role) {\n\t\t\t\t\t\tavailable_roles.forEach(function (r) {\n\t\t\t\t\t\t\tif (r.id == (application.role.id || application.role)) {\n\t\t\t\t\t\t\t\tr.isApplicationRole = true;\n\t\t\t\t\t\t\t\tr.markCheckbox = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Sort permission list\n\t\t\t\t\tavailable_roles.sort(function (a, b) {\n\t\t\t\t\t\treturn (a.isApplicationRole === b.isApplicationRole) ? 0 : a.isApplicationRole ? -1 : 1;\n\t\t\t\t\t});\n\n\t\t\t\t\t// reload list from our available_roles\n\t\t\t\t\tPermForm.clearAll();\n\t\t\t\t\tPermForm.parse(available_roles);\n\n\t\t\t\t\t// mark which roles have already been selected\n\t\t\t\t\tif (selected_role_ids && selected_role_ids.length > 0) {\n\t\t\t\t\t\t// Select permissions\n\t\t\t\t\t\tPermForm.select(selected_role_ids);\n\t\t\t\t\t\tavailable_roles.forEach(function (r) {\n\t\t\t\t\t\t\tif (selected_role_ids.indexOf(r.id) > -1) {\n\t\t\t\t\t\t\t\tvar item = $$(ids.appFormPermissionList).getItem(r.id);\n\t\t\t\t\t\t\t\titem.markCheckbox = 1;\n\t\t\t\t\t\t\t\t$$(ids.appFormPermissionList).updateItem(r.id, item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Select create role application button\n\t\t\t\t\t\tvar markCreateButton = available_roles.filter(function (r) { return r.isApplicationRole; }).length > 0 ? 1 : 0;\n\t\t\t\t\t\t$$(ids.appFormCreateRoleButton).setValue(markCreateButton);\n\t\t\t\t\t}\n\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t], function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\twebix.message(err.message);\n\t\t\t\t}\n\n\t\t\t\tPermForm.hideProgress();\n\n\t\t\t});\n\n\t\t\t// return appName  + \" Application Role\";\n\t\t},\n\n\n\t\t/**\n\t\t * @function permissionRemoveNew()\n\t\t *\n\t\t * Intended to be called when the USER unselects the option to create a Permission\n\t\t * for this Application.\n\t\t *\n\t\t * We remove any Permission Role created for this Application.\n\t\t */\n\t\tpermissionRemoveNew: function() {\n\n\t\t\t// find any roles that are put here from our application form:\n\t\t\tvar appRoles = $$(ids.appFormPermissionList).find(function (perm) { return perm.isApplicationRole; });\n\n\t\t\t// remove them:\n\t\t\tappRoles.forEach(function (r) {\n\t\t\t\t$$(ids.appFormPermissionList).remove(r.id);\n\t\t\t});\n\t\t},\n\n\n\t\t/*\n\t\t * permissionRenameRole\n\t\t *\n\t\t * When the name of the Appliction changes, change the Name of the Permission as well.\n\t\t *\n\t\t * @param {string} newValue  the current name of the application\n\t\t * @param {string} oldValue  the previous name of the application\n\t\t */\n\t\tpermissionRenameRole:function( newValue, oldValue) {\n\n\t\t\tvar editRole = $$(ids.appFormPermissionList).find(function (d) { return d.name === _logic.permissionName(oldValue); });\n\n\t\t\teditRole.forEach(function (r) {\n\t\t\t\tvar editItem = $$(ids.appFormPermissionList).getItem(r.id);\n\t\t\t\teditItem.name = _logic.permissionName(newValue);\n\n\t\t\t\t$$(ids.appFormPermissionList).updateItem(editItem.id, editItem);\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * @function permissionSave()\n\t\t *\n\t\t * step through saving the current Permission Settings and associating\n\t\t * them with the current Application.\n\t\t *\n\t\t * @param {ABApplication} App  \tThe current Application we are working with.\n\t\t * @return {Promise}\t\t\t.resolve( {Permission} ) if one is created for this App\n\t\t */\n\t\tpermissionSave: function (app) {\n//// REFACTOR:\n// this step implies that ab_choose_form understands the intracies of how\n// ABApplication and Permissions work.\n\t\t\treturn new Promise(\n\t\t\t\t(resolve, reject) => {\n\n\t\t\t\t\tvar saveRoleTasks = [],\n\t\t\t\t\t\tappRole = null;\n\n\t\t\t\t\t//// Process the option to create a newRole For this Application:\n\n\t\t\t\t\t// if the button is set\n\t\t\t\t\tif ($$(ids.appFormCreateRoleButton).getValue()) {\n\n\t\t\t\t\t\t// check to see if we already have a permission that isApplicationRole\n\t\t\t\t\t\tvar selectedPerms = $$(ids.appFormPermissionList).getSelectedItem(true);\n\t\t\t\t\t\tselectedPerms = selectedPerms.filter((perm) => { return perm.isApplicationRole; })\n\n\t\t\t\t\t\t// if not, then create one:\n\t\t\t\t\t\tif (selectedPerms.length == 0) {\n\n\t\t\t\t\t\t\t// Create new role for application\n\t\t\t\t\t\t\tsaveRoleTasks.push(function (cb) {\n\t\t\t\t\t\t\t\tapp.createPermission()\n\t\t\t\t\t\t\t\t\t.then(function (result) {\n\n\t\t\t\t\t\t\t\t\t\t// remember the Role we just created\n\t\t\t\t\t\t\t\t\t\tappRole = result;\n\t\t\t\t\t\t\t\t\t\tcb();\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.catch(cb)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Delete any existing application roles\n\t\t\t\t\t\tsaveRoleTasks.push(function (cb) {\n\t\t\t\t\t\t\tapp.deletePermission()\n\t\t\t\t\t\t\t\t.then(function () { cb(); })\n\t\t\t\t\t\t\t\t.catch(cb)\n\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t//// Now process any additional roles:\n\n\t\t\t\t\t// get array of selected permissions that are not our newRole\n\t\t\t\t\tvar permItems = $$(ids.appFormPermissionList).getSelectedItem(true);\n\t\t\t\t\tpermItems = permItems.filter( function (item) { return item.id !== 'newRole'; }); // Remove new role item\n\n\n\t\t\t\t\t// Make sure Application is linked to selected permission items:\n\t\t\t\t\tsaveRoleTasks.push(function (cb) {\n\n\t\t\t\t\t\t// ok, so we removed the 'newRole' entry, but we might\n\t\t\t\t\t\t// have created an entry for it earlier, if so, add in\n\t\t\t\t\t\t// the created one here:\n\t\t\t\t\t\tif ($$(ids.appFormCreateRoleButton).getValue() && appRole) {\n\n\t\t\t\t\t\t\t// make sure it isn't already in there:\n\t\t\t\t\t\t\tvar appRoleItem = permItems.filter( function (item) { return item.id == appRole.id; });\n\t\t\t\t\t\t\tif (!appRoleItem || appRoleItem.length < 1) {\n\n\t\t\t\t\t\t\t\t// if not, add it :\n\t\t\t\t\t\t\t\tpermItems.push({\n\t\t\t\t\t\t\t\t\tid: appRole.id,\n\t\t\t\t\t\t\t\t\tisApplicationRole: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// Assign Role Permissions\n\t\t\t\t\t\tapp.assignPermissions(permItems)\n\t\t\t\t\t\t\t.then(function () { cb(); })\n\t\t\t\t\t\t\t.catch(cb)\n\t\t\t\t\t});\n\n\n\n\t\t\t\t\tasync.series(saveRoleTasks, function(err, results) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// we return the instance of the newly created Permission.\n\t\t\t\t\t\t\tresolve(appRole);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\n\n//// REFACTOR QUESTION:\n// why are we updating the app.permissions with this data structure?\n// where is this data structure being used?\n// Earlier we are using another structure (permissionAddNew()) ... how is that related to this?\n\n\t\t\t\t\t\t\t// // Final task\n\t\t\t\t\t\t\t// saveRoleTasks.push(function (cb) {\n\t\t\t\t\t\t\t// \t// Update store app data\n\t\t\t\t\t\t\t// \tvar applicationData = self.data.filter(function (d) { return d.id == app.id; });\n\t\t\t\t\t\t\t// \tapplicationData.forEach(function (app) {\n\t\t\t\t\t\t\t// \t\tapp.attr('permissions', $.map(permItems, function (item) {\n\t\t\t\t\t\t\t// \t\t\treturn {\n\t\t\t\t\t\t\t// \t\t\t\tapplication: app.id,\n\t\t\t\t\t\t\t// \t\t\t\tpermission: item.id,\n\t\t\t\t\t\t\t// \t\t\t\tisApplicationRole: item.isApplicationRole\n\t\t\t\t\t\t\t// \t\t\t}\n\t\t\t\t\t\t\t// \t\t}));\n\t\t\t\t\t\t\t// \t});\n\n\t\t\t\t\t\t\t// \tq.resolve(appRole);\n\t\t\t\t\t\t\t// \tcb();\n\t\t\t\t\t\t\t// })\n\n\t\t},\n\n\n\t\t/**\n\t\t * @function show()\n\t\t *\n\t\t * Show the Form Component.\n\t\t */\n\t\tshow:function() {\n\n\t\t\t$$(ids.component).show();\n\t\t}\n\t}\n\n\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\n\t\t// initiate a request to create a new Application\n\t\ttransitionApplicationForm:function(application){\n\t\t\t\n\t\t\t// if no application is given, then this should be a [create] operation,\n\n\t\t\t// so clear our AppList\n\t\t\tif ('undefined' == typeof application) {\n\t\t\t\tApp.actions.unselectApplication();\n\t\t\t}\n\n\t\t\t// now prepare our form:\n\t\t\t_logic.formReset();\n\t\t\tif (application) {\n\t\t\t\t// populate Form here:\n\t\t\t\t_logic.formPopulate(application);\n\t\t\t}\n\t\t\t_logic.permissionPopulate(application);\n\t\t\t_logic.show();\n\t\t}\n\n\t}\n\n\n\treturn {\n\t\tui: _ui,\n\t\tinit: _init,\n\t\tactions:_actions,\n\n\t\t_logic: _logic\n\t}\n})\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab_choose_form.js","\n/*\n * AB Choose List\n *\n * Display a list of Applications for the user to select.\n *\n */\nimport ABApplication from \"../classes/ABApplication\"\nimport \"./ab_choose_list_menu\"\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\n\nvar labels = {\n\n\tcomponent: {\n\t\ttitle: L('ab.application.application', '*Application'),\n\n\t\tcreateNew: L('ab.application.createNew', '*Add new application'),\n\t\tnoApplication: L('ab.application.noApplication', \"*There is no application data\")\t\t\t\t\t\n\t}\n}\n\n\nvar idBase = 'ab_choose_list';\nOP.Component.extend(idBase, function(App) {\n\n\tlabels.common = App.labels;\n\n\tvar ids = {\n\t\tcomponent:App.unique(idBase + '_component'),\n\n\t\tuploader:App.unique(idBase + '_uploader'),\n\t\tlist:App.unique(idBase + '_list'),\n\t\ttoolBar:App.unique(idBase + '_toolbar'),\n\t\tbuttonCreateNewApplication: App.unique(idBase + '_buttonNewApp')\n\t}\n\n\tvar MenuComponent = OP.Component['ab_choose_list_menu'](App);\n\tvar PopupMenu = webix.ui(MenuComponent.ui);\n\tPopupMenu.hide();\n\n\tvar _ui = {\n\n\t\tid: ids.component,\n\t\tresponsive:\"hide\",\n\n\t\tcols: [\n\t\t\t{\n\t\t\t\tmaxWidth: App.config.appListSpacerColMaxWidth,\n\t\t\t\tminWidth: App.config.appListSpacerColMinWidth,\n\t\t\t\twidth: App.config.appListSpacerColMaxWidth\n\t\t\t},\n\t\t\t{\n\t\t\t\tresponsiveCell:false,\n\t\t\t\trows: [\n\t\t\t\t\t{\n\t\t\t\t\t\tmaxHeight: App.config.appListSpacerRowHeight,\n\t\t\t\t\t\thidden: App.config.hideMobile\n\t\t\t\t\t},\n\t\t\t\t\t//\n\t\t\t\t\t// ToolBar\n\t\t\t\t\t//\n\t\t\t\t\t{\n\t\t\t\t\t\tview: \"toolbar\",\n\t\t\t\t\t\tid: ids.toolBar,\n\t\t\t\t\t\tcols: [\n\t\t\t\t\t\t\t{ view: \"label\", label:labels.component.title, fillspace: true },\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: ids.buttonCreateNewApplication,\n\t\t\t\t\t\t\t\tview: \"button\",\n\t\t\t\t\t\t\t\tlabel: labels.component.createNew,\n\t\t\t\t\t\t\t\tautowidth: true,\n\t\t\t\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t\t\t\ticon: \"plus\",\n\t\t\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\t\t\t// Inform our Chooser we have a request to create an Application:\n\t\t\t\t\t\t\t\t\tApp.actions.transitionApplicationForm( /* leave empty for a create */ );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tview: \"uploader\",\n\t\t\t\t\t\t\t\tid: ids.uploader,\n\t\t\t\t\t\t\t\tlabel: labels.common.import,\n\t\t\t\t\t\t\t\tautowidth: true,\n\t\t\t\t\t\t\t\tupload: '/app_builder/appJSON',\n\t\t\t\t\t\t\t\tmultiple: false,\n\t\t\t\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t\t\t\ticon: \"upload\",\n\t\t\t\t\t\t\t\tautosend: true,\n\t\t\t\t\t\t\t\ton: {\n\t\t\t\t\t\t\t\t\tonAfterFileAdd: function () {\n\t\t\t\t\t\t\t\t\t\t_logic.onAfterFileAdd();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tonFileUpload: function (item, response) {\n\t\t\t\t\t\t\t\t\t\t_logic.onFileUpload(item, response);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tonFileUploadError: function (details, response) {\n\t\t\t\t\t\t\t\t\t\t_logic.onFileUploadError(details, response);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\n\n\t\t\t\t\t//\n\t\t\t\t\t// The List of Applications\n\t\t\t\t\t//\n\t\t\t\t\t{\n\t\t\t\t\t\tid: ids.list,\n\t\t\t\t\t\tview: \"list\",\n\t\t\t\t\t\tcss: 'ab-app-select-list',\n\t\t\t\t\t\ttemplate: function (obj, common) {\n\t\t\t\t\t\t\treturn _logic.templateListItem(obj, common);\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\theight: App.config.appListRowHeight, // Defines item height\n\t\t\t\t\t\t\ticonGear: \"<span class='webix_icon fa-cog'></span>\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tselect: false,\n\t\t\t\t\t\tonClick: {\n\t\t\t\t\t\t\t\"ab-app-list-item\": function (ev, id, trg) {\n\t\t\t\t\t\t\t\treturn _logic.onClickListItem(ev, id, trg);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"ab-app-list-edit\": function (ev, id, trg) {\n\t\t\t\t\t\t\t\treturn _logic.onClickListEdit(ev, id, trg);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tmaxHeight: App.config.appListSpacerRowHeight,\n\t\t\t\t\t\thidden: App.config.hideMobile\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tmaxWidth: App.config.appListSpacerColMaxWidth,\n\t\t\t\tminWidth: App.config.appListSpacerColMinWidth,\n\t\t\t\twidth: App.config.appListSpacerColMaxWidth\n \t\t\t}\n\t\t]\n\t}\n\n\n\n\tvar _data={};\n\n\n\tvar _logic = {\n\n\n\t\t/**\n\t\t * @function busy\n\t\t *\n\t\t * show a busy indicator on our App List\n\t\t */\n\t\tbusy: function() {\n\t\t\tif ($$(ids.list).showProgress)\n\t\t\t\t$$(ids.list).showProgress({ icon: 'cursor' });\n\t\t},\n\n\n\t\t/**\n\t\t * @function loadData\n\t\t *\n\t\t * Load all the ABApplications and display them in our App List\n\t\t */\n\t\tloadData:function(){\n\n\t\t\t// Get applications data from the server\n\t\t\t_logic.busy();\n\t\t\tABApplication.allApplications()\n\t\t\t\t.then(function (data) {\n\n\t\t\t\t\t_logic.ready();\n\n\t\t\t\t\t// make sure our overlay is updated when items are added/removed\n\t\t\t\t\t// from our data list.\n\t\t\t\t\tdata.attachEvent(\"onAfterAdd\", function(id, index){\n\t\t\t\t\t    _logic.refreshOverlay();\n\t\t\t\t\t});\n\n\t\t\t\t\tdata.attachEvent(\"onAfterDelete\", function(id){\n\t\t\t\t\t\t_logic.refreshOverlay();\n\t\t\t\t\t})\n\n\t\t\t\t\t_data.listApplications = data;\n\n\t\t\t\t\t_logic.refreshList();\n\t\t\t\t})\n\t\t\t\t.catch(function (err) {\n\t\t\t\t\t_logic.ready();\n\t\t\t\t\twebix.message({\n\t\t\t\t\t\ttype: \"error\",\n\t\t\t\t\t\ttext: err\n\t\t\t\t\t});\n\t\t\t\t\tAD.error.log('App Builder : Error loading application data', { error: err });\n\t\t\t\t})\n\t\t},\n\n\n\t\t/**\n\t\t * @function onAfterFileAdd\n\t\t *\n\t\t * UI updates for when a file upload is initiated\n\t\t */\n\t\tonAfterFileAdd: function () {\n\t\t\t$$(ids.uploader).disable();\n\t\t\t_logic.busy();\n\t\t},\n\n\n\t\t/**\n\t\t * @function onClickListEdit\n\t\t *\n\t\t * UI updates for when the edit gear is clicked\n\t\t */\n\t\tonClickListEdit: function(ev, id, trg) {\n\n\t\t\t// Show menu\n\t\t\tPopupMenu.show(trg);\n\t\t\t$$(ids.list).select(id);\n\n\t\t\treturn false; // block default behavior\n\t\t},\n\n\n\t\t/**\n\t\t * @function onClickListItem\n\t\t *\n\t\t * An item in the list is selected. So update the workspace with that \n\t\t * object.\n\t\t */\n\t\tonClickListItem: function(ev, id, trg) {\n\t\t\t\t\t\t\t\t\n\t\t\t_logic.busy();\n\n\t\t\t$$(ids.list).select(id);\n\n\t\t\tvar selectedApp = $$(ids.list).getItem(id);\n\n\t\t\tif (selectedApp) {\n\n\t\t\t\t_logic.ready();\n\n\t\t\t\t// We've selected an Application to work with\n\t\t\t\tApp.actions.transitionWorkspace( selectedApp );\n\t\t\t}\n\n\t\t\treturn false; // block default behavior\n\t\t},\n\n\n\t\t/**\n\t\t * @function onFileUpload\n\t\t *\n\t\t * The File Upload process finished.\n\t\t */\n\t\tonFileUpload: function (item, response) {\n\t\t\t_logic.loadData(); // refresh app list\n\t\t\t$$(ids.uploader).enable();\n            _logic.ready();\n        },\n\n\n\t\t/**\n\t\t * @function onFileUploadError\n\t\t *\n\t\t * The File Upload process exited with an error.\n\t\t */\n        onFileUploadError: function(details, response) {\n\n\t\t\tvar errorMessage = 'Error: ' + (response && response.message);\n\t\t\tOP.Dialog.Alert({\n\t\t\t\ttext: errorMessage\n\t\t\t});\n\t\t\t// webix.message({\n\t\t\t// \ttype: 'error',\n\t\t\t// \ttext: errorMessage\n\t\t\t// });\n\t\t\t_logic.loadData(); // refresh app list\n\t\t\t$$(ids.uploader).enable();\n            _logic.ready();\n        },\n\n\n\t\t/**\n\t\t * @function refreshOverlay\n\t\t *\n\t\t * If we have no items in our list, display a Message.\n\t\t */\n\t\trefreshOverlay: function() {\n\t\t\tvar appList = $$(ids.list);\n\n\t\t\tif (!appList.count()) //if no data is available\n\t\t\t\tappList.showOverlay(labels.component.noApplication);\n\t\t\telse\n\t\t\t\tappList.hideOverlay();\n\t\t},\n\n\n\t\t/**\n\t\t * @function ready\n\t\t *\n\t\t * remove the busy indicator on our App List\n\t\t */\n\t\tready: function() {\n\t\t\tif ($$(ids.list).hideProgress)\n\t\t\t\t$$(ids.list).hideProgress();\n\t\t},\n\n\n\t\t/**\n\t\t * @function reset\n\t\t *\n\t\t * Return our App List to an unselected state.\n\t\t */\n\t\treset:function() {\n\t\t\t$$(ids.list).unselectAll();\n\t\t},\n\n\n\t\t/**\n\t\t * @function refreshList\n\t\t *\n\t\t * Apply our list of ABApplication data to our AppList\n\t\t */\n\t\trefreshList: function() {\n\n\t\t\tvar appList = $$(ids.list);\n\n\t\t\tappList.clearAll();\n\t\t\tappList.data.unsync();\n\t\t\tappList.data.sync(_data.listApplications);\n\n\t\t\t_logic.refreshOverlay();\n\n\t\t\tappList.refresh();\n\n\t\t\t_logic.ready();\n\t\t},\n\n\n\t\t/**\n\t\t * @function show\n\t\t *\n\t\t * Trigger our List component to show\n\t\t */\n\t\tshow:function() {\n\t\t\t$$(ids.component).show();\n\t\t},\n\n\n\t\t/**\n\t\t * @function templateListItem\n\t\t *\n\t\t * Defines the template for each row of our AppList.\n\t\t *\n\t\t * @param {obj} obj the current instance of ABApplication for the row.\n\t\t * @param {?} common the webix.common icon data structure\n\t\t * @return {string}\n\t\t */\n\t\ttemplateListItem: function(obj, common) {\n\t\t\treturn _templateListItem\n\t\t\t\t.replace('#label#', obj.label || '')\n\t\t\t\t.replace('#description#', obj.description || '')\n\t\t\t\t.replace('{common.iconGear}', common.iconGear);\n\t\t}\n\t}\n\n\n\n\t/*\n\t * _templateListItem\n\t *\n\t * The AppList Row template definition.\n\t */\n\tvar _templateListItem = [\n\t\t\"<div class='ab-app-list-item'>\",\n\t\t\t\"<div class='ab-app-list-info'>\",\n\t\t\t\t\"<div class='ab-app-list-name'>#label#</div>\",\n\t\t\t\t\"<div class='ab-app-list-description'>#description#</div>\",\n\t\t\t\"</div>\",\n\t\t\t\"<div class='ab-app-list-edit'>\",\n\t\t\t\t\"{common.iconGear}\",\n\t\t\t\"</div>\",\n\t\t\"</div>\"\n\t].join('');\n\n\n\n\t/*\n\t * @function _init\n\t *\n\t * The init() that performs the necessary setup for our AppList chooser.\n\t */\n\tvar _init = function() {\n\t\twebix.extend($$(ids.list), webix.ProgressBar);\n\t\twebix.extend($$(ids.list), webix.OverlayBox);\n\n\t\tMenuComponent.init();\n\n\t\t// start things off by loading the current list of Applications\n\t\t_logic.loadData();\n\t}\n\n\n\n\t/*\n\t * {json} _actions\n\t *\n\t * The exported methods available to other Components.\n\t */\n\tvar _actions = {\n\n\n\t\t/**\n\t\t * @function unselectApplication\n\t\t *\n\t\t * resets the AppList to an unselected state.\n\t\t */\n\t\tunselectApplication:function() {\n\t\t\t_logic.reset();\n\t\t},\n\n\n\t\t/**\n\t\t * @function getSelectedApplication\n\t\t *\n\t\t * returns which ABApplication is currently selected.\n\t\t * @return {ABApplication}  or {null} if nothing selected.\n\t\t */\n\t\tgetSelectedApplication:function() {\n\t\t\treturn $$(ids.list).getSelectedItem();\n\t\t},\n\n\n\t\t/**\n\t\t * @function deleteApplication\n\t\t *\n\t\t * deletes the given ABAppliction.\n\t\t *\n\t\t * NOTE: this assumes the component using this method has already\n\t\t * provided the delete confirmation.\n\t\t *\n\t\t * @param {ABApplication} app  the ABAppliction to delete.\n\t\t */\n\t\tdeleteApplication: function(app) {\n\n\t\t\tif (!app) return;\n\n\t\t\t// Delete application data\n\t\t\t_logic.busy();\n\n\n\t\t\tapp.destroy()\n\t\t\t\t.then(function (result) {\n\t\t\t\t\t_logic.reset();\n\t\t\t\t\t_logic.ready();\n\n\t\t\t\t\twebix.message({\n\t\t\t\t\t\ttype: \"success\",\n\t\t\t\t\t\ttext: labels.common.deleteSuccessMessage.replace('{0}', app.label)\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(function (err) {\n\t\t\t\t\t_logic.reset();\n\t\t\t\t\t_logic.ready()\n\n\t\t\t\t\twebix.message({\n\t\t\t\t\t\ttype: \"error\",\n\t\t\t\t\t\ttext: labels.common.deleteErrorMessage.replace(\"{0}\", app.label)\n\t\t\t\t\t});\n\n\t\t\t\t\tAD.error.log('App Builder : Error delete application data', { error: err });\n\t\t\t\t})\n\t\t},\n\n\n\t\t/**\n\t\t * @function transitionApplicationList\n\t\t *\n\t\t * Trigger our List component to show\n\t\t */\n\t\ttransitionApplicationList:function() {\n\t\t\t$$(ids.component).show();\n\t\t}\n\t}\n\n\n\n\treturn {\n\t\tui: _ui,\n\t\tinit: _init,\n\t\tactions:_actions,\n\n\n\t\t_logic:_logic\t// exposed for Unit Testing\n\t}\n})\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab_choose_list.js","\n/*\n * AB Choose List\n *\n * Display a list of Applications for the user to select.\n *\n */\n\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\n\nvar labels = {\n\n\tcomponent: {\n\t\tmenu : L('ab.application.menu', \"*Application Menu\"),\n\t\tconfirmDeleteTitle : L('ab.application.delete.title', \"*Delete application\"),\n\t\tconfirmDeleteMessage : L('ab.application.delete.message', \"*Do you want to delete <b>{0}</b>?\")\n\t}\n}\n\n\nvar idBase = 'ab_choose_list_menu';\nOP.Component.extend(idBase, function(App) {\n\n\tlabels.common = App.labels;\n\n\n\tvar ids = {\n\t\tmenu:App.unique(idBase + '_menu')\n\t}\n\n\n\n\tvar _ui = {\n\t\tview: \"popup\",\n\t\tid: ids.menu,\n\t\thead: labels.component.menu,\n\t\twidth: 100,\n\t\tbody: {\n\t\t\tview: \"list\",\n\t\t\tborderless: true,\n\t\t\tdata: [\n\t\t\t\t{ command: labels.common.edit, icon: \"fa-pencil-square-o\" },\n\t\t\t\t{ command: labels.common.export, icon: \"fa-download\" },\n\t\t\t\t{ command: labels.common.delete, icon: \"fa-trash\" }\n\t\t\t],\n\t\t\tdatatype: \"json\",\n\n\t\t\ttemplate: \"<i class='fa #icon#' aria-hidden='true'></i> #command#\",\n\t\t\tautoheight: true,\n\t\t\tselect: false,\n\t\t\ton: {\n\t\t\t\t'onItemClick': function (timestamp, e, trg) {\n\t\t\t\t\treturn _logic.onItemClick(timestamp, e, trg);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\tvar _data={};\n\n\n\tvar _init = function() {\n\t\t\t\n\t}\n\n\n\tvar _logic = {\n\n\n\t\t/**\n\t\t * @function onItemClick\n\t\t * process which item in our popup was selected.\n\t\t */\n\t\tonItemClick: function( timestamp, e, trg) {\n\n\t\t\t// hide our popup before we trigger any other possible UI animation: (like .edit)\n\t\t\t// NOTE: if the UI is animating another component, and we do .hide()\n\t\t\t// while it is in progress, the UI will glitch and give the user whiplash.\n\t\t\t$$(ids.menu).hide();\n\n\t\t\tvar selectedApp = App.actions.getSelectedApplication();\n\n\t\t\tswitch (trg.textContent.trim()) {\n\t\t\t\tcase labels.common.edit:\n\t\t\t\t\tApp.actions.transitionApplicationForm(selectedApp);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase labels.common.delete:\n\t\t\t\t\tOP.Dialog.ConfirmDelete({\n\t\t\t\t\t\ttitle: labels.component.confirmDeleteTitle,\n\t\t\t\t\t\ttext: labels.component.confirmDeleteMessage.replace('{0}', selectedApp.label),\n\t\t\t\t\t\tcallback: function (result) {\n\n\t\t\t\t\t\t\tif (!result) return;\n\n\t\t\t\t\t\t\tApp.actions.deleteApplication(selectedApp);\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase labels.common.export:\n\t\t\t\t\t// Download the JSON file to disk\n\t\t\t\t\twindow.location.assign('/app_builder/appJSON/' + selectedApp.id + '?download=1');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\n\n\treturn {\n\t\tui: _ui,\n\t\tinit: _init,\n\n\t\t_logic:_logic\t// exposed for Unit Testing\n\t}\n})\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab_choose_list_menu.js","\n/*\n * ab_work\n *\n * Display the component for working with an ABApplication.\n *\n */\n\nimport ABApplication from \"../classes/ABApplication\"\nimport \"./ab_work_object\"\nimport \"./ab_work_interface\"\n\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\nvar labels = {\n\n\tapplication: {\n\n\t\t// formHeader: L('ab.application.form.header', \"*Application Info\"),\n\t\tbackToApplication: L('ab.application.backToApplication', \"*Back to Applications page\"),\n\t\tsynchronize: L('ab.application.synchronize', \"*Synchronize\"),\n\t\tobjectTitle: L('ab.object.title', \"*Objects\"),\n\t\tinterfaceTitle: L('ab.interface.title', \"*Interface\")\n\t}\n}\n\n\n\nOP.Component.extend('ab_work', function(App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique('ab_work_component'),\n\t\ttoolBar: App.unique('ab_work_toolbar'),\n\t\tbuttonSync: App.unique('ab_work_button_sync'),\n\t\tlabelAppName: App.unique('ab_work_label_appname'),\n\t\ttabbar: App.unique('ab_work_tabbar'),\n\t\ttab_object: App.unique('ab_work_tab_object'),\n\t\ttab_interface: App.unique('ab_work_tab_interface'),\n\t\tworkspace: App.unique('ab_work_workspace'),\n\t}\n\n\n\tvar AppObjectWorkspace = OP.Component['ab_work_object'](App);\n\tvar AppInterfaceWorkspace = OP.Component['ab_work_interface'](App);\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tid: ids.component,\n\t\trows: [\n\t\t\t{\n\t\t\t\tview: \"toolbar\",\n\t\t\t\tid: ids.toolBar,\n\t\t\t\tautowidth: true,\n\t\t\t\tcols: [\n\t\t\t\t\t{\n\t\t\t\t\t\tview: \"button\",\n\t\t\t\t\t\tlabel: labels.application.backToApplication,\n\t\t\t\t\t\twidth: 200,\n\t\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t\ticon: \"arrow-left\",\n\t\t\t\t\t\talign: \"left\",\n\n\t\t\t\t\t\tclick: function () {\n\t\t\t\t\t\t\tApp.actions.transitionApplicationChooser();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tview: \"label\",\n\t\t\t\t\t\tid: ids.labelAppName,\n\t\t\t\t\t\talign: \"center\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tview: \"spacer\",\n\t\t\t\t\t\twidth: 200,\n\t\t\t\t\t\talrign: \"right\"\n\t\t\t\t\t}\n\t\t\t\t\t// {\n\t\t\t\t\t// \tid: ids.buttonSync,\n\t\t\t\t\t// \tview: \"button\",\n\t\t\t\t\t// \ttype: \"icon\",\n\t\t\t\t\t// \ticon: \"refresh\",\n\t\t\t\t\t// \tlabel: labels.application.synchronize,\n\t\t\t\t\t// \tautowidth: true,\n\t\t\t\t\t// \talign: \"right\",\n\t\t\t\t\t// \tclick: function () {\n\t\t\t\t\t// \t\t_logic.synchronize();\n\t\t\t\t\t// \t}\n\t\t\t\t\t// }\n\t\t\t\t]\n\t\t\t},\n\t\t\t//{ height: App.config.mediumSpacer },\n\t\t\t// {\n\t\t\t// \tview:\"segmented\",\n\t\t\t// \tid: ids.tabbar,\n\t\t\t// \tvalue: ids.tab_object,\n\t\t\t// \tmultiview: true,\n\t\t\t// \talign: \"center\",\n\t\t\t// \toptions:[\n\t\t\t// \t\t{\n\t\t\t// \t\t\tid: ids.tab_object,\n\t\t\t// \t\t\tvalue: labels.application.objectTitle,\n\t\t\t// \t\t\twidth: App.config.tabWidthMedium\n\t\t\t// \t\t},\n\t\t\t// \t\t{\n\t\t\t// \t\t\tid: ids.tab_interface,\n\t\t\t// \t\t\tvalue: labels.application.interfaceTitle,\n\t\t\t// \t\t\twidth: App.config.tabWidthMedium\n\t\t\t// \t\t}\n\t\t\t// \t],\n\t\t\t// \ton: {\n\t\t\t// \t\tonChange: function (idNew, idOld) {\n\t\t\t// \t\t\tif (idNew != idOld) {\n\t\t\t// \t\t\t\t_logic.tabSwitch(idNew, idOld);\n\t\t\t// \t\t\t}\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// },\n\t\t\t{ height: App.config.mediumSpacer },\n\t\t\t{\n\t\t\t\tcols: [\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: App.config.mediumSpacer\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\trows: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tview: \"tabbar\",\n\t\t\t\t\t\t\t\tid: ids.tabbar,\n\t\t\t\t\t\t\t\tvalue: ids.tab_object,\n\t\t\t\t\t\t\t\tmultiview: true,\n\t\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid: ids.tab_object,\n\t\t\t\t\t\t\t\t\t\tvalue: labels.application.objectTitle,\n\t\t\t\t\t\t\t\t\t\twidth: App.config.tabWidthMedium\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tid: ids.tab_interface,\n\t\t\t\t\t\t\t\t\t\tvalue: labels.application.interfaceTitle,\n\t\t\t\t\t\t\t\t\t\twidth: App.config.tabWidthMedium\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\ton: {\n\t\t\t\t\t\t\t\t\tonChange: function (idNew, idOld) {\n\t\t\t\t\t\t\t\t\t\tif (idNew != idOld) {\n\t\t\t\t\t\t\t\t\t\t\t_logic.tabSwitch(idNew, idOld);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: ids.workspace,\n\t\t\t\t\t\t\t\tcells: [\n\t\t\t\t\t\t\t\t\tAppObjectWorkspace.ui,\n\t\t\t\t\t\t\t\t\tAppInterfaceWorkspace.ui\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: App.config.mediumSpacer\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ height: App.config.mediumSpacer }\n\t\t]\n\t};\n\n\n\n\t// Our init() function for setting up our UI\n\tvar _init = function() {\n\n\t\tAppObjectWorkspace.init();\n\t\tAppInterfaceWorkspace.init();\n\n\t\t// initialize the Object Workspace to show first.\n\t\t_logic.tabSwitch(ids.tab_object);\n\t}\n\n\n\n\t// our internal business logic\n\tvar _logic = {\n\n\n\t\tapplicationInit:function(application) {\n\n\t\t\t// setup Application Label:\n\t\t\t$$(ids.labelAppName).define('label', application.label);\n\t\t\t$$(ids.labelAppName).refresh();\n\n\t\t},\n\n\n\t\t/**\n\t\t * @function show()\n\t\t *\n\t\t * Show this component.\n\t\t */\n\t\tshow:function() {\n\n\t\t\t$$(ids.component).show();\n\t\t},\n\n\n\t\t/**\n\t\t * @function synchronize\n\t\t *\n\t\t * Kick off the Synchronization process.\n\t\t */\n\t\tsynchronize:function() {\n\n// self.element.trigger(self.options.synchronizeEvent, {\n// \tappID: AD.classes.AppBuilder.currApp.id\n// });\n//// Question: where should this logic go?  Here or in ab.js ?\n\nconsole.error('TODO: ab_work.logic.synchronize()!');\n\t\t},\n\n\n\t\t/**\n\t\t * @function tabSwitch\n\t\t *\n\t\t * Every time a tab switch happens, decide which workspace to show.\n\t\t *\n\t\t * @param {string} idTab\tthe id of the tab that was changed to.\n\t\t * @param {string} idOld\tthe previous tab id\n\t\t */\n\t\ttabSwitch:function(idTab, idOld) {\n\n\t\t\tswitch( idTab ) {\n\n\t\t\t\t// Object Workspace Tab\n\t\t\t\tcase ids.tab_object:\n\n\t\t\t\t\t// $$(ids.buttonSync).show();\n\t\t\t\t\tAppObjectWorkspace.show();\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Interface Workspace Tab\n\t\t\t\tcase ids.tab_interface:\n\n\t\t\t\t\t// $$(ids.buttonSync).hide();\n\t\t\t\t\tAppInterfaceWorkspace.show();\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\t}\n\n\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\n\t\t/**\n\t\t * @function transitionWorkspace\n\t\t *\n\t\t * Switch the UI to view the App Workspace screen.\n\t\t *\n\t\t * @param {ABApplication} application\n\t\t */\n\t\ttransitionWorkspace:function(application){\n\n\t\t\t_logic.applicationInit(application);\n\t\t\tAppObjectWorkspace.applicationLoad(application);\n\t\t\tAppInterfaceWorkspace.applicationLoad(application);\n\n\n\t\t\t_logic.show();\t\n\t\t}\n\n\t}\n\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui:_ui,\t\t\t\t\t// {obj} \tthe webix ui definition for this component\n\t\tinit:_init,\t\t\t\t// {fn} \tinit() to setup this component\n\t\tactions:_actions,\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\n\t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n\t}\n\n})\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab_work.js","\n/*\n * ab_work_interface\n *\n * Display the Interface for designing Pages and Views in the App Builder.\n *\n */\n\nimport ABApplication from \"../classes/ABApplication\"\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\nvar labels = {\n\n\tcomponent: {\n\n\t\t// formHeader: L('ab.application.form.header', \"*Application Info\"),\n\n\t}\n}\n\n\nvar idBase = 'ab_work_interface';\nOP.Component.extend(idBase, function(App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\n\t}\n\n\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tid: ids.component,\n\t\t//scroll: true,\n\t\trows: [\n\t\t\t{\n\t\t\t\tview: \"label\",\n\t\t\t\tlabel:\"interface workspace\",\n\t\t\t},\n\t\t]\n\t};\n\n\n\n\t// Our init() function for setting up our UI\n\tvar _init = function() {\n\t\t// webix.extend($$(ids.form), webix.ProgressBar);\n\n\t}\n\n\n\n\t// our internal business logic\n\tvar _logic = {\n\n\n\t\t\n\t\t/**\n\t\t * @function applicationLoad\n\t\t *\n\t\t * Initialize the Object Workspace with the given ABApplication.\n\t\t *\n\t\t * @param {ABApplication} application \n\t\t */\n\t\tapplicationLoad:function(application) {\nconsole.error('TODO: ab_work_interface.applicationLoad()');\n\t\t},\n\n\n\t\t/**\n\t\t * @function show()\n\t\t *\n\t\t * Show this component.\n\t\t */\n\t\tshow:function() {\n\n\t\t\t$$(ids.component).show();\n\t\t}\n\t}\n\n\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\n\t}\n\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui:_ui,\t\t\t\t\t// {obj} \tthe webix ui definition for this component\n\t\tinit:_init,\t\t\t\t// {fn} \tinit() to setup this component\n\t\tactions:_actions,\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\n\t\tapplicationLoad:_logic.applicationLoad,\n\t\tshow: _logic.show,\n\n\t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n\t}\n\n})\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab_work_interface.js","\n/*\n * ab_work_object\n *\n * Display the Object Tab UI:\n *\n */\n\nimport ABApplication from \"../classes/ABApplication\"\nimport \"./ab_work_object_list\"\nimport \"./ab_work_object_workspace\"\n\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\nvar labels = {\n\n\tcomponent: {\n\n\t\t// formHeader: L('ab.application.form.header', \"*Application Info\"),\n\n\t}\n}\n\n\nvar idBase = 'ab_work_object';\nOP.Component.extend(idBase, function(App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\n\t}\n\n\tvar ObjectList = OP.Component['ab_work_object_list'](App);\n\tvar ObjectWorkspace = OP.Component['ab_work_object_workspace'](App);\n\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tid: ids.component,\n\t\tautoheight: true,\n\t\tmargin: 20,\n\t\tcols: [\n\t\t\tObjectList.ui,\n\t\t\t{ view: \"resizer\"},\n\t\t\tObjectWorkspace.ui\n\t\t]\n\t};\n\n\n\n\t// Our init() function for setting up our UI\n\tvar _init = function() {\n\n\t\tObjectWorkspace.init();\n\t\tObjectList.init();\n\n\t}\n\n\n\n\t// our internal business logic\n\tvar _logic = {\n\n\t\t/**\n\t\t * @function applicationLoad\n\t\t *\n\t\t * Initialize the Object Workspace with the given ABApplication.\n\t\t *\n\t\t * @param {ABApplication} application \n\t\t */\n\t\tapplicationLoad: function(application) {\n\t\t\tObjectList.applicationLoad(application);\n\t\t\tObjectWorkspace.clearObjectWorkspace();\n\t\t},\n\n\n\t\t/**\n\t\t * @function show()\n\t\t *\n\t\t * Show this component.\n\t\t */\n\t\tshow:function() {\n\n\t\t\t$$(ids.component).show();\n\t\t}\n\t}\n\n\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\n\t}\n\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui:_ui,\t\t\t\t\t// {obj} \tthe webix ui definition for this component\n\t\tinit:_init,\t\t\t\t// {fn} \tinit() to setup this component\n\t\tactions:_actions,\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\n\n\t\tapplicationLoad: _logic.applicationLoad,\n\t\tshow: _logic.show,\n\n\t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n\t}\n\n})\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab_work_object.js","\n/*\n * ab_work_object_list\n *\n * Manage the Object List\n *\n */\n\nimport ABApplication from \"../classes/ABApplication\"\nimport \"./ab_work_object_list_newObject\"\n\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\nvar labels = {\n\n\tcomponent: {\n\n\t\t// formHeader: L('ab.application.form.header', \"*Application Info\"),\n\t\taddNew: L('ab.object.addNew', '*Add new object'),\n\n\t}\n}\n\n\nvar idBase = 'ab_work_object_list';\nOP.Component.extend(idBase, function(App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique(idBase+ '_component'),\n\n\t\tlist: App.unique(idBase+ '_editlist'),\n\t\tbuttonNew: App.unique(idBase+ '_buttonNew'),\n\n\t}\n\n\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tid:ids.component,\n\t\trows: [\n\t\t\t{\n\t\t\t\tview: App.custom.editlist.view,  // \"editlist\",\n\t\t\t\tid: ids.list,\n\t\t\t\twidth: 250,\n\nheight:800, // #Hack!\n\n\t\t\t\tselect: true,\n\t\t\t\teditaction: 'custom',\n\t\t\t\teditable: true,\n\t\t\t\teditor: \"text\",\n\t\t\t\teditValue: \"label\",\n\t\t\t\ttemplate: function(obj, common) {\n\t\t\t\t\treturn _logic.templateListItem(obj, common);\n\t\t\t\t},\n\t\t\t\ttype: {\n\t\t\t\t\theight:\"auto\",\n\t\t\t\t\t// unsyncNumber: \"\",  // \"<span class='ab-object-unsync'><span class='ab-object-unsync-number'></span> unsync</span>\",\n\t\t\t\t\ticonGear: \"<div class='ab-object-list-edit'><span class='webix_icon fa-cog'></span></div>\"\n\t\t\t\t},\n\t\t\t\ton: {\n\t\t\t\t\tonAfterRender: function () {\n\t\t\t\t\t\t_logic.onAfterRender();\n\t\t\t\t\t},\n\t\t\t\t\tonAfterSelect: function (id) {\n\t\t\t\t\t\t_logic.selectObject(id);\n\t\t\t\t\t},\n\t\t\t\t\tonAfterDelete: function (id) {\n\t\t\t\t\t\t_logic.onAfterDelete(id);\n\t\t\t\t\t},\n\t\t\t\t\tonBeforeEditStop: function (state, editor) {\n\t\t\t\t\t\t_logic.onBeforeEditStop(state, editor);\n\t\t\t\t\t},\n\t\t\t\t\tonAfterEditStop: function (state, editor, ignoreUpdate) {\n\t\t\t\t\t\t_logic.onAfterEditStop(state, editor, ignoreUpdate);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonClick: {\n\t\t\t\t\t\"ab-object-list-edit\": function (e, id, trg) {\n\t\t\t\t\t\t_logic.clickEditMenu(e, id, trg);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tview: 'button',\n\t\t\t\tid: ids.buttonNew,\n\t\t\t\tvalue: labels.component.addNew,\n\t\t\t\tclick: function () {\n\t\t\t\t\t_logic.clickNewObject();\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t};\n\n\n\n\t// Our init() function for setting up our UI\n\tvar _init = function() {\n\n\t\twebix.extend($$(ids.list), webix.ProgressBar);\n\t\t$$(ids.component).adjust();\n\t\t$$(ids.list).adjust();\n\t}\n\n\n\n\t// our internal business logic\n\tvar _logic = {\n\n\n\t\t/**\n\t\t * @function applicationLoad\n\t\t *\n\t\t * Initialize the Object List from the provided ABApplication\n\t\t *\n\t\t * If no ABApplication is provided, then show an empty form. (create operation)\n\t\t *\n\t\t * @param {ABApplication} application  \t[optional] The current ABApplication \n\t\t *\t\t\t\t\t\t\t\t\t\twe are working with.\n\t\t */\n\t\tapplicationLoad : function(application){\n\t\t\t_logic.listBusy();\n\n\t\t\tCurrentApplication = application;\n\n\t\t\t// get a DataCollection of all our objects\n\t\t\tobjectList = new webix.DataCollection({\n\t\t\t\tdata: application.objects(),\n\t\t\t});\n\n\t\t\t// clear our list and display our objects:\n\t\t\tvar List = $$(ids.list);\n\t\t\tList.clearAll();\n\t\t\tList.data.unsync();\n\t\t\tList.data.sync(objectList);\n\t\t\tList.refresh();\n\t\t\tList.unselectAll();\n\n\n\n\t\t\t// \n\t\t\t_logic.syncNumberRefresh();\n\t\t\t_logic.listReady();\n\n\n\t\t\t// prepare our Popup with the current Application\n\t\t\tPopupNewObjectComponent.applicationLoad(application);\n\n\t\t},\n\n\n\t\tclickEditMenu: function(e, id, trg) {\n\nconsole.error('!! TODO: clickEditMenu()');\n\t\t\t// // Show menu\n\t\t\t// $$(self.webixUiId.objectListMenuPopup).show(trg);\n\n\t\t\t// return false;\n\t\t},\n\n\n\t\tlistBusy:function() {\n\t\t\t$$(ids.list).showProgress({ type: \"icon\" });\n\t\t},\n\n\t\tlistReady:function() {\n\t\t\t$$(ids.list).hideProgress();\n\t\t},\n\n\n\t\tonAfterDelete: function (id) {\nconsole.error('!! todo: onAfterDelete()');\t\t\t\n\t\t},\n\n\n\t\tonAfterRender: function() {\nconsole.error('!! todo: onAfterRender() editing');\n\t\t\t// webix.once(function () {\n\t\t\t// \t$$(self.webixUiId.objectList).data.each(function (d) {\n\t\t\t// \t\t$($$(self.webixUiId.objectList).getItemNode(d.id)).find('.ab-object-unsync-number').html(99);\n\t\t\t// \t});\n\t\t\t// });\n\n\t\t\t// // Show gear icon\n\t\t\t// if (this.getSelectedId(true).length > 0) {\n\t\t\t// \t$(this.getItemNode(this.getSelectedId(false))).find('.ab-object-list-edit').show();\n\t\t\t// \tself.refreshUnsyncNumber();\n\t\t\t// }\n\t\t},\n\n\t\tonAfterEditStop: function(state, editor, ignoreUpdate) {\n\nconsole.error('!! todo: onAfterEditStop() editing');\n\t\t\t// if (state.value != state.old) {\n\t\t\t// \tvar _this = this;\n\n\t\t\t// \tthis.showProgress({ type: 'icon' });\n\n\t\t\t// \tvar selectedObject = AD.classes.AppBuilder.currApp.objects.filter(function (item, index, list) { return item.id == editor.id; })[0];\n\t\t\t// \tselectedObject.attr('label', state.value);\n\n\t\t\t// \t// Call server to rename\n\t\t\t// \tselectedObject.save()\n\t\t\t// \t\t.fail(function () {\n\t\t\t// \t\t\t_this.hideProgress();\n\n\t\t\t// \t\t\twebix.message({\n\t\t\t// \t\t\t\ttype: \"error\",\n\t\t\t// \t\t\t\ttext: self.labels.common.renameErrorMessage.replace(\"{0}\", state.old)\n\t\t\t// \t\t\t});\n\n\t\t\t// \t\t\tAD.error.log('Object List : Error rename object data', { error: err });\n\t\t\t// \t\t})\n\t\t\t// \t\t.then(function () {\n\t\t\t// \t\t\t_this.hideProgress();\n\n\t\t\t// \t\t\tif (selectedObject.translate) selectedObject.translate();\n\n\t\t\t// \t\t\t// Show success message\n\t\t\t// \t\t\twebix.message({\n\t\t\t// \t\t\t\ttype: \"success\",\n\t\t\t// \t\t\t\ttext: self.labels.common.renameSuccessMessage.replace('{0}', state.value)\n\t\t\t// \t\t\t});\n\n\t\t\t// \t\t\t// Show gear icon\n\t\t\t// \t\t\t$(_this.getItemNode(editor.id)).find('.ab-object-list-edit').show();\n\t\t\t// \t\t});\n\t\t\t// }\n\t\t},\n\n\t\tonBeforeEditStop: function(state, editor) {\nconsole.error('!! todo: onBeforeEditStop() editing');\n\t\t\t// if (!inputValidator.validateFormat(state.value)) {\n\t\t\t// \treturn false;\n\t\t\t// }\n\n\t\t\t// // Validation - check duplicate\n\t\t\t// if (!inputValidator.rules.preventDuplicateObjectName(state.value, editor.id) && state.value != state.old) {\n\t\t\t// \twebix.alert({\n\t\t\t// \t\ttitle: self.labels.object.invalidName,\n\t\t\t// \t\tok: self.labels.common.ok,\n\t\t\t// \t\ttext: self.labels.object.duplicateName.replace(\"{0}\", state.value)\n\t\t\t// \t});\n\n\t\t\t// \treturn false;\n\t\t\t// }\n\t\t},\n\n\n\t\t/**\n\t\t * @function selectObject()\n\t\t *\n\t\t * Perform these actions when an Object is selected in the List.\n\t\t */\n\t\tselectObject: function (id) {\n\n\t\t\tvar object = $$(ids.list).getItem(id);\n\t\t\tApp.actions.populateObjectWorkspace(object);\n\n//// TODO: do we need these?\n\n\t\t\t// // Refresh unsync number\n\t\t\t// self.refreshUnsyncNumber();\n\n\t\t\t// // Show gear icon\n\t\t\t// $(this.getItemNode(id)).find('.ab-object-list-edit').show();\n\t\t},\n\n\n\t\t/**\n\t\t * @function show()\n\t\t *\n\t\t * Show this component.\n\t\t */\n\t\tshow:function() {\n\n\t\t\t$$(ids.component).show();\n\t\t},\n\n\n\t\tsyncNumberRefresh:function() {\n\n//// NOTE: I think we are removing Sync Numbers with the refactor.\n//// probably wont need this.\nconsole.error('TODO: syncNumRefresh()');\n\t\t\t// var self = this,\n\t\t\t// \tobjects = [];\n\n\t\t\t// objects = $$(self.webixUiId.objectList).data.find(function (d) {\n\t\t\t// \treturn objectName ? d.name == objectName : true;\n\t\t\t// }, false, true);\n\n\t\t\t// objects.forEach(function (obj) {\n\t\t\t// \tvar objectModel = modelCreator.getModel(AD.classes.AppBuilder.currApp, obj.name),\n\t\t\t// \t\tunsyncNumber = (objectModel && objectModel.Cached ? objectModel.Cached.count() : 0),\n\t\t\t// \t\thtmlItem = $($$(self.webixUiId.objectList).getItemNode(obj.id));\n\n\t\t\t// \tif (unsyncNumber > 0) {\n\t\t\t// \t\thtmlItem.find('.ab-object-unsync-number').html(unsyncNumber);\n\t\t\t// \t\thtmlItem.find('.ab-object-unsync').show();\n\t\t\t// \t}\n\t\t\t// \telse {\n\t\t\t// \t\thtmlItem.find('.ab-object-unsync').hide();\n\t\t\t// \t}\n\t\t\t// });\n\t\t},\n\n\n\t\t/**\n\t\t * @function templateListItem\n\t\t *\n\t\t * Defines the template for each row of our ObjectList.\n\t\t *\n\t\t * @param {obj} obj the current instance of ABObject for the row.\n\t\t * @param {?} common the webix.common icon data structure\n\t\t * @return {string}\n\t\t */\n\t\ttemplateListItem: function(obj, common) {\n\t\t\treturn _templateListItem\n\t\t\t\t.replace('#label#', obj.label || '??label??')\n\t\t\t\t.replace('{common.iconGear}', common.iconGear);\n\t\t},\n\n\n\t\t/**\n\t\t * @function callbackNewObject\n\t\t *\n\t\t * Once a New Object was created in the Popup, follow up with it here.\n\t\t */\n\t\tcallbackNewObject:function(err, object){\n\n\t\t\tif (err) {\n\t\t\t\tOP.Error.log('Error creating New Object', {error: err});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tobjectList.add(object,0);\n\t\t\t$$(ids.list).select(newObject.id);\n\t\t},\n\n\n\t\t/**\n\t\t * @function clickNewObject\n\t\t *\n\t\t * Manages initiating the transition to the new Object Popup window\n\t\t */\n\t\tclickNewObject:function() {\n\n\t\t\t// show the new popup\n\t\t\tPopupNewObject.show();\n\t\t}\n\t}\n\n\n\t/*\n\t * _templateListItem\n\t *\n\t * The Object Row template definition.\n\t */\n\tvar _templateListItem = [\n\t\t\"<div class='ab-object-list-item'>\",\n\t\t\t\"#label#\",\n\t\t\t// \"{common.unsyncNumber}\",\n\t\t\t\"{common.iconGear}\",\n\t\t\"</div>\",\n\t].join('');\n\n\n\t// Note: put these here so _logic is defined:\n\t// There is a Popup for adding a new Object:\n\tvar PopupNewObjectComponent = OP.Component['ab_work_object_list_newObject'](App);\n\tvar PopupNewObject = webix.ui(PopupNewObjectComponent.ui);\n\tPopupNewObjectComponent.init({\n\t\tonDone:_logic.callbackNewObject\n\t});\n\n\n\n\tvar CurrentApplication = null;\n\tvar objectList = null;\n\n\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\n\t\t/**\n\t\t * @function getSelectedObject\n\t\t *\n\t\t * returns which ABObject is currently selected.\n\t\t * @return {ABObject}  or {null} if nothing selected.\n\t\t */\n\t\tgetSelectedObject:function() {\n\t\t\treturn $$(ids.list).getSelectedItem();\n\t\t},\n\n\t}\n\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui:_ui,\t\t\t\t\t// {obj} \tthe webix ui definition for this component\n\t\tinit:_init,\t\t\t\t// {fn} \tinit() to setup this component\n\t\tactions:_actions,\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\n\t\t// interface methods for parent component:\n\t\tapplicationLoad:_logic.applicationLoad,\n\n\t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n\t}\n\n})\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab_work_object_list.js","\n/*\n * ab_work_object_list_newObject\n *\n * Display the form for creating a new Object.  This Popup will manage several \n * different sub components for gathering Object data for saving.\n *\n * The sub components will gather the data for the object and do basic form \n * validations on their interface.  \n *\n * when ready, the sub component will call onSave(values, cb)  to allow this \n * component to manage the actual final object validation, and saving to this\n * application.  On success, cb(null) will be called.  on error cb(err) will\n * be called.\n *\n */\n\nimport \"./ab_work_object_list_newObject_blank\"\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\nvar labels = {\n\n\tcomponent: {\n\n\t\t// formHeader: L('ab.application.form.header', \"*Application Info\"),\n\t\taddNew: L('ab.object.addNew', '*Add new object'),\n\t\t\t\t\t\t\t\n\t}\n}\n\n\nvar idBase = 'ab_work_object_list_newObject';\nOP.Component.extend(idBase, function(App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\t}\n\n\n\tvar BlankTab = OP.Component['ab_work_object_list_newObject_blank'](App);\n\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tview: \"window\",\n\t\tid: ids.component,\n\t\twidth: 400,\n\t\tposition: \"center\",\n\t\tmodal: true,\n\t\thead: labels.component.addNew,\n\t\tselectNewObject: true,\n\t\tbody: {\n\t\t\tview: \"tabview\",\n\t\t\tcells: [\n\t\t\t\tBlankTab.ui,\n\t\t\t\t// importObjectCreator.getCreateView(),\n\t\t\t\t// importCsvCreator.getCreateView()\n\t\t\t]\n\t\t}\n\t};\n\n\n\n\t// Our init() function for setting up our UI\n\tvar _init = function(options) {\n\n\t\t// register our callbacks:\n\t\tfor(var c in _logic.callbacks) {\n\t\t\t_logic.callbacks[c] = options[c] || _logic.callbacks[c];\n\t\t}\n\n\n\t\tvar ourCBs = {\n\t\t\tonCancel: _logic.hide,\n\t\t\tonSave: _logic.save\n\t\t}\n\n\t\tBlankTab.init(ourCBs);\n\n\t}\n\n\n\n\t// our internal business logic \n\tvar _logic = {\n\n\t\t\n\n\n\t\t/**\n\t\t * @function applicationLoad()\n\t\t *\n\t\t * prepare ourself with the current application\n\t\t */\n\t\tapplicationLoad:function(application) {\n\t\t\t// _logic.show();\n\t\t\tcurrentApplication = application;\t// remember our current Application.\n\t\t},\n\n\n\t\tcallbacks:{\n\t\t\tonDone:function(){}\n\t\t},\n\n\n\t\t/**\n\t\t * @function hide()\n\t\t *\n\t\t * remove the busy indicator from the form.\n\t\t */\n\t\thide: function() {\n\t\t\t$$(ids.component).hide();\n\t\t},\n\n\n\t\t/**\n\t\t * @function save\n\t\t *\n\t\t * take the data gathered by our child creation tabs, and \n\t\t * add it to our current application.\n\t\t *\n\t\t * @param {obj} values  key=>value hash of model values.\n\t\t * @param {fn}  cb \t\tnode style callback to indicate success/failure\n\t\t */\n\t\tsave:function (values, cb) {\n\n\t\t\t// must have an application set.\n\t\t\tif (!currentApplication) {\n\t\t\t\tOP.Dialog.Alert({\n\t\t\t\t\ttitle:'Shoot!',\n\t\t\t\t\ttest:'No Application Set!  Why?'\n\t\t\t\t});\n\t\t\t\tcb(true);\t// there was an error.\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// create a new (unsaved) instance of our object:\n\t\t\tvar newObject = currentApplication.objectNew(values);\n\n\n\t\t\t// have newObject validate it's values.\n\t\t\tvar validationErrors = newObject.isValid();\n\t\t\tif (validationErrors) {\n\t\t\t\tcb(validationErrors);\t\t\t\t\t\t// tell current Tab component the errors\n\t\t\t\treturn false;\t\t\t\t\t\t\t\t// stop here.\n\t\t\t}\n\n\n\t\t\t// if we get here, save the new Object\n\t\t\tnewObject.save()\n\t\t\t\t.then(function(obj){\n\n\t\t\t\t\t// successfully done:\n\t\t\t\t\tcb();\t\t\t\t\t\t\t\t\t// tell current tab component save successful\n\t\t\t\t\t_logic.hide();\t\t\t\t\t\t\t// hide our popup\n\t\t\t\t\t_logic.callbacks.onDone(null, obj);\t\t// tell parent component we're done\n\t\t\t\t})\n\t\t\t\t.catch(function(err){\n\t\t\t\t\tcb(err);\t\t\t\t\t\t\t\t// tell current Tab component there was an error\n\t\t\t\t})\n\t\t},\n\n\n\t\t/**\n\t\t * @function show()\n\t\t *\n\t\t * Show this component.\n\t\t */\n\t\tshow:function() {\n\n\t\t\t$$(ids.component).show();\n\t\t}\n\t}\n\n\n\tvar currentApplication = null;\n\t// var currentCallBack = null;\n\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\t}\n\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui:_ui,\t\t\t\t\t// {obj} \tthe webix ui definition for this component\n\t\tinit:_init,\t\t\t\t// {fn} \tinit() to setup this component  \n\t\tactions:_actions,\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\n\t\t// interface methods for parent component:\n\t\tapplicationLoad:_logic.applicationLoad,\n\n\t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n\t}\n\n})\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab_work_object_list_newObject.js","\n/*\n * ab_work_object_list_newObject_blank\n *\n * Display the form for creating a new Application.\n *\n */\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\nvar labels = {\n\n\tcomponent: {\n\t\tplaceholderName: L('ab.object.form.placeholderName', \"*Object name\"),\n\t}\n}\n\n\nvar idBase = 'ab_work_object_list_newObject_blank';\nOP.Component.extend(idBase, function(App) {\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\n\t\tform: App.unique(idBase + '_blank'),\n\t\tbuttonSave: App.unique(idBase + '_save'),\n\t\tbuttonCancel: App.unique(idBase + '_cancel')\n\t}\n\n\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tid: ids.component,\n\t\theader: labels.common.create,\n\t\tbody: {\n\t\t\tview: \"form\",\n\t\t\tid: ids.form,\n\t\t\twidth: 400,\n\t\t\trules: {\n\n// TODO:\n// name: inputValidator.rules.validateObjectName\n\t\t\t},\n\t\t\telements: [\n\t\t\t\t{ view: \"text\", label: labels.common.formName, name: \"name\", required: true, placeholder: labels.component.placeholderName, labelWidth: 70 },\n\t\t\t\t{\n\t\t\t\t\tmargin: 5,\n\t\t\t\t\tcols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tview: \"button\", id: ids.buttonCancel, value: labels.common.cancel, \n\t\t\t\t\t\t\tclick: function () {\n\t\t\t\t\t\t\t\t_logic.cancel();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tview: \"button\", id: ids.buttonSave, value: labels.common.add, type: \"form\", \n\t\t\t\t\t\t\tclick: function () {\n\t\t\t\t\t\t\t\treturn _logic.save();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t};\n\n\n\n\t// Our init() function for setting up our UI\n\tvar _init = function( options ) {\n\t\t// webix.extend($$(ids.form), webix.ProgressBar);\n\n\t\t// load up our callbacks.\n\t\tfor(var c in _logic.callbacks) {\n\t\t\t_logic.callbacks[c] = options[c] || _logic.callbacks[c];\n\t\t}\n\n\t}\n\n\n\n\t// our internal business logic \n\tvar _logic = {\n\n\t\tcallbacks:{\n\t\t\tonCancel: function() { console.warn('NO onCancel()!') },\n\t\t\tonSave  : function(values, cb) { console.warn('NO onSave()!') },\n\t\t},\n\n\t\t\n\t\tcancel:function() {\n\n\t\t\t_logic.formClear();\n\t\t\t_logic.callbacks.onCancel();\n\t\t},\n\n\n\t\tformClear:function() {\n\t\t\t$$(ids.form).clearValidation();\n\t\t\t$$(ids.form).clear();\n\t\t},\n\n\n\t\t/**\n\t\t * @function hide()\n\t\t *\n\t\t * hide this component.\n\t\t */\n\t\thide:function() {\n\n\t\t\t$$(ids.component).hide();\n\t\t},\n\n\n\t\t/**\n\t\t * @function save\n\t\t *\n\t\t * verify the current info is ok, package it, and return it to be \n\t\t * added to the application.createModel() method.\n\t\t */\n\t\tsave:function() {\n\t\t\tvar saveButton = $$(ids.buttonSave);\n\t\t\tsaveButton.disable();\n\n\t\t\tvar Form = $$(ids.form);\n\n\t\t\tForm.clearValidation();\n\n\t\t\t// if it doesn't pass the basic form validation, return:\n\t\t\tif (!Form.validate()) {\n\t\t\t\tsaveButton.enable();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar values = Form.getValues();\n\n\n\t\t\t// now send data back to be added:\n\t\t\t_logic.callbacks.onSave(values, function(err) {\n\n\t\t\t\tif (err) {\n\t\t\t\t\tif (OP.Form.isValidationError(err, Form)) {\n\t\t\t\t\t\t// do I do anything else here?\n\t\t\t\t\t\t// this auto updates the form\n\t\t\t\t\t}\n\n\t\t\t\t\t// get notified if there was an error saving.\n\t\t\t\t\tsaveButton.enable();\n\t\t\t\t\treturn false;\n\t\t\t\t} \n\n\t\t\t\t// if there was no error, clear the form for the next\n\t\t\t\t// entry:\n\t\t\t\t_logic.formClear();\n\t\t\t});\n\n\t\t},\n\n\n\t\t/**\n\t\t * @function show()\n\t\t *\n\t\t * Show this component.\n\t\t */\n\t\tshow:function() {\n\n\t\t\t$$(ids.component).show();\n\t\t}\n\t}\n\n\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\n\t\t/**\n\t\t * @function populateApplicationForm()\n\t\t *\n\t\t * Initialze the Form with the values from the provided ABApplication.\n\t\t *\n\t\t * If no ABApplication is provided, then show an empty form. (create operation)\n\t\t *\n\t\t * @param {ABApplication} Application  \t[optional] The current ABApplication \n\t\t *\t\t\t\t\t\t\t\t\t\twe are working with.\n\t\t */\n\t\t// populateApplicationForm:function(Application){\n\t\t\t\n\t\t// \t_logic.formReset();\n\t\t// \tif (Application) {\n\t\t// \t\t// populate Form here:\n\t\t// \t\t_logic.formPopulate(Application);\n\t\t// \t}\n\t\t// \t_logic.permissionPopulate(Application);\n\t\t// \t_logic.show();\n\t\t// }\n\n\t}\n\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui:_ui,\t\t\t\t\t// {obj} \tthe webix ui definition for this component\n\t\tinit:_init,\t\t\t\t// {fn} \tinit() to setup this component  \n\t\tactions:_actions,\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\n\t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n\t}\n\n})\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab_work_object_list_newObject_blank.js","\n/*\n * ab_work_object_workspace\n *\n * Manage the Object Workspace area.\n *\n */\n\nimport ABApplication from \"../classes/ABApplication\"\nimport \"./ab_work_object_workspace_datatable\"\nimport \"./ab_work_object_workspace_popupDefineLabel\"\nimport \"./ab_work_object_workspace_popupHideFields\"\nimport \"./ab_work_object_workspace_popupNewDataField\"\n\n\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\nvar labels = {\n\n\tcomponent: {\n\n\t\taddNewRow: L('ab.object.addNewRow', \"*Add new row\"),\n\n\t\tselectObject: L('ab.object.selectObject', \"*Select an object to work with.\"),\n\n\t\t// formHeader: L('ab.application.form.header', \"*Application Info\"),\n\n\t\t// Toolbar:\n\t\thideFields: L('ab.object.toolbar.hideFields', \"*Hide fields\"),\n\t\tfilterFields: L('ab.object.toolbar.filterFields', \"*Add filters\"),\n\t\tsortFields: L('ab.object.toolbar.sortFields', \"*Apply sort\"),\n\t\tfrozenColumns: L('ab.object.toolbar.frozenColumns', \"*Frozen columns\"),\n\t\tdefineLabel: L('ab.object.toolbar.defineLabel', \"*Define label\"),\n\t\tpermission: L('ab.object.toolbar.permission', \"*Permission\"),\n\t\taddFields: L('ab.object.toolbar.addFields', \"*Add new column\"),\n\t\t\"export\": L('ab.object.toolbar.export', \"*Export\"),\n\n\t\tconfirmDeleteTitle : L('ab.object.delete.title', \"*Delete data field\"),\n\t\tconfirmDeleteMessage : L('ab.object.delete.message', \"*Do you want to delete <b>{0}</b>?\")\n\t}\n}\n\n\nvar idBase = 'ab_work_object_workspace';\nOP.Component.extend(idBase, function(App) {\n\n\tlabels.common = App.labels;\n\n\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\n\t\tbuttonAddField: App.unique(idBase + '_buttonAddField'),\n\t\tbuttonExport: App.unique(idBase + '_buttonExport'),\n\t\tbuttonFieldsVisible: App.unique(idBase + '_buttonFieldsVisible'),\n\t\tbuttonFilter: App.unique(idBase + '_buttonFilter'),\n\t\tbuttonFrozen: App.unique(idBase + '_buttonFrozen'),\n\t\tbuttonLabel: App.unique(idBase + '_buttonLabel'),\n\t\tbuttonRowNew: App.unique(idBase + '_buttonRowNew'),\n\t\tbuttonSort: App.unique(idBase + '_buttonSort'),\n\n\n\t\tdatatable: App.unique(idBase + '_datatable'),\n\n\n\t\t// Toolbar:\n\t\ttoolbar: App.unique(idBase + '_toolbar'),\n\n\n\n\t\tnoSelection: App.unique(idBase + '_noSelection'),\n\t\tselectedObject: App.unique(idBase + '_selectedObject'),\n\n\t}\n\n\n\n\t// The DataTable that displays our object:\n\tvar DataTable = OP.Component['ab_work_object_workspace_datatable'](App);\n\n\n\t// Various Popups on our page:\n\tvar PopupDefineLabelComponent = OP.Component['ab_work_object_workspace_popupDefineLabel'](App);\n\tvar PopupDefineLabel = webix.ui(PopupDefineLabelComponent.ui);\n\n\n\tvar PopupNewDataFieldComponent = OP.Component['ab_work_object_workspace_popupNewDataField'](App);\n\t// var PopupNewDataField = webix.ui(PopupNewDataFieldComponent.ui);\n\twebix.ui(PopupNewDataFieldComponent.ui);\n\n\n\tvar PopupHideFieldComponent = OP.Component['ab_work_object_workspace_popupHideFields'](App);\n\tvar PopupHideField = webix.ui(PopupHideFieldComponent.ui);\n\n\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tview:'multiview',\n\t\tid: ids.component,\n\t\trows:[\n\t\t\t{\n\t\t\t\tid: ids.noSelection,\n\t\t\t\trows:[\n\t\t\t\t\t{ \n\t\t\t\t\t\tview:'label', \n\t\t\t\t\t\tlabel:labels.component.selectObject \n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: ids.selectedObject,\n\t\t\t\trows: [\n\t\t\t\t\t{\n\t\t\t\t\t\tview: 'toolbar',\n\t\t\t\t\t\tid: ids.toolbar,\n\t\t\t\t\t\thidden: true,\n\t\t\t\t\t\tcss: \"ab-data-toolbar\",\n\t\t\t\t\t\tcols: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tview: \"button\",\n\t\t\t\t\t\t\t\tid: ids.buttonFieldsVisible,\n\t\t\t\t\t\t\t\tlabel: labels.component.hideFields,\n// popup: 'self.webixUiId.visibleFieldsPopup',\n\t\t\t\t\t\t\t\ticon: \"eye-slash\",\n\t\t\t\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t\t\t\t// width: 120,\n\t\t\t\t\t\t\t\tautowidth: true,\n\t\t\t\t\t\t\t\tbadge: 0,\n\t\t\t\t\t\t\t\tclick: function () {\n\t\t\t\t\t\t\t\t\t_logic.toolbarFieldsVisible(this.$view);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tview: 'button',\n\t\t\t\t\t\t\t\tid: ids.buttonFilter,\n\t\t\t\t\t\t\t\tlabel: labels.component.filterFields,\n\t\t\t\t\t\t\t\ticon: \"filter\",\n\t\t\t\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t\t\t\t// width: 120,\n\t\t\t\t\t\t\t\tautowidth: true,\n\t\t\t\t\t\t\t\tbadge: 0,\n\t\t\t\t\t\t\t\tclick: function () {\n\t\t\t\t\t\t\t\t\t_logic.toolbarFilter(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tview: 'button',\n\t\t\t\t\t\t\t\tid: ids.buttonSort,\n\t\t\t\t\t\t\t\tlabel: labels.component.sortFields,\n\t\t\t\t\t\t\t\ticon: \"sort\",\n\t\t\t\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t\t\t\t// width: 120,\n\t\t\t\t\t\t\t\tautowidth: true,\n\t\t\t\t\t\t\t\tbadge: 0,\n\t\t\t\t\t\t\t\tclick: function () {\n\t\t\t\t\t\t\t\t\t_logic.toolbarSort(this.$view);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tview: 'button',\n\t\t\t\t\t\t\t\tid: ids.buttonFrozen,\n\t\t\t\t\t\t\t\tlabel: labels.component.frozenColumns,\n\t\t\t\t\t\t\t\ticon: \"thumb-tack\",\n\t\t\t\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t\t\t\tautowidth: true,\n\t\t\t\t\t\t\t\tbadge: 0,\n\t\t\t\t\t\t\t\tclick: function(){\n\t\t\t\t\t\t\t\t\t_logic.toolbarFrozen(this.$view);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tview: 'button',\n\t\t\t\t\t\t\t\tid: ids.buttonLabel,\n\t\t\t\t\t\t\t\tlabel: labels.component.defineLabel,\n\t\t\t\t\t\t\t\ticon: \"crosshairs\",\n\t\t\t\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t\t\t\t// width: 130,\n\t\t\t\t\t\t\t\tautowidth: true,\n\t\t\t\t\t\t\t\tclick: function () {\n\t\t\t\t\t\t\t\t\t_logic.toolbarDefineLabel(this.$view);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tview: 'button',\n\t\t\t\t\t\t\t\tlabel: labels.component.permission,\n\t\t\t\t\t\t\t\ticon: \"lock\",\n\t\t\t\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t\t\t\tautowidth: true,\n\t\t\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\t\t\t_logic.toolbarPermission(this.$view);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tview: 'button',\n\t\t\t\t\t\t\t\tid: ids.buttonAddField,\n\t\t\t\t\t\t\t\tlabel: labels.component.addFields,\n\t\t\t\t\t\t\t\ticon: \"plus\",\n\t\t\t\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t\t\t\t// width: 150,\n\t\t\t\t\t\t\t\tautowidth: true,\n\t\t\t\t\t\t\t\tclick:function() {\n\t\t\t\t\t\t\t\t\t_logic.toolbarAddFields(this.$view);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tview: 'button',\n\t\t\t\t\t\t\t\tid: ids.buttonExport,\n\t\t\t\t\t\t\t\tlabel: labels.component.export,\n\t\t\t\t\t\t\t\ticon: \"download\",\n\t\t\t\t\t\t\t\ttype: \"icon\",\n\t\t\t\t\t\t\t\tautowidth: true,\n\t\t\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\t\t\t_logic.toolbarButtonExport(this.$view);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tDataTable.ui,\n\t\t\t\t\t{\n\t\t\t\t\t\tcols: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tview: \"button\",\n\t\t\t\t\t\t\t\tid: ids.buttonRowNew,\n\t\t\t\t\t\t\t\tvalue: labels.component.addNewRow,\n\t\t\t\t\t\t\t\tclick: function () {\n// TODO:\n\t\t\t\t\t\t\t\t\t_logic.rowAdd();\n\t\t\t\t\t\t\t\t\t// self.addNewRow({});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\n\t\t\t}\n\t\t]\n\t}\n\n\n\n\n\t// Our init() function for setting up our UI\n\tvar _init = function() {\n\t\t// webix.extend($$(ids.form), webix.ProgressBar);\n\n\t\tDataTable.init({\n\t\t\tonEditorMenu:_logic.callbackHeaderEditorMenu\n\t\t});\n\n\t\tPopupDefineLabelComponent.init({\n\t\t\tonChange:_logic.callbackDefineLabel\t\t// be notified when there is a change in the label\n\t\t});\n\n\t\tPopupNewDataFieldComponent.init({\n\t\t\tonSave:_logic.callbackAddFields\t\t\t// be notified when a new Field is created & saved\n\t\t});\n\n\t\tPopupHideFieldComponent.init({\n\t\t\tonChange:_logic.callbackFieldsVisible\t\t// be notified when there is a change in the hidden fields\n\t\t});\n\n\n\t\t$$(ids.noSelection).show();\n\t}\n\n\n\tvar CurrentObject = null;\n\n\t// our internal business logic\n\tvar _logic = {\n\n\n\t\t/**\n\t\t * @function callbackDefineLabel\n\t\t *\n\t\t * call back for when the Define Label popup is finished.\n\t\t */\n\t\tcallbackAddFields:function(field) {\n\t\t\tDataTable.refresh();\n\t\t},\n\n\n\t\t/**\n\t\t * @function callbackDefineLabel\n\t\t *\n\t\t * call back for when the Define Label popup is finished.\n\t\t */\n\t\tcallbackDefineLabel: function() {\n\n\t\t},\n\n\n\t\t/**\n\t\t * @function callbackFieldsVisible\n\t\t *\n\t\t * call back for when the hidden fields have changed.\n\t\t */\n\t\tcallbackFieldsVisible: function() {\n\n\t\t\tvar hiddenFields = CurrentObject.workspaceHiddenFields;\n\t\t\t$$(ids.buttonFieldsVisible).define('badge', hiddenFields.length);\n\t\t\t$$(ids.buttonFieldsVisible).refresh();\n\n\t\t\tDataTable.refresh();\n\t\t},\n\n\n\t\t/**\n\t\t * @function callbackFieldsVisible\n\t\t *\n\t\t * call back for when an editor menu action has been selected.\n\t\t * @param {string} action [ 'hide', 'filter', 'sort', 'edit', 'delete' ]\n\t\t */\n\t\tcallbackHeaderEditorMenu: function(action, field, node) {\n\n\t\t\tswitch(action) {\n\n\t\t\t\tcase 'hide':\n\t\t\t\tcase 'filter':\n\t\t\t\tcase 'sort':\nconsole.error('!! TODO: callbackHeaderEditorMenu():  unimplemented action:'+action);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'edit':\n\t\t\t\t\t// pass control on to our Popup:\n\t\t\t\t\tPopupNewDataFieldComponent.show(node, field);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'delete':\n\n\t\t\t\t\t// verify they mean to do this:\n\t\t\t\t\tOP.Dialog.Confirm({\n\t\t\t\t\t\ttitle: labels.component.confirmDeleteTitle,\n\t\t\t\t\t\tmessage: labels.component.confirmDeleteMessage.replace('{0}', field.label),\n\t\t\t\t\t\tcallback:function( isOK ) {\n\n\t\t\t\t\t\t\tif (isOK) {\n//// LEFT OFF HERE:\n\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t},\n\n\n\t\t/**\n\t\t * @function clearObjectWorkspace()\n\t\t *\n\t\t * Clear the object workspace. \n\t\t */\n\t\tclearObjectWorkspace:function(){\n\t\t\t\n\t\t\t// NOTE: to clear a visual glitch when multiple views are updating\n\t\t\t// at one time ... stop the animation on this one:\n\t\t\t$$(ids.noSelection).show(false, false);\n\t\t},\n\n\n\t\t/**\n\t\t * @function show()\n\t\t *\n\t\t * Show this component.\n\t\t */\n\t\tshow:function() {\n\n\t\t\t$$(ids.component).show();\n\t\t},\n\n\n\t\t/**\n\t\t * @function toolbarAddFields\n\t\t *\n\t\t * Show the popup to allow the user to create new fields for \n\t\t * this object.\n\t\t */\n\t\ttoolbarAddFields: function($view) {\n\t\t\tPopupNewDataFieldComponent.show($view);\n\t\t},\n\n\n\t\ttoolbarButtonExport: function($view) {\nconsole.error('TODO: Button Export()');\n\t\t},\n\n\n\t\t/**\n\t\t * @function toolbarDefineLabel\n\t\t *\n\t\t * Show the popup to allow the user to define the default label for \n\t\t * this object.\n\t\t */\n\t\ttoolbarDefineLabel: function($view) {\n\t\t\tPopupDefineLabel.show($view);\n\t\t},\n\n\n\t\t/**\n\t\t * @function toolbarFieldsVisible\n\t\t *\n\t\t * Show the popup to allow the user to hide columns for this view.\n\t\t */\n\t\ttoolbarFieldsVisible: function($view) {\n\t\t\tPopupHideField.show($view);\n\t\t},\n\n\n\t\t/**\n\t\t * @function toolbarFilter\n\t\t *\n\t\t * show the popup to add a filter to the datatable\n\t\t */\n\t\ttoolbarFilter: function($view) {\n// self.refreshPopupData();\n// $$(self.webixUiId.filterFieldsPopup).show($view);\nconsole.error('TODO: button filterFields()');\n\t\t},\n\n\n\t\t/**\n\t\t * @function toolbarFrozen\n\t\t *\n\t\t * show the popup to freeze columns for the datatable\n\t\t */\n\t\ttoolbarFrozen: function ($view) {\nconsole.error('TODO: toolbarFrozen()');\n\t\t},\n\n\n\t\ttoolbarPermission: function ($view) {\nconsole.error('TODO: toolbarPermission()');\n\t\t},\n\n\n\t\t/**\n\t\t * @function toolbarSort\n\t\t *\n\t\t * show the popup to sort the datatable\n\t\t */\n\t\ttoolbarSort:function($view) {\n// self.refreshPopupData();\n// $$(self.webixUiId.sortFieldsPopup).show($view);\nconsole.error('TODO: toolbarSort()');\n\t\t}\n\t}\n\n\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\n\t\t/**\n\t\t * @function populateObjectWorkspace()\n\t\t *\n\t\t * Initialize the Object Workspace with the provided ABObject.\n\t\t *\n\t\t * @param {ABObject} object  \tcurrent ABObject instance we are working with.\n\t\t */\n\t\tpopulateObjectWorkspace: function(object) {\n\n\t\t\t$$(ids.toolbar).show();\n\t\t\t$$(ids.selectedObject).show();\n\n\t\t\tCurrentObject = object;\n\n\t\t\tApp.actions.populateObjectPopupAddDataField(object);\n\n\t\t\t// update hiddenFields \n\t\t\t_logic.callbackFieldsVisible();\n\n\n\t\t\tPopupDefineLabelComponent.objectLoad(object);\n\t\t\tPopupHideFieldComponent.objectLoad(object);\n\t\t\tDataTable.objectLoad(object);\n\t\t}\n\n\t}\n\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui:_ui,\t\t\t\t\t// {obj} \tthe webix ui definition for this component\n\t\tinit:_init,\t\t\t\t// {fn} \tinit() to setup this component\n\t\tactions:_actions,\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\n\t\t// interface methods for parent component:\n\t\tclearObjectWorkspace:_logic.clearObjectWorkspace,\n\n\t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n\t}\n\n})\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab_work_object_workspace.js","\n/*\n * ab_work_object_workspace\n *\n * Manage the Object Workspace area.\n *\n */\n\nimport \"./ab_work_object_workspace_popupHeaderEditMenu\"\n\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\nvar labels = {\n\n\tcomponent: {\n\n\t}\n}\n\n\nvar idBase = 'ab_work_object_workspace_datatable';\nOP.Component.extend(idBase, function(App) {\n\n\tlabels.common = App.labels;\n\n\n\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique(idBase+'_component'),\n\n\t}\n\n\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tview: \"datatable\",\n\t\tid: ids.component,\n\t\tresizeColumn: true,\n\t\tresizeRow: true,\n\t\tprerender: false,\n\t\teditable: true,\n\t\tfixedRowHeight: false,\n\t\teditaction: \"custom\",\n\t\tselect: \"cell\",\n\t\tdragColumn: true,\n//height:800,  // #hack!\n\t\ton: {\n\t\t\tonBeforeSelect: function (data, preserve) {\nconsole.error('!! ToDo: onBeforeSelect()');\n\t\t\t\t// var itemNode = this.getItemNode({ row: data.row, column: data.column });\n\n\t\t\t\t// var column = AD.classes.AppBuilder.currApp.currObj.columns.filter(function (col) { return col.name == data.column; });\n\t\t\t\t// if (!column || column.length < 1) {\n\t\t\t\t// \tconsole.log('System could not found this column data');\n\t\t\t\t// \treturn false;\n\t\t\t\t// } else\n\t\t\t\t// \tcolumn = column[0];\n\n\t\t\t\t// return dataFieldsManager.customEdit(AD.classes.AppBuilder.currApp, AD.classes.AppBuilder.currApp.currObj, column, data.row, itemNode);\n\t\t\t},\n\t\t\tonAfterSelect: function (data, prevent) {\nconsole.error('!! todo: onAfterSelect()');\n\t\t\t\t// var columnConfig = $$(self.webixUiId.objectDatatable).getColumnConfig(data.column),\n\t\t\t\t// \tfieldData = AD.classes.AppBuilder.currApp.currObj.columns.filter(function (col) { return col.name == data.column; });\n\n\t\t\t\t// if (!fieldData || fieldData.length < 1) {\n\t\t\t\t// \tconsole.log('System could not found this column data');\n\t\t\t\t// \treturn false;\n\t\t\t\t// } else\n\t\t\t\t// \tfieldData = fieldData[0];\n\n\t\t\t\t// // Custom update data\n\t\t\t\t// if (dataFieldsManager.hasCustomEdit(columnConfig.fieldName, fieldData))\n\t\t\t\t// \treturn false;\n\n\t\t\t\t// // Normal update data\n\t\t\t\t// this.editCell(data.row, data.column);\n\t\t\t},\n\t\t\tonCheck: function (row, col, val) { // Update checkbox data\nconsole.error('!! ToDo: onCheck()');\n\t\t\t\t// var item = $$(self.webixUiId.objectDatatable).getItem(row);\n\n\t\t\t\t// self.updateRowData({ value: (val > 0 ? true : false) }, { row: row, column: col }, false)\n\t\t\t\t// \t.fail(function (err) {\n\t\t\t\t// \t\t// Rollback\n\t\t\t\t// \t\titem[col] = !val;\n\t\t\t\t// \t\t$$(self.webixUiId.objectDatatable).updateItem(row, item);\n\t\t\t\t// \t\t$$(self.webixUiId.objectDatatable).refresh(row);\n\n\t\t\t\t// \t\t$$(self.webixUiId.objectDatatable).hideProgress();\n\t\t\t\t// \t})\n\t\t\t\t// \t.then(function (result) {\n\t\t\t\t// \t\t$$(self.webixUiId.objectDatatable).hideProgress();\n\t\t\t\t// \t});\n\t\t\t},\n\t\t\tonBeforeEditStop: function (state, editor) {\nconsole.error('!! ToDo: onCheck()');\n\t\t\t\t// var column = AD.classes.AppBuilder.currApp.currObj.columns.filter(function (col) { return col.name == editor.column; });\n\n\t\t\t\t// if (!column || column.length < 1) return true;\n\t\t\t\t// column = column[0];\n\n\t\t\t\t// var passValidate = dataFieldsManager.validate(column, state.value);\n\n\t\t\t\t// if (!passValidate) {\n\t\t\t\t// \t$$(self.webixUiId.objectDatatable).editCancel();\n\t\t\t\t// }\n\n\t\t\t\t// return passValidate;\n\t\t\t},\n\t\t\tonAfterEditStop: function (state, editor, ignoreUpdate) {\nconsole.error('!! ToDo: onAfterEditStop()');\n\t\t\t\t// var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n\t\t\t\t// self.updateRowData(state, editor, ignoreUpdate)\n\t\t\t\t// \t.fail(function (err) { // Cached\n\t\t\t\t// \t\titem[editor.column] = state.old;\n\t\t\t\t// \t\t$$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n\t\t\t\t// \t\t$$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n\t\t\t\t// \t\t// TODO : Message\n\n\t\t\t\t// \t\t$$(self.webixUiId.objectDatatable).hideProgress();\n\t\t\t\t// \t})\n\t\t\t\t// \t.then(function (result) {\n\t\t\t\t// \t\tif (item) {\n\t\t\t\t// \t\t\titem[editor.column] = state.value;\n\n\t\t\t\t// \t\t\tif (result && result.constructor.name === 'Cached' && result.isUnsync())\n\t\t\t\t// \t\t\t\titem.isUnsync = true;\n\n\t\t\t\t// \t\t\t$$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n\t\t\t\t// \t\t}\n\n\t\t\t\t// \t\t// TODO : Message\n\n\t\t\t\t// \t\t$$(self.webixUiId.objectDatatable).hideProgress();\n\t\t\t\t// \t});\n\t\t\t},\n\t\t\tonColumnResize: function (id, newWidth, oldWidth, user_action) {\nconsole.error('!! ToDo: onColumnResize()');\n\t\t\t\t// var columnConfig = $$(self.webixUiId.objectDatatable).getColumnConfig(id);\n\t\t\t\t// var column = self.data.columns.filter(function (col) { return col.id == columnConfig.dataId; });\n\t\t\t\t// if (column && column[0])\n\t\t\t\t// \tcolumn[0].setWidth(newWidth);\n\n\t\t\t\t// // if (typeof columnConfig.template !== 'undefined' && columnConfig.template !== null) {\n\t\t\t\t// // \t// For calculate/refresh row height\n\t\t\t\t// // \t$$(self.webixUiId.objectDatatable).render();\n\t\t\t\t// // }\n\t\t\t},\n\t\t\tonBeforeColumnDrag: function (sourceId, event) {\nconsole.error('!! ToDo: onBeforeColumnDrag()');\n\t\t\t\t// if (sourceId === 'appbuilder_trash') // Remove column\n\t\t\t\t// \treturn false;\n\t\t\t\t// else\n\t\t\t\t// \treturn true;\n\t\t\t},\n\t\t\tonBeforeColumnDrop: function (sourceId, targetId, event) {\nconsole.error('!! ToDo: onBeforeColumnDrag()');\n\t\t\t\t// if (targetId === 'appbuilder_trash') // Remove column\n\t\t\t\t// \treturn false;\n\n\t\t\t\t// if ($$(self.webixUiId.visibleButton).config.badge > 0) {\n\t\t\t\t// \twebix.alert({\n\t\t\t\t// \t\ttitle: self.labels.object.couldNotReorderField,\n\t\t\t\t// \t\tok: self.labels.common.ok,\n\t\t\t\t// \t\ttext: self.labels.object.couldNotReorderFieldDetail\n\t\t\t\t// \t});\n\n\t\t\t\t// \treturn false;\n\t\t\t\t// }\n\t\t\t},\n\t\t\tonAfterColumnDrop: function (sourceId, targetId, event) {\nconsole.error('!! ToDo: onAfterColumnDrop()');\n\t\t\t\t// self.reorderColumns();\n\t\t\t},\n\t\t\tonAfterColumnShow: function (id) {\nconsole.error('!! ToDo: onAfterColumnShow()');\n\t\t\t\t// $$(self.webixUiId.visibleFieldsPopup).showField(id);\n\t\t\t},\n\t\t\tonAfterColumnHide: function (id) {\nconsole.error('!! ToDo: onAfterColumnHide()');\n\t\t\t\t// $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n\t\t\t},\n\n\t\t\tonHeaderClick: function (id, e, node) {\n\t\t\t\t_logic.onHeaderClick(id, e, node);\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\n\n\t// Our init() function for setting up our UI\n\tvar _init = function(options) {\n\n\t\t// register our callbacks:\n\t\tfor(var c in _logic.callbacks) {\n\t\t\t_logic.callbacks[c] = options[c] || _logic.callbacks[c];\n\t\t}\n\n\t\t// webix.extend($$(ids.form), webix.ProgressBar);\n\t}\n\n\n\tvar CurrentObject = null;\t\t// current ABObject being displayed\n\tvar EditField\t= null;\t\t\t// which field (column header) is popup editor for\n\tvar EditNode\t= null;\t\t\t// which html node (column header) is popup editor for\n\n\t// our internal business logic\n\tvar _logic = {\n\n\n\t\tcallbacks:{\n\n\t\t\t/**\n\t\t\t * @function onEditorMenu\n\t\t\t * report back which menu action was clicked.\n\t\t\t * We get the info from our popupHeaderEditor component, but all the \n\t\t\t * logic to respond to those options are in our parent. So we pass it \n\t\t\t * on ...\n\t\t\t * \n\t\t\t * @param {string} action [ 'hide', 'filter', 'sort', 'edit', 'delete' ]\n\t\t\t * @param {ABField} field  the field to which the action is to be applied\n\t\t\t * @param {dom} node  the optional html node for this header item.\n\t\t\t */\n\t\t\tonEditorMenu: function(action, field) {  }\n\t\t},\n\n\n\t\t/**\n\t\t * @function callbackHeaderEdit\n\t\t *\n\t\t * call back for when an item in the Header Edit Menu has been selected.\n\t\t * @param {string} action the action requested for this field:\n\t\t */\n\t\tcallbackHeaderEdit: function(action) {\n\n\t\t\tPopupHeaderEdit.hide();\n\t\t\t_logic.callbacks.onEditorMenu(action, EditField, EditNode);\n\t\t},\n\n\n\t\t/**\n\t\t * @function onHeaderClick\n\t\t * \n\t\t * process the user clicking on the header for one of our columns.\n\t\t */\n\t\tonHeaderClick: function (id, e, node) {\n\n\t\t\t// Ignore system columns\n\t\t\tif (id.column == 'appbuilder_trash')\n\t\t\t\treturn false;\n\n\t\t\t// save our EditNode & EditField:\n\t\t\tEditNode = node;\n\n\t\t\tEditField = CurrentObject.fields(function(f){ return f.id == id.column; })[0];\n\t\t\tif (EditField) {\n\n\t\t\t\t// show the popup\n\t\t\t\tPopupHeaderEdit.show(node);\n\t\t\t}\n\t\t\n\t\t\treturn false;\n\t\t},\n\n\n\t\tobjectLoad:function(object) {\n\n\t\t\tCurrentObject = object;\n\n\t\t\tPopupHeaderEditComponent.objectLoad(object);\n\n\t\t\t_logic.refresh();\n\t\t},\n\n\n\n\t\t// rebuild the data table view:\n\t\trefresh: function() {\n\n\t\t\t// wait until we have an Object defined:\n\t\t\tif (CurrentObject) {\n\n\t\t\t\tvar DataTable = $$(ids.component);\n\t\t\t\tDataTable.clearAll();\n\n\n\t\t\t\t// update DataTable structure:\n\t\t\t\tvar columnHeaders = CurrentObject.columnHeaders(true);\n\t\t\t\tDataTable.refreshColumns(columnHeaders)\n\n\n\t\t\t\t// update DataTable Content\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * @function show()\n\t\t *\n\t\t * Show this component.\n\t\t */\n\t\tshow:function() {\n\n\t\t\t$$(ids.component).show();\n\t\t},\n\n\n\t}\n\n\n\n\t//// NOTE: declare these after _logic  for the callbacks:\n\n\tvar PopupHeaderEditComponent = OP.Component['ab_work_object_workspace_popupHeaderEditMenu'](App);\n\tvar PopupHeaderEdit = webix.ui(PopupHeaderEditComponent.ui);\n\tPopupHeaderEditComponent.init({\n\t\tonClick:_logic.callbackHeaderEdit\t\t// be notified when there is a change in the hidden fields\n\t})\n\n\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\n\t}\n\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui:_ui,\t\t\t\t\t// {obj} \tthe webix ui definition for this component\n\t\tinit:_init,\t\t\t\t// {fn} \tinit() to setup this component\n\t\tactions:_actions,\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\n\t\t// interface methods for parent component:\n\t\tobjectLoad: _logic.objectLoad,\n\t\trefresh: _logic.refresh,\n\n\n\t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n\t}\n\n})\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab_work_object_workspace_datatable.js","\n/*\n * ab_work_object_workspace_popupDefineLabel\n *\n * Manage the Add New Data Field popup.\n *\n */\n\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\nvar labels = {\n\n\tcomponent: {\n\n\t\tlabelFormat: L('ab.define_label.labelFormat', \"*Label format\"),\n\t\tselectFieldToGenerate: L('ab.define_label.selectFieldToGenerate', \"*Select field item to generate format.\"),\n\t\tlabelFields: L('ab.define_label.labelFields', \"*Fields\"),\n\t}\n}\n\n\nvar idBase = 'ab_work_object_workspace_popupDefineLabel';\nOP.Component.extend(idBase, function(App) {\n\n\tlabels.common = App.labels;\n\n\n\t// internal list of Webix IDs to reference our UI components.\n\t\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\t\tformat: App.unique(idBase + '_format'),\n\t\tlist: App.unique(idBase + '_list'),\n\n\t\tbuttonSave: App.unique(idBase + '_buttonSave'),\n\t}\n\n\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tview:\"popup\",\n\t\tid: ids.component,\n\t\tmodal: true,\n\t\tautoheight:true,\n\t\t// maxHeight: 420,\n\n\t\twidth: 500,\n\t\tbody: {\n\t\t\trows: [\n\t\t\t\t{\n\t\t\t\t\tview: \"label\",\n\t\t\t\t\tlabel: \"<b>{0}</b>\".replace(\"{0}\", labels.component.labelFormat)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tview: \"textarea\",\n\t\t\t\t\tid: ids.format,\n\t\t\t\t\theight: 100\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tview: \"label\",\n\t\t\t\t\tlabel: labels.component.selectFieldToGenerate\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tview: \"label\",\n\t\t\t\t\tlabel: \"<b>{0}</b>\".replace(\"{0}\", labels.component.labelFields)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tview: 'list',\n\t\t\t\t\tid: ids.list,\n\t\t\t\t\twidth: 500,\n\t\t\t\t\tmaxHeight: 180,\n\t\t\t\t\tselect: false,\n\t\t\t\t\ttemplate: '#label#',\n\t\t\t\t\ton: {\n\t\t\t\t\t\tonItemClick: function (id, e, node) {\n\t\t\t\t\t\t\t_logic.onItemClick(id, e, node);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theight: 10\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcols: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tview: \"button\", value: labels.common.cancel, width: 100, \n\t\t\t\t\t\t\tclick: function () {\n\t\t\t\t\t\t\t\t_logic.buttonCancel(); \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tview: \"button\", id: ids.buttonSave, label: labels.common.save, type: \"form\", width: 120, \n\t\t\t\t\t\t\tclick: function () {\n\t\t\t\t\t\t\t\t_logic.buttonSave();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\ton: {\n\t\t\tonShow: function () {\n\t\t\t\t_logic.onShow();\n\t\t\t}\n\t\t}\n\t}\n\n\n\tvar _currentObject = null;\n\n\t// Our init() function for setting up our UI\n\tvar _init = function(options) {\n\n\t\t// register our callbacks:\n\t\tfor(var c in _logic.callbacks) {\n\t\t\t_logic.callbacks[c] = options[c] || _logic.callbacks[c];\n\t\t}\n\n\t\twebix.extend($$(ids.list), webix.ProgressBar);\n\n\t}\n\n\n\n\t// our internal business logic \n\tvar _logic = {\n\n\t\t\n\t\tbuttonCancel:function() {\n\t\t\t$$(ids.component).hide();\n\t\t},\n\n\n\t\tbuttonSave:function() {\n\n\t\t\t// disable our save button\n\t\t\tvar ButtonSave = $$(ids.buttonSave);\n\t\t\tButtonSave.disable();\n\n\t\t\t// get our current labelFormt\n\t\t\tvar labelFormat = $$(ids.format).getValue();\n\n\t\t\t// start our spinner\n\t\t\tvar List = $$(ids.list);\n\t\t\tList.showProgress({ type: 'icon' });\n\n\t\t\t// convert from our User Friendly {Label} format to our \n\t\t\t// object friendly {Name} format\n\t\t\tList.data.each(function (d) {\n\t\t\t\tlabelFormat = labelFormat.replace(new RegExp('{' + d.label + '}', 'g'), '{' + d.id + '}');\n\t\t\t});\n\n\t\t\t// save the value\n\t\t\t_currentObject.labelFormat = labelFormat;\n\t\t\t_currentObject.save()\n\t\t\t.then(function(){\n\n\t\t\t\t// all good, so\n\t\t\t\tList.hideProgress();\t// hide the spinner\n\t\t\t\tButtonSave.enable();\t// enable the save button\n\t\t\t\t_logic.hide();\t\t\t// hide the popup\n\n\t\t\t\t// alert our parent component we are done with our changes:\n\t\t\t\t_logic.callbacks.onSave();\n\t\t\t})\n\t\t\t.catch(function(err){\n\t\t\t\tList.hideProgress();\t// hide the spinner\n\t\t\t\tButtonSave.enable();\t// enable the save button\n\n\t\t\t\t// display some error to the user:\n\t\t\t\tOP.Error.log('Error trying to save our Object', {error:err});\n\t\t\t})\n\t\t},\n\n\n\t\tcallbacks:{\n\t\t\tonCancel: function() { console.warn('NO onCancel()!') },\n\t\t\tonSave  : function(field) { console.warn('NO onSave()!') },\n\t\t},\n\n\n\t\thide:function() {\n\t\t\t$$(ids.component).hide();\n\t\t},\n\n\n\t\tobjectLoad: function(object) {\n\t\t\t_currentObject = object;\n\n\t\t\t// clear our list\n\t\t\tvar List = $$(ids.list);\n\t\t\tList.clearAll();\n\n\n\t\t\t// refresh list with new set of fields\n\t\t\tvar allFields = _currentObject.fields();\n\t\t\tvar listFields = [];\n\t\t\tallFields.forEach((f) => {\n\t\t\t\tlistFields.push({\n\t\t\t\t\tid: f.name,\n\t\t\t\t\tlabel: f.label\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tList.parse(allFields);\n\t\t},\n\n\n\t\tonItemClick: function(id, e, node) {\n\n\t\t\tvar selectedItem = $$(ids.list).getItem(id);\n\n\t\t\tvar labelFormat = $$(ids.format).getValue();\n\t\t\tlabelFormat += '{{0}}'.replace('{0}', selectedItem.label);\n\n\t\t\t$$(ids.format).setValue(labelFormat);\n\t\t},\n\n\n\t\tonShow: function() {\n\n\t\t\t\tvar labelFormat = _currentObject.labelFormat;\n\n\t\t\t\tvar Format = $$(ids.format);\n\t\t\t\tvar List = $$(ids.list);\n\n\t\t\t\tFormat.setValue('');\n\n\t\t\t\tFormat.enable();\n\t\t\t\tList.enable();\n\t\t\t\t$$(ids.buttonSave).enable();\n\n\n\t\t\t\t// our labelFormat should be in a computer friendly {name} format\n\t\t\t\t// here we want to convert it to a user friendly {label} format\n\t\t\t\t// to use in our popup:\n\t\t\t\tif (labelFormat) {\n\t\t\t\t\tif (List.data && List.data.count() > 0) {\n\t\t\t\t\t\tList.data.each(function (d) {\n\t\t\t\t\t\t\tlabelFormat = labelFormat.replace('{' + d.id + '}', '{' + d.label + '}');\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse { \n\t\t\t\t\t// no label format:\n\t\t\t\t\t// Default to first field\n\t\t\t\t\tif (List.data && List.data.count() > 0) {\n\t\t\t\t\t\tvar field = List.getItem(List.getFirstId());\n\t\t\t\t\t\tlabelFormat = '{' + field.label + '}';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tFormat.setValue(labelFormat || '');\n\t\t},\n\n\n\t\t/**\n\t\t * @function show()\n\t\t *\n\t\t * Show this component.\n\t\t * @param {obj} $view  the webix.$view to hover the popup around.\n\t\t */\n\t\tshow:function($view) {\n\n\t\t\t$$(ids.component).show($view);\n\t\t}\n\n\t}\n\n\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\n\t}\n\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui:_ui,\t\t\t\t\t// {obj} \tthe webix ui definition for this component\n\t\tinit:_init,\t\t\t\t// {fn} \tinit() to setup this component  \n\t\tactions:_actions,\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\n\n\t\t// interface methods for parent component:\n\t\tobjectLoad: _logic.objectLoad,\n\n\n\t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n\t}\n\n})\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab_work_object_workspace_popupDefineLabel.js","\n/*\n * ab_work_object_workspace_popupHeaderEditMenu\n *\n * Manage the Add New Data Field popup.\n *\n */\n\n// import ABApplication from \"../classes/ABApplication\"\n// import ABFieldManager from \"../classes/ABFieldManager\"\n\n\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\nvar labels = {\n\n\tcomponent: {\n\n\t\thideField: L('ab.object.hideField', \"*Hide field\"),\n\t\tfilterField: L('ab.object.filterField', \"*Filter field\"),\n\t\tsortField: L('ab.object.sortField', \"*Sort field\"),\n\t\teditField: L('ab.object.editField', \"*Edit field\"),\n\t\tdeleteField: L('ab.object.deleteField', \"*Delete field\")\n\t}\n}\n\n\nvar idBase = 'ab_work_object_workspace_popupHeaderEditMenu';\nOP.Component.extend(idBase, function(App) {\n\n\tlabels.common = App.labels;\n\n\n\t// internal list of Webix IDs to reference our UI components.\n\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\t\t\n\t\tlist: App.unique(idBase + '_list')\n\t}\n\n\n\t// the list of options shown in the popup menu:\n\tvar menuItems = {\n\n\t\t// Normally all items are available\n\t\t'default': [\n\t\t\t{ command: labels.component.hideField, icon: \"fa-columns\" },\n\t\t\t{ command: labels.component.filterField, icon: \"fa-filter\" },\n\t\t\t{ command: labels.component.sortField, icon: \"fa-sort\" },\n\t\t\t{ command: labels.component.editField, icon: \"fa-pencil-square-o\" },\n\t\t\t{ command: labels.component.deleteField, icon: \"fa-trash\" }\n\t\t],\n\t\t// But for imported objects, edit & delete are disabled\n\t\t'imported': [\n\t\t\t{ command: labels.component.hideField, icon: \"fa-columns\" },\n\t\t\t{ command: labels.component.filterField, icon: \"fa-filter\" },\n\t\t\t{ command: labels.component.sortField, icon: \"fa-sort\" },\n\t\t\t//{ command: labels.editField, icon: \"fa-pencil-square-o\" },\n\t\t]\n\t};\n\n\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tview:\"popup\",\n\t\tid: ids.component,\n\t\tmodal: false,\n\t\tautoheight:true,\n\n\n\t\twidth: 180,\n\t\tbody: {\n\t\t\tid: ids.list,\n\t\t\tview: 'list',\n\t\t\tdatatype: \"json\",\n\t\t\tautoheight: true,\n\t\t\tselect: false,\n\t\t\ttemplate: \"<i class='fa #icon#' aria-hidden='true'></i> #command#\",\n\t\t\tdata: menuItems['default'],\t// start with the default set:\n\t\t\ton: {\n\t\t\t\t'onItemClick': function (timestamp, e, node) {\n\t\t\t\t\t_logic.onItemClick(timestamp, e, node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tvar CurrentObject = null;\n\n\n\t// Our init() function for setting up our UI\n\tvar _init = function(options) {\n\n\t\t// register our callbacks:\n\t\tfor(var c in _logic.callbacks) {\n\t\t\t_logic.callbacks[c] = options[c] || _logic.callbacks[c];\n\t\t}\n\n// $$(ids.editDefinitions).cells() // define the edit Definitions here.\n\t}\n\n\n\n\t// our internal business logic\n\tvar _logic = {\n\n\n\n\t\tcallbacks:{\n\t\t\t/**\n\t\t\t * @function onClick\n\t\t\t * report back which menu action was clicked.\n\t\t\t * possible actions: [ 'hide', 'filter', 'sort', 'edit', 'delete' ]\n\t\t\t */\n\t\t\tonClick: function(action) {  }\n\t\t},\n\n\n\n\t\thide:function() {\n\t\t\t$$(ids.component).hide();\n\t\t},\n\n\n\t\t/**\n\t\t * @function objectLoad\n\t\t * Ready the Popup according to the current object\n\t\t * @param {ABObject} object  the currently selected object.\n\t\t */\n\t\tobjectLoad: function(object) {\n\t\t\tCurrentObject = object;\n\n// TODO:\n// check if object is imported, if so, then switch the shown fields to the imported menu:\n\n\t\t\tvar listItems = menuItems['default'];\n// if (object.isImported) {\n// \tlistItems = menuItems['imported'];\n// }\n\t\t\tvar List = $$(ids.list);\n\t\t\tList.clearAll();\n\t\t\tList.parse(listItems);\n\t\t},\n\n\n\t\t/**\n\t\t * @function onItemClick\n\t\t * when an entry in our popup menu is selected, make sure our parent component is\n\t\t * alerted to the action requested.\n\t\t *\n\t\t * possible return action values: [ 'hide', 'filter', 'sort', 'edit', 'delete' ]\n\t\t *\n\t\t */\n\t\tonItemClick: function(timestamp, e, node) {\n\n\t\t\tvar action = null;\n\t\t\tvar menu = node.textContent.trim();\n\t\t\tswitch(menu) {\n\t\t\t\tcase labels.component.hideField:\n\t\t\t\t\taction = 'hide';\n\t\t\t\t\tbreak;\n\t\t\t\tcase labels.component.filterField:\n\t\t\t\t\taction = 'filter';\n\t\t\t\t\tbreak;\n\t\t\t\tcase labels.component.sortField:\n\t\t\t\t\taction = 'sort';\n\t\t\t\t\tbreak;\n\t\t\t\tcase labels.component.editField:\n\t\t\t\t\taction = 'edit';\n\t\t\t\t\tbreak;\n\t\t\t\tcase labels.component.deleteField:\n\t\t\t\t\taction = 'delete';\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t_logic.callbacks.onClick(action);\n\t\t},\n\n\n\t\t/**\n\t\t * @function show()\n\t\t *\n\t\t * Show this component.\n\t\t * @param {obj} $view  the webix.$view to hover the popup around.\n\t\t */\n\t\tshow:function($view) {\n\n\t\t\t$$(ids.component).show($view);\n\t\t}\n\n\t}\n\n\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\t\t// populateObjectPopupAddDataField: function(object) {\n\t\t// \t_currentObject = object;\n\t\t// }\n\n\t}\n\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui:_ui,\t\t\t\t\t// {obj} \tthe webix ui definition for this component\n\t\tinit:_init,\t\t\t\t// {fn} \tinit() to setup this component\n\t\tactions:_actions,\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\n\n\t\thide: _logic.hide,\n\t\tobjectLoad: _logic.objectLoad, \n\t\tshow:_logic.show,\t\t// function($view, field_id) \n\n\n\t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n\t}\n\n})\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab_work_object_workspace_popupHeaderEditMenu.js","\n/*\n * ab_work_object_workspace_popupHideFields\n *\n * Manage the Hide Fields popup.\n *\n */\n\nimport ABApplication from \"../classes/ABApplication\"\n\n\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\nvar labels = {\n\n\tcomponent: {\n\n\t\tshowAll: L('ab.visible_fields.showAll', \"*Show All\"),\n\t\thideAll: L('ab.visible_fields.hideAll', \"*Hide All\"),\n\t}\n}\n\n\nvar idBase = 'ab_work_object_workspace_popupHideFields';\nOP.Component.extend(idBase, function(App) {\n\n\tlabels.common = App.labels;\n\n\n\t// internal list of Webix IDs to reference our UI components\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\t\tlist: App.unique(idBase + \"_list\"),\n\t}\n\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tview:\"popup\",\n\t\tid: ids.component,\n\t\t// modal: true,\n\t\tautoheight:true,\n        body: {\n            rows: [\n                {\n                    cols: [\n                        {\n                            view: 'button',\n                            value: labels.component.showAll,\n                            click: function () {\n\t\t\t\t\t\t\t\t_logic.clickShowAll();\n                            }\n                        },\n                        {\n                            view: 'button',\n                            value: labels.component.hideAll,\n                            click: function () {\n\t\t\t\t\t\t\t\t_logic.clickHideAll()\n                            }\n                        }\n                    ]\n                },\n                {\n                    view: 'list',\n                    id: ids.list,\n                    autoheight: true,\n                    select: false,\n                    template: '<span style=\"min-width: 18px; display: inline-block;\"><i class=\"fa fa-circle ab-visible-field-icon\"></i>&nbsp;</span> #label#',\n                    on: {\n                        onItemClick: function (id, e, node) {\n\t\t\t\t\t\t\t_logic.listItemClick(id, e, node);\n                        }\n                    }\n                }\n            ]\n        },\n        on: {\n            onShow: function () {\n                _logic.iconsReset();\n            }\n        }\n    }\n\t\t\n\n\n\t// Our init() function for setting up our UI\n\tvar _init = function(options) {\n\n\t\t// register our callbacks:\n\t\tfor(var c in _logic.callbacks) {\n\t\t\t_logic.callbacks[c] = options[c] || _logic.callbacks[c];\n\t\t}\n\n\t}\n\n\n\tvar CurrentObject = null;\n\n\t// our internal business logic \n\tvar _logic = {\n\n\t\tcallbacks:{\n\n\t\t\t/**\n\t\t\t * @function onChange\n\t\t\t * called when we have made changes to the hidden field settings \n\t\t\t * of our Current Object.\n\t\t\t *\n\t\t\t * this is meant to alert our parent component to respond to the \n\t\t\t * change.\n\t\t\t */\n\t\t\tonChange:function(){}\n\t\t},\n\n\n\t\t/**\n\t\t * @function clickHideAll\n\t\t * the user clicked the [hide all] option.  So hide all our fields.\n\t\t */\n\t\tclickHideAll: function () {\n\n\t\t\t// create an array of all our field.id's:\n\t\t\tvar allFields = CurrentObject.fields();\n\t\t\tvar newHidden = [];\n\t\t\tallFields.forEach(function(f){\n\t\t\t\tnewHidden.push(f.id);\n\t\t\t})\n\n\t\t\t// store that\n\t\t\tCurrentObject.workspaceHiddenFields = newHidden;\n\t\t\tCurrentObject.save()\n\t\t\t.then(function(){\n\t\t\t\t_logic.iconsReset()\n\t\t\t\t_logic.callbacks.onChange()\n\t\t\t})\n\t\t\t.catch(function(err){\n\t\t\t\tOP.Error.log('Error trying to save workspaceHiddenFields', {error:err, fields:newHidden });\n\t\t\t})\n\t\t},\n\n\n\t\t/**\n\t\t * @function clickShowAll\n\t\t * the user clicked the [show all] option.  So show all our fields.\n\t\t */\n\t\tclickShowAll: function () {\n\n\t\t\t// store an empty array of hidden fields\n\t\t\tCurrentObject.workspaceHiddenFields = [];\n\t\t\tCurrentObject.save()\n\t\t\t.then(function(){\n\t\t\t\t_logic.iconsReset();\n\t\t\t\t_logic.callbacks.onChange()\n\t\t\t})\n\t\t\t.catch(function(err){\n\t\t\t\tOP.Error.log('Error trying to save workspaceHiddenFields', {error:err, fields:newHidden });\n\t\t\t})\n\t\t},\n\n\n\t\t/**\n\t\t * @function listItemClick\n\t\t * update the clicked field setting.\n\t\t */\n\t\tlistItemClick: function(id, e, node) {\n\t\t\tvar newFields = [];\n\t\t\tvar isHidden = CurrentObject.workspaceHiddenFields.filter((fID) => { return fID == id;}).length>0;\n\t\t\tif (isHidden) {\n\t\t\t\t// unhide this field\n\n\t\t\t\t// get remaining fields \n\t\t\t\tnewFields = CurrentObject.workspaceHiddenFields.filter((fID)=>{ return fID != id;});\n\n\t\t\t\t// find the icon and display it:\n\t\t\t\t_logic.iconShow(node);\n\n\t\t\t} else {\n\t\t\t\tnewFields = CurrentObject.workspaceHiddenFields;\n\t\t\t\tnewFields.push(id);\n\n\t\t\t\t_logic.iconHide(node);\n\t\t\t}\n\n\t\t\t// update our Object with current hidden fields\n\t\t\tCurrentObject.workspaceHiddenFields = newFields;\n\t\t\tCurrentObject.save()\n\t\t\t.then(function(){\n\t\t\t\t_logic.callbacks.onChange()\n\t\t\t})\n\t\t\t.catch(function(err){\n\t\t\t\tOP.Error.log('Error trying to save workspaceHiddenFields', {error:err, fields:newFields });\n\t\t\t})\n\t\t},\n\n\n\t\t/**\n\t\t * @function iconHide\n\t\t * Hide the icon for the given node\n\t\t * @param {DOM} node  the html dom node of the element that contains our icon\n\t\t */\n\t\ticonHide: function(node) {\n\t\t\tif (node) {\n\t\t\t\tnode.querySelector('.ab-visible-field-icon').style.visibility = \"hidden\";\n\t\t\t}\n\t\t}, \n\n\n\t\t/**\n\t\t * @function iconShow\n\t\t * Show the icon for the given node\n\t\t * @param {DOM} node  the html dom node of the element that contains our icon\n\t\t */\n\t\ticonShow: function(node) {\n\t\t\tif (node) {\n\t\t\t\tnode.querySelector('.ab-visible-field-icon').style.visibility = \"visible\";\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * @function iconsReset\n\t\t * Reset the icon displays according to the current values in our Object\n\t\t */\n\t\ticonsReset: function() {\n\n\t\t\tvar List = $$(ids.list);\n\n\t\t\t// for each item in the List\n\t\t\tvar id = List.getFirstId();\n\t\t\twhile(id) {\n\n\t\t\t\t// find it's HTML Node\n\t\t\t\tvar node = List.getItemNode(id);\n\n\t\t\t\t// if this item is not hidden, show it.\n\t\t\t\tif (CurrentObject.workspaceHiddenFields.indexOf(id) == -1) {\n\t\t\t\t\t_logic.iconShow(node);\n\t\t\t\t} else {\n\t\t\t\t\t// else hide it\n\t\t\t\t\t_logic.iconHide(node);\n\t\t\t\t}\n\n\t\t\t\t// next item\n\t\t\t\tid = List.getNextId(id);\n\t\t\t}\t\t\t\n\n\t\t},\n\n\n\t\t/**\n\t\t * @function objectLoad\n\t\t * Ready the Popup according to the current object\n\t\t * @param {ABObject} object  the currently selected object.\n\t\t */\n\t\tobjectLoad: function(object) {\n\t\t\tCurrentObject = object;\n\n\t\t\t// refresh list\n\t\t\tvar allFields = CurrentObject.fields();\n\t\t\tvar listFields = [];\n\t\t\tallFields.forEach((f) => {\n\t\t\t\tlistFields.push({\n\t\t\t\t\tid: f.id,\n\t\t\t\t\tlabel: f.label\n\t\t\t\t})\n\t\t\t})\n\n\t\t\t$$(ids.list).parse(allFields);\n\t\t}\n\t\t\n\t}\n\n\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\n\t}\n\n\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui:_ui,\t\t\t\t\t// {obj} \tthe webix ui definition for this component\n\t\tinit:_init,\t\t\t\t// {fn} \tinit() to setup this component  \n\t\tactions:_actions,\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\n\n\t\t// interface methods for parent component:\n\t\tobjectLoad: _logic.objectLoad,\n\n\n\t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n\t}\n\n})\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab_work_object_workspace_popupHideFields.js","\n/*\n * ab_work_object_workspace_popupNewDataField\n *\n * Manage the Add New Data Field popup.\n *\n */\n\nimport ABApplication from \"../classes/ABApplication\"\nimport ABFieldManager from \"../classes/ABFieldManager\"\n\n\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\nvar labels = {\n\n\tcomponent: {\n\n\t\tchooseType: L('ab.add_fields.chooseType', \"*Choose field type...\"),\n\t\tlabel: L('ab.add_fields.label', \"*Label\"),\n\t\taddNewField: L('ab.add_fields.addNewField', \"*Add Column\"),\n\n\n\t}\n}\n\n\nvar idBase = 'ab_work_object_workspace_popupNewDataField';\nOP.Component.extend(idBase, function(App) {\n\n\tlabels.common = App.labels;\n\n\n\t// internal list of Webix IDs to reference our UI components.\n\n\tvar ids = {\n\t\tcomponent: App.unique(idBase + '_component'),\n\t\ttypes: App.unique(idBase + '_types'),\n\t\teditDefinitions: App.unique(idBase+'_editDefinitions'),\n\n\t\tbuttonSave: App.unique(idBase+'_buttonSave'),\n\t\tbuttonCancel: App.unique(idBase+'_buttonCancel')\n\t}\n\n\n\n\t// Our webix UI definition:\n\tvar _ui = {\n\t\tview:\"popup\",\n\t\tid: ids.component,\n\t\tmodal: true,\n\t\tautoheight:true,\n\t\t// maxHeight: 420,\n\n// ready: function () {\n// \tconsole.error('ready() called!!!')\n// \t_logic.resetState();\n// },\n\n\t\tbody: {\n\t\t\tcss: 'ab-add-fields-popup',\n\t\t\tborderless: true,\n\t\t\trows: [\n\t\t\t\t{\n\t\t\t\t\tview: \"menu\",\n\t\t\t\t\tid: ids.types,\n\t\t\t\t\tdata: [{\n\t\t\t\t\t\tvalue: labels.component.chooseType,\n\t\t\t\t\t\tsubmenu: ['dataFieldsManager', '.getFieldMenuList()']\n\t\t\t\t\t}],\n\t\t\t\t\tclick: function (id, ev, node) {\n\t\t\t\t\t\t_logic.typeClick();\n\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t},\n\t\t\t\t\ton: {\n\t\t\t\t\t\tonMenuItemClick: function (id, ev, node) {\n\t\t\t\t\t\t\t_logic.onMenuItemClick(id);\n\t\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tview:'multiview',\n\t\t\t\t\tid: ids.editDefinitions,\n\t\t\t\t\t// NOTE: can't leave this an empty []. We redefine this value later.\n\t\t\t\t\tcells: [ { id:'del_me', view:'label', label:'edit definition here' } ]\n\t\t\t\t},\n\t\t\t\t{ height: 10 },\n\t\t\t\t{\n\t\t\t\t\tcols: [\n\t\t\t\t\t\t{ fillspace: true },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tview: \"button\",\n\t\t\t\t\t\t\tvalue: labels.common.cancel,\n\t\t\t\t\t\t\tcss: \"ab-cancel-button\",\n\t\t\t\t\t\t\tautowidth: true,\n\t\t\t\t\t\t\tclick: function () {\n\t\t\t\t\t\t\t\t_logic.buttonCancel();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tview: \"button\",\n\t\t\t\t\t\t\tid: ids.buttonSave,\n\t\t\t\t\t\t\tlabel: labels.component.addNewField,\n\t\t\t\t\t\t\tautowidth: true,\n\t\t\t\t\t\t\ttype: \"form\",\n\t\t\t\t\t\t\tclick: function () {\n\t\t\t\t\t\t\t\t_logic.buttonSave();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\ton: {\n\t\t\tonBeforeShow: function () {\n\t\t\t\t_logic.resetState();\n\t\t\t},\n\t\t\tonShow: function () {\n\t\t\t\t_logic.onShow();\n\t\t\t},\n\t\t\tonHide: function () {\n\t\t\t\t_logic.resetState();\n\t\t\t}\n\t\t}\n\t}\n\n\n\tvar _objectHash = {};\t\t// 'name' => ABFieldXXX object\n\tvar _componentHash = {};\t// 'name' => ABFieldXXX ui component\n\tvar _componentsByType = {}; // 'type' => ABFieldXXX ui component\n\tvar _currentEditor = null;\n\tvar _currentObject = null;\n\n\tvar defaultEditorComponent = null;\t// the default editor.\n\n\tvar _editField = null;\t\t// field instance being edited\n\n\t// Our init() function for setting up our UI\n\tvar _init = function(options) {\n\n\t\t// register our callbacks:\n\t\tfor(var c in _logic.callbacks) {\n\t\t\t_logic.callbacks[c] = options[c] || _logic.callbacks[c];\n\t\t}\n\n\n\t\tvar Fields = ABFieldManager.allFields();\n\n\n\t\t//// we need to load a submenu entry and an editor definition for each\n\t\t//// of our Fields\n\n\n\n\t\tvar submenus = [];\t// Create the submenus for our Data Fields:\n\t\tvar newEditorList = {\n\t\t\tid:ids.editDefinitions,\n\t\t\trows:[]\n\t\t}\n\n\t\tFields.forEach(function(F){\n\n\t\t\tvar menuName = F.defaults().menuName ;\n\t\t\tvar type = F.defaults().type;\n\n\t\t\t// add a submenu for the fields multilingual key\n\t\t\tsubmenus.push( menuName );\n\n\n\t\t\t// Add the Field's definition editor here:\n\t\t\tvar editorComponent = F.propertiesComponent(App);\n\t\t\tif (!defaultEditorComponent) {\n\t\t\t\tdefaultEditorComponent = editorComponent;\n\t\t\t}\n\t\t\tnewEditorList.rows.push(editorComponent.ui);\n\n\n\t\t\t_objectHash[ menuName ] = F;\n\t\t\t_componentHash[ menuName ] = editorComponent;\n\t\t\t_componentsByType[ type ]  = editorComponent;\n\n\t\t})\n\n\n\t\t// the submenu button has a placeholder we need to remove and update\n\t\t// with one that has all our submenus in it.\n\t\tvar firstID = $$(ids.types).getFirstId();\n\t\t$$(ids.types).updateItem(firstID, {\n\t\t\tvalue: labels.component.chooseType,\n\t\t\tsubmenu: submenus\n\t\t})\n\n\t\t// now remove the 'del_me' definition editor placeholder.\n\t\twebix.ui(newEditorList, $$(ids.editDefinitions));\n\n\n\t\tdefaultEditorComponent.show(); // show the default editor\n\t\t_currentEditor = defaultEditorComponent;\n\n\n\t\t// $$(ids.editDefinitions).show();\n\n// $$(ids.editDefinitions).cells() // define the edit Definitions here.\n\t}\n\n\n\n\t// our internal business logic\n\tvar _logic = {\n\n\n\t\tbuttonCancel:function() {\n\n\t\t\t_logic.resetState();\n\n\t\t\t// clear all editors:\n\t\t\tfor (var c in _componentHash) {\n\t\t\t\t_componentHash[c].clear();\n\t\t\t}\n\n\t\t\t// hide this popup.\n\t\t\t$$(ids.component).hide();\n\t\t},\n\n\n\t\tbuttonSave:function() {\n\n\t\t\t$$(ids.buttonSave).disable();\n\n\n\t\t\tvar editor = _currentEditor;\n\t\t\tif (editor) {\n\n\t\t\t\t// the editor can define some basic form validations.\n\t\t\t\tif (editor.isValid()) {\n\n\t\t\t\t\tvar values = editor.values();\n\n\t\t\t\t\tvar field = null;\n\t\t\t\t\tvar oldData = null;\n\n\t\t\t\t\t// if this is an ADD operation, (_editField will be undefined)\n\t\t\t\t\tif (!_editField) {\n\n\t\t\t\t\t\t// get a new instance of a field:\n\t\t\t\t\t\tfield = _currentObject.fieldNew(values);\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// use our _editField, backup our oldData\n\t\t\t\t\t\toldData = _editField.toObj();\n\t\t\t\t\t\t_editField.fromValues(values);\n\n\t\t\t\t\t\tfield = _editField;\n\t\t\t\t\t}\n\n\n\t\t\t\t\tvar errors = field.isValid();\n\t\t\t\t\tif (errors) {\n\t\t\t\t\t\tOP.Form.isValidationError(errors, $$(editor.ui.id));\n\n\t\t\t\t\t\t// keep our old data\n\t\t\t\t\t\tif (oldData) {\n\t\t\t\t\t\t\tfield.fromValues(oldData);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$$(ids.buttonSave).enable();\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfield.save()\n\t\t\t\t\t\t.then(()=>{\n\n\t\t\t\t\t\t\t$$(ids.buttonSave).enable();\n\t\t\t\t\t\t\t_logic.hide();\n\t\t\t\t\t\t\t_currentEditor.clear();\n\t\t\t\t\t\t\t_logic.callbacks.onSave(field)\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\t$$(ids.buttonSave).enable();\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\t\t\t\t\t$$(ids.buttonSave).enable();\n\t\t\t\t}\n\n\t\t\t}  else {\n\n\t\t\t\tOP.Dialog.Alert({\n\t\t\t\t\ttitle: '! Could not find the current editor.',\n\t\t\t\t\ttext: 'go tell a developer about this.'\n\t\t\t\t})\n\t\t\t\t$$(ids.buttonSave).enable();\n\t\t\t}\n\n// if (!inputValidator.validateFormat(fieldInfo.name)) {\n// \tself.enable();\n// \treturn;\n// }\n\n// // Validate duplicate field name\n// var existsColumn = $.grep(dataTable.config.columns, function (c) { return c.id == fieldInfo.name.replace(/ /g, '_'); });\n// if (existsColumn && existsColumn.length > 0 && !data.editFieldId) {\n// \twebix.alert({\n// \t\ttitle: labels.add_fields.duplicateFieldTitle,\n// \t\ttext: labels.add_fields.duplicateFieldDescription,\n// \t\tok: labels.common.ok\n// \t});\n// \tthis.enable();\n// \treturn;\n// }\n\n// if (fieldInfo.weight == null)\n// \tfieldInfo.weight = dataTable.config.columns.length;\n\n// // Call callback function\n// if (base.saveFieldCallback && base.fieldName) {\n// \tbase.saveFieldCallback(base.fieldName, fieldInfo)\n// \t\t.then(function () {\n// \t\t\tself.enable();\n// \t\t\tbase.resetState();\n// \t\t\tbase.hide();\n// \t\t});\n// }\n\n\n\t\t},\n\n\n\t\tcallbacks:{\n\t\t\tonCancel: function() { console.warn('NO onCancel()!') },\n\t\t\tonSave  : function(field) { console.warn('NO onSave()!') },\n\t\t},\n\n\n\n\t\thide:function() {\n\t\t\t$$(ids.component).hide();\n\t\t},\n\n\n\n\t\tmodeAdd:function() {\n\n\t\t\t// show default editor:\n\t\t\tdefaultEditorComponent.show();\n\t\t\t_currentEditor = defaultEditorComponent;\n\n\t\t\t// show the ability to switch data types\n\t\t\t$$(ids.types).show();\n\n\t\t\t// change button text to 'add'\n\t\t\t$$(ids.buttonSave).define('label', labels.component.addNewField);\n\t\t\t$$(ids.buttonSave).refresh();\n\t\t},\n\n\n\t\tmodeEdit: function(field) {\n\n\t\t\t// switch to this field's editor:\n\t\t\t// hide the rest\n\t\t\tfor(var c in _componentsByType) {\n\t\t\t\tif (c == field.type) {\n\t\t\t\t\t_componentsByType[c].populate(field);\n\t\t\t\t\t_componentsByType[c].show();\n\t\t\t\t} else {\n\t\t\t\t\t_componentsByType[c].hide();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// hide the ability to switch data types\n\t\t\t$$(ids.types).hide();\n\n\t\t\t// change button text to 'save'\n\t\t\t$$(ids.buttonSave).define('label', labels.common.save);\n\t\t\t$$(ids.buttonSave).refresh();\n\t\t},\n\n\n\t\t/**\n\t\t * @function onMenuItemClick\n\t\t * swap the editor view to match the data field selected in the menu.\n\t\t *\n\t\t * @param {string} name  the menuName() of the submenu that was selected.\n\t\t */\n\t\tonMenuItemClick: function (name) {\n\n\t\t\t// note, the submenu returns the Field.menuName() values.\n\t\t\t// we use that to lookup the Field here:\n\t\t\tvar editor = _componentHash[name];\n\t\t\tif (editor) {\n\t\t\t\teditor.show();\n\t\t\t\t_currentEditor = editor;\n\t\t\t} else {\n\n\t\t\t\t// most likely they clicked on the menu button itself.\n\t\t\t\t// do nothing.\n\n\t\t\t\t// OP.Error.log(\"App Builder:Workspace:Object:NewDataField: could not find editor for submenu item:\"+name, { name:name });\n\t\t\t}\n\n\t\t},\n\n\n\n\t\tonShow: function() {\n\t\t\t// if (!AD.comm.isServerReady()) {\n\t\t\t// \tthis.getTopParentView().hide();\n\n\t\t\t// \twebix.alert({\n\t\t\t// \t\ttitle: labels.add_fields.cannotUpdateFields,\n\t\t\t// \t\ttext: labels.add_fields.waitRestructureObjects,\n\t\t\t// \t\tok: labels.common.ok\n\t\t\t// \t});\n\t\t\t// }\n\t\t\t// else { // Set default field type\n\t\t\t// \tthis.showFieldData('string');\n\t\t\t// }\nconsole.error('TODO: onShow();')\n\t\t},\n\n\n\n\t\tresetState: function() {\n\n\t\t\t// add mode :  change button text to 'Add'\n\t\t\t// show the default editor\nconsole.error('TODO: resetState()');\n\t\t},\n\n\n\n\t\t/**\n\t\t * @function show()\n\t\t *\n\t\t * Show this component.\n\t\t * @param {obj} $view  the webix.$view to hover the popup around.\n\t\t * @param {ABField} field the ABField to edit.  If not provided, then\n\t\t *\t\t\t\t\t\t  this is an ADD operation.\n\t\t */\n\t\tshow:function($view, field) {\n\n\t\t\t_editField = field;\n\t\t\t\n\t\t\tif (_editField) {\n\n\t\t\t\t_logic.modeEdit(field);\n\n\t\t\t} else {\n\n\t\t\t\t_logic.modeAdd();\n\n\t\t\t}\n\n\t\t\t$$(ids.component).show($view);\n\t\t},\n\n\n\n\t\ttypeClick:function() {\n\t\t\t// NOTE: for functional testing we need a way to display the submenu\n\t\t\t// (functional tests don't do .hover very well)\n\t\t\t// so this routine is to enable .click() to show the submenu.\n\n\t\t\tvar subMenuId = $$(ids.types).config.data[0].submenu;\n\n\t\t\t// #HACK Sub-menu popup does not render on initial\n\t\t\t// Force it to render popup by use .getSubMenu()\n\t\t\tif (typeof subMenuId != 'string') {\n\t\t\t\t$$(ids.types).getSubMenu($$(ids.types).config.data[0].id);\n\t\t\t\tsubMenuId = $$(ids.types).config.data[0].submenu;\n\t\t\t}\n\n\t\t\tif ($$(subMenuId))\n\t\t\t\t$$(subMenuId).show();\n\t\t}\n\t}\n\n\n\n\t// Expose any globally accessible Actions:\n\tvar _actions = {\n\n\t\tpopulateObjectPopupAddDataField: function(object) {\n\t\t\t_currentObject = object;\n\t\t}\n\n\t}\n\n\n\t// return the current instance of this component:\n\treturn {\n\t\tui:_ui,\t\t\t\t\t// {obj} \tthe webix ui definition for this component\n\t\tinit:_init,\t\t\t\t// {fn} \tinit() to setup this component\n\t\tactions:_actions,\t\t// {ob}\t\thash of fn() to expose so other components can access.\n\n\n\t\tshow:_logic.show,\t\t// {fn} \tfn(node, ABField)\n\n\n\t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n\t}\n\n})\n\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/components/ab_work_object_workspace_popupNewDataField.js","//\n// REFACTORING:\n//\n// Our goal here is to create a Model object that will interact with Sails' blueprints and \n// return native Webix DataCollections.\n//\n// We also want to listen for updates on Sails Sockets and notify the DataCollections.\n//\n// Until we have the refactoring in place, we will reuse the AD.Model.extent() objects,\n// and convert the results to DataCollections.\n//\n\n\n\n// Namespacing conventions:\n// OP.Model.extend('[application].[Model]', {static}, {instance} );  --> Object\nOP.Model.extend('opstools.BuildApp.ABApplication',\n\t{\n\t\tuseSockets: true,\n\t\trestURL: '/app_builder/abapplication'\n\t},\n\t{\n\t\t// instance Methods\n\t}\n);\n\t\t\n\t\t\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/data/ABApplication.js","\n/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\nvar labels = {\n\n\tcomponent: {\n\t\t// formHeader: L('ab.application.form.header', \"*Application Info\"),\n\t}\n}\n\n\nvar ComponentKey = 'ab_custom_editlist';\nOP.CustomComponent.extend(ComponentKey, function(App, componentKey ) {\n\t// App \t{obj}\tour application instance object.\n\t// componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique('custom_editlist_component'),\n\n\t}\n\n\n\n\t// Our webix UI definition:\n\tvar _ui = {\n        name: App.unique(\"custom_editlist\")\t// keep this unique for this App instance.\n    };\n\n\n\n\n\n\t// our internal business logic \n\tvar _logic = {\n\n\t}\n\n\n\n\t// Tell Webix to create an INSTANCE of our custom component:\n    webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n\n\n    // current definition of our Component \n    var Component = {\n\t\tview: _ui.name,\t\t\t// {string} the webix.view value for this custom component\n\n\t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n\t}\n\n\n\t// Save our definition into App.custom.[key]\n    App.custom = App.custom || {};\n    App.custom[componentKey] = Component;\n\n\n\t// return the current definition of this component:\n\treturn Component;\n\n})\n\n\n// After importing this custom component, you get back the .key to use to \n// lookup the OP.Component[] to create an application instance of \nexport default { key: ComponentKey };\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/webix_custom_components/editlist.js","\n/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\n\nfunction L(key, altText) {\n\treturn AD.lang.label.getLabel(key) || altText;\n}\n\n\nvar labels = {\n\n\tcomponent: {\n\t\t// formHeader: L('ab.application.form.header', \"*Application Info\"),\n\t}\n}\n\n\nvar ComponentKey = 'ab_custom_edittree';\nOP.CustomComponent.extend(ComponentKey, function(App, componentKey ) {\n\t// App \t{obj}\tour application instance object.\n\t// componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n\n\tlabels.common = App.labels;\n\n\t// internal list of Webix IDs to reference our UI components.\n\tvar ids = {\n\t\tcomponent: App.unique('custom_edittree_component'),\n\n\t}\n\n\n\n\t// Our webix Prototype definition:\n\tvar _ui = {\n        name: App.unique(\"custom_edittree\")\t// keep this unique for this App instance.\n    };\n\n\n\n\t// our internal business logic \n\tvar _logic = {\n\n\t}\n\n\n\n\t// Tell Webix to create an INSTANCE of our custom component:\n    webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n\n\n    // current definition of our Component \n    var Component = {\n\t\tview: _ui.name,\t\t\t// {string} the webix.view value for this custom component\n\n\t\t_logic: _logic\t\t\t// {obj} \tUnit Testing\n\t}\n\n\n\t// Save our definition into App.custom.[key]\n    App.custom = App.custom || {};\n    App.custom[componentKey] = Component;\n\n\n\t// return the current definition of this component:\n\treturn Component;\n\n})\n\n\n// After importing this custom component, you get back the .key to use to \n// lookup the OP.Component[] to create an application instance of \nexport default { key: ComponentKey };\n\n\n// WEBPACK FOOTER //\n// ./assets/opstools/AppBuilder/webix_custom_components/edittree.js","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/css-loader/lib/css-base.js","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/style-loader/fixUrls.js","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".webix_view, .webix_el_colorpicker input, .webix_el_combo input, .webix_el_datepicker input, .webix_el_search input, .webix_el_text input, .webix_control button, .webix_control input, .webix_control textarea, .webix_el_label, .webix_inp_bottom_label, .webix_inp_label, .webix_inp_top_label {\\n\\tfont-family: \\\"Helvetica Neue\\\",Helvetica,Arial,sans-serif !important;\\n}\\n.ab-generated-page {\\n\\toverflow-y: auto;\\n}\\n.ab-main-container {\\n\\tposition: relative;\\n\\tdisplay: block;\\n\\twidth: 100%;\\n\\tbackground: -moz-linear-gradient(top, rgba(0,0,0,0.2) 0%, rgba(0,0,0,0) 100%); /* FF3.6-15 */\\n\\tbackground: -webkit-linear-gradient(top, rgba(0,0,0,0.2) 0%,rgba(0,0,0,0) 100%); /* Chrome10-25,Safari5.1-6 */\\n\\tbackground: linear-gradient(to bottom, rgba(0,0,0,0.2) 0%,rgba(0,0,0,0) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\n}\\n.ab-main-container .pointer {\\n\\tcursor: pointer;\\n}\\n.ab-main-container .right {\\n\\ttext-align: right;\\n}\\n.ab-main-container .center {\\n\\ttext-align: center;\\n}\\n.ab-main-container .left {\\n\\ttext-align: left;\\n}\\n.ab-text-bold {\\n\\tfont-weight: bold !important;\\n}\\n.ab-scroll-y {\\n\\toverflow-y: auto !important;\\n}\\n.ab-ellipses-text, .ab-ellipses-text > div {\\n\\toverflow: hidden;\\n\\twhite-space: nowrap;\\n\\ttext-overflow: ellipsis;\\n}\\n.float-left {\\n\\tfloat: left;\\n}\\n.float-right {\\n\\tfloat: right;\\n}\\n\\n/* Webix icon */\\n.ab-main-container .webix_icon {\\n\\tline-height: inherit;\\n}\\n\\n/* Fix overflow-x */\\n.ab-generated-page .webix_scroll_cont {\\n\\toverflow: auto !important;\\n}\\n\\n/* == Webix datatable == */\\n/* Checkbox column */\\n.ab-main-container .webix_hcell.center input[type=checkbox] {\\n\\twidth:20px;\\n\\theight:20px;\\n\\tmargin-top:12px;\\n  }\\n.ab-main-container .webix_table_checkbox {\\n\\twidth:20px;\\n\\theight:20px;\\n\\tmargin-top:5px;\\n}\\n/* Last column */\\n.ab-main-container .webix_column.webix_last > div,\\n.ab-main-container .webix_hs_center td.webix_last,\\n.ab-main-container .ab-app-list-descriptionwebix_hs_right td.webix_last {\\n\\tborder-right-width: 1px !important;\\n}\\n/* No padding/margin column */\\n.ab-column-no-padding div {\\n\\tpadding: 0px !important;\\n\\tmargin: 0px !important;\\n}\\n.ab-main-container .ab-cell-warn {\\n\\tbackground-color: #F5AE0F !important;\\n}\\n\\n/* Webix selected item */\\n.webix_list_item.webix_selected,\\n.webix_column>div.webix_cell_select,\\n.webix_column>div.webix_column_select,\\n.webix_column>div.webix_row_select {\\n\\tbackground-color: #3498db !important;\\n}\\n\\n/* Webix message */\\n.webix_success {\\n  background-color: #BFF2BF;\\n}\\n.webix_success div {\\n  background-color: #BFF2BF;\\n  border: 1px solid #007A00;\\n  color: #000;\\n}\\n\\n/* Webix list */\\n.ab-main-container .webix_list_item .webix_selected,\\n.ab-main-container .webix_tree_item.webix_selected {\\n\\tcolor: #fff !important;\\n\\tbackground-color: #3498db !important;\\n}\\n.ab-app-form-permission .webix_selected {\\n\\tcolor: #333 !important;\\n\\tbackground-color: transparent !important;\\n}\\n\\n/* Webix toolbar */\\n.ab-toolbar-submenu, .ab-toolbar-submenu .webix_header>div {\\n\\tbackground: #EEE !important;\\n\\tcolor: #666 !important;\\n\\tfont-size: 15px !important;\\n\\tfont-weight: bold !important;\\n\\tborder-bottom: 0px !important;\\n}\\n\\n/* Webix segmented */\\n.ab-form-component-item .webix_segment_0.webix_selected,\\n.ab-form-component-item .webix_segment_1.webix_selected,\\n.ab-form-component-item .webix_segment_N.webix_selected,\\n.ab-component-view-edit-field .webix_segment_0.webix_selected,\\n.ab-component-view-edit-field .webix_segment_1.webix_selected,\\n.ab-component-view-edit-field .webix_segment_N.webix_selected {\\n\\tcolor: #fff !important;\\n\\tbackground-color: #3498db !important;\\n}\\n\\n.ab-form-component-item .webix_segment_0,\\n.ab-form-component-item .webix_segment_1,\\n.ab-form-component-item .webix_segment_N,\\n.ab-component-view-edit-field .webix_segment_0,\\n.ab-component-view-edit-field .webix_segment_1,\\n.ab-component-view-edit-field .webix_segment_N {\\n\\tcolor: #3498db;\\n\\tbackground: #fff;\\n}\\n\\n/* Add new columns popup */\\n.ab-add-fields-popup {\\n\\toverflow-y: auto;\\n}\\n\\n/* Application list */\\n.ab-app-list {\\n/*\\n\\tmin-height: 300px;\\n\\tpadding: 40px 100px;\\n*/\\n}\\n.ab-app-select-list .webix_selected {\\n\\tbackground-color: #FFF !important;\\n\\tcolor: #333 !important;\\n}\\n.ab-app-select-list .webix_list_item:hover {\\n\\tbackground: #ebebeb;\\n}\\n.ab-app-list-item {\\n\\tposition: relative;\\n\\theight: 100%;\\n\\tmargin: -2px -10px;\\n\\tpadding: 15px;\\n\\tline-height: 20px;\\n}\\ndiv[view_id='ab-app-list'] div.webix_list_item:hover,\\ndiv[view_id='ab-object-list'] div.webix_list_item:hover,\\ndiv[view_id='ab-object-list-menu'] div.webix_list_item:hover,\\ndiv[view_id='ab-new-connectObject-list-item'] div.webix_list_item:hover,\\ndiv[view_id='ab-edit-header-items'] div.webix_list_item:hover,\\ndiv[view_id='ab-frozen-field-list'] div.webix_list_item:hover {\\n\\tbackground-color: #eee;\\n}\\n.ab-app-list-name {\\n\\tfont-size: large;\\n}\\n.ab-app-list-description {\\n\\tcolor: #999;\\n\\tfont-size: small;\\n}\\n.ab-app-list-info {\\n\\twidth: 95%;\\n\\tdisplay: inline-block;\\n}\\n.ab-app-list-edit {\\n\\tposition: absolute;\\n\\ttop: 0;\\n\\tright: 10px;\\n\\topacity: 0.4;\\n\\tline-height: 70px;\\n\\theight: 70px;\\n}\\n.ab-app-list-edit:hover {\\n\\topacity: 1;\\n}\\n\\n/* Application workspace */\\n.ab-app-workspace {\\n\\t/*min-height: 100px;*/\\n}\\n.ab-unsync-data-warning {\\n\\tcursor: pointer;\\n    color: #fff;\\n    background-color: #F5962F;\\n    border: #fff dotted 1px !important;\\n    padding-left: 2px;\\n}\\n.ab-unsync-data-popup .webix_win_head {\\n\\tbackground-color: #F5962F;\\n}\\n.ab-unsync-data-popup .webix_win_head .header {\\n\\tpadding-left: 5px;\\n\\tfont-weight: bold;\\n    color: #fff;\\n}\\n.ab-unsync-data-status {\\n\\tpadding: 3px;\\n}\\n.ab-unsync-data-in-progress {\\n\\tbackground-color: #F5AE0F;\\n}\\n.ab-unsync-data-done {\\n\\tbackground-color: #3AB349;\\n}\\n.ab-unsync-data-error {\\n\\tbackground-color: #EC2F2F;\\n}\\n\\n/* Object list */\\n.ab-object-list-item {\\n\\tposition: relative;\\n\\theight: 100%;\\n}\\n.ab-object-list-edit {\\n\\tposition: absolute;\\n\\ttop: 0px;\\n\\tright: 5px;\\n\\tdisplay: none;\\n}\\n.ab-object-unsync {\\n\\tbackground-color: #d2e3ef;\\n\\tcolor: #4a4a4a;\\n\\tposition: absolute;\\n\\ttop: 4px;\\n\\tright: 30px;\\n\\tfont-size: 12px;\\n\\tborder-radius: 6px;\\n\\tpadding: 0px 4px;\\n\\theight: 20px;\\n\\tline-height: 20px;\\n\\tdisplay: none;\\n}\\n\\n/* Interface list */\\n.ab-page-list-item {\\n\\tposition: relative;\\n\\theight: 100%;\\n}\\n.ab-page-list-edit {\\n\\tposition: absolute;\\n\\ttop: 0px;\\n\\tright: 5px;\\n\\tdisplay: none;\\n\\tcursor: pointer;\\n}\\n\\n/* Object datatable */\\n.ab-object-data-header {\\n\\tposition: relative;\\n}\\n.ab-object-data-new-header {\\n\\tbackground-color: #cfd9e0;\\n}\\n\\n.ab-object-data-header-edit {\\n\\tdisplay: none;\\n\\tposition: absolute;\\n\\ttop: 15px;\\n\\tright: 10px;\\n}\\n.ab-object-data-header:hover .ab-object-data-header-edit {\\n\\tdisplay: block;\\n}\\n.ab-object-unsync-data {\\n\\tbackground-color: #dae6fb;\\n}\\n.ab-object-view-column {\\n\\tcolor: #3498db;\\n\\tfont-weight: bold;\\n\\ttext-align: center;\\n\\tcursor: pointer;\\n}\\n\\n/* Connect object data */\\n.ab-connect-data-info {\\n\\tdisplay: inline-block;\\n\\twidth: 90px;\\n\\twhite-space: nowrap;\\n\\toverflow: hidden;\\n\\ttext-overflow: ellipsis;\\n}\\n\\n.ab-connect-data-disable {\\n\\tbackground-color: #aaa;\\n}\\n\\n/* Custom selectivity */\\n.ab-main-container .selectivity-multiple-input-container {\\n\\tbackground: none !important;\\n\\tpadding: 0px !important;\\n\\toverflow: hidden !important;\\n\\tmax-height: 100% !important;\\n}\\n.ab-main-container .selectivity-multiple-selected-item {\\n\\tbackground: #3498db !important;\\n\\tpadding-right: 5px;\\n\\t/*max-width: 100px !important;*/\\n}\\n\\n/* Interface tree view */\\n.ab-main-container .webix_tree_item.webix_selected span {\\n\\tpadding: 0px;\\n\\tbackground: #3498db !important;\\n}\\n\\n/* Interface new page popup */\\n.ab-interface-new-quick-page {\\n    overflow: scroll !important;\\n\\toverflow-x: hidden !important;\\n\\toverflow-y: auto !important;\\n}\\n\\n.ab-interface-new-quick-page .webix_inp_checkbox_border label {\\n\\tfont-weight: normal; /* Override bootstrap*/\\n}\\n\\n/* Interface page layout */\\n.ab-component-drop-area {\\n\\tmargin-right: 2px;\\n\\tborder: 1px dashed #000 !important;\\n\\tbackground-color: #D3E9EF;\\n\\tbackground-image:url(\\\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' height='30px' width='90px'><text x='20' y='20' fill='#95CBEF' font-size='15'>Drop Here</text></svg>\\\");\\n}\\n\\ndiv[view_id='ab-interface-layout-page'] .webix_list_item,\\n.ab-component-in-page {\\n\\twidth: 100%;\\n\\tposition: relative;\\n\\tbackground-color: #fff;\\n\\tclear: both;\\n}\\n\\n.ab-component-item-name {\\n\\tfloat: left;\\n\\tfont-size: 18px;\\n\\tborder-right: 1px solid #ebebeb;\\n\\tvertical-align: top;\\n\\tpadding-top: 10px;\\n\\twidth: 90px;\\n\\tmargin-bottom: -500em; /* CSS hack: equal height of right float */\\n\\tpadding-bottom: 500em;\\n}\\n\\n.ab-component-item-display {\\n\\tfloat: right;\\n\\tvertical-align: top;\\n\\tpadding: 10px;\\n\\twidth: 87%;\\n\\tline-height: 100%;\\n\\toverflow-x: auto;\\n}\\n\\n.ab-component-remove {\\n\\tposition: absolute;\\n\\ttop: 5px;\\n\\tright: 1px;\\n}\\n\\n.ab-component-link {\\n\\tcolor: #003B7E;\\n\\ttext-decoration: underline;\\n\\tcursor: pointer;\\n}\\n\\n/* Interface component list */\\n.ab-component-item-drag {\\n\\tborder: 1px dotted #000 !important;\\n\\tfont-size: 35px;\\n\\tbackground-color: #fff;\\n}\\n\\n/* Header component */\\n.ab-component-header {\\n\\tfont-size: 25px;\\n\\tfont-weight: bold;\\n\\tmargin: 0px;\\n\\tpadding: 0px;\\n}\\n.ab-component-description {\\n\\tfont-size: 14px;\\n\\tpadding: 0px;\\n}\\n\\n/* Menu component */\\n.ab-page-list-item .webix_tree_checkbox {\\n\\tmargin: 0px !important;\\n}\\n\\n/* Object toolbar */\\n.ab-data-toolbar {\\n\\tbackground: #aaa !important;\\n}\\n.ab-data-toolbar button {\\n\\ttext-align: center;\\n\\tfont-size: 14px;\\n}\\n.ab-data-toolbar button:hover, .ab-data-toolbar button:active {\\n\\tbackground: #aaa !important;\\n}\\n.ab-data-toolbar button .webix_icon_btn {\\n\\topacity: 0.6;\\n\\tfont-size: 15px;\\n}\\n.ab-data-toolbar button:hover .webix_icon_btn {\\n\\topacity: 1;\\n}\\n\\n/* Grid component */\\n.ab-page-grid-column-item .column-checkbox {\\n\\tdisplay: inline-block;\\n\\tposition: relative;\\n\\ttop: -5px;\\n\\twidth: 30px;\\n}\\n\\n.ab-page-grid-column-item .column-empty-checkbox {\\n\\tposition: relative;\\n\\twidth: 50px;\\n\\theight: 38px;\\n}\\n\\n.ab-page-grid-column-item .column-name {\\n\\tdisplay: inline-block;\\n\\tposition: relative;\\n\\ttop: -18px;\\n}\\n\\n/* Form component */\\n.ab-standard-button button, .ab-standard-button button:hover, .ab-standard-button button:active, .ab-standard-button .webix_icon_btn {\\n\\tbackground: transparent !important;\\n\\tborder-color: transparent !important;\\n\\tcolor: #666 !important;\\n\\tbox-shadow: none !important;\\n}\\n.ab-cancel-button button {\\n\\tbackground: transparent !important;\\n\\tcolor: #AAA;\\n\\tborder-color: transparent;\\n}\\n.ab-cancel-button button:hover {\\n\\ttext-decoration: underline;\\n}\\n.ab-cancel-button button:active {\\n\\tbox-shadow: none;\\n}\\n.ab-form-connect-data {\\n\\tfloat: left;\\n\\tborder: #CCC solid 1px;\\n\\tpadding: 0px 5px;\\n\\tmin-width: 70%;\\n\\tborder-radius: 6px;\\n}\\n\\n.ab-main-container .webix_layout_form {\\n\\tbackground-color: #fff !important;\\n}\\n\\n/* Loading Screen */\\n.ab-loading-screen {\\n\\tbackground: #000;\\n\\topacity: 0.7;\\n\\tposition: absolute !important;\\n}\\n.ab-loading-body {\\n\\tbackground: #000;\\n\\tborder-width: 0px !important;\\n}\\n.ab-loading-message {\\n\\tcolor: #fff !important;\\n\\tbackground: #000 !important;\\n\\tfont-size: 30px !important;\\n\\ttext-align: center;\\n\\tvertical-align: middle;\\n\\tborder-width: 0px !important;\\n\\tpadding-top: 20% !important;\\n\\theight: 100px !important;\\n}\\n.ab-loading-button {\\n\\ttext-align: center;\\n}\\n.ab-loading-button button {\\n\\tbackground-color: #003B7E;\\n\\twidth: 200px;\\n}\\n.ab-loading-cancel-button {\\n\\ttext-align: center;\\n\\tbackground: transparent;\\n}\\n.ab-loading-cancel-button a {\\n\\tcolor: #fff !important;\\n}\\n.ab-loading-screen .webix_progress_bottom {\\n\\theight: 40px !important;\\n\\topacity: 1;\\n}\\n.ab-loading-screen .webix_progress_bottom .webix_progress_state {\\n\\theight: 40px !important;\\n}\\n\\n/* Dynamic DataTable */\\n.dynamic-datatable-view .webix_badge {\\n\\tmargin: 0 !important;\\n}\\n\\n/* Number data field */\\n.ab-number-format-show {\\n\\twhite-space: nowrap;\\n}\\n\\n/* Icon Picker */\\n.ab-main-container .iconpicker .iconpicker-items {\\n\\tcolor: #000;\\n}\\n\\n/* Webix Tabs */\\ndiv.webix_item_tab {\\n\\tfont-size: 16px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./assets/opstools/AppBuilder/AppBuilder.css\n// module id = 37\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\t// Test for IE <= 9 as proposed by Browserhacks\n\t\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t\t// Tests for existence of standard globals is to allow style-loader \n\t\t// to operate correctly into non-standard environments\n\t\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\t\treturn window && document && document.all && !window.atob;\n\t}),\n\tgetElement = (function(fn) {\n\t\tvar memo = {};\n\t\treturn function(selector) {\n\t\t\tif (typeof memo[selector] === \"undefined\") {\n\t\t\t\tmemo[selector] = fn.call(this, selector);\n\t\t\t}\n\t\t\treturn memo[selector]\n\t\t};\n\t})(function (styleTarget) {\n\t\treturn document.querySelector(styleTarget)\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [],\n\tfixUrls = require(\"./fixUrls\");\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n\tif (typeof options.insertInto === \"undefined\") options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar styleTarget = getElement(options.insertInto)\n\tif (!styleTarget) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\tstyleTarget.insertBefore(styleElement, styleTarget.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\tstyleTarget.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\tstyleTarget.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\tstyleTarget.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\toptions.attrs.type = \"text/css\";\n\n\tattachTagAttrs(styleElement, options.attrs);\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction createLinkElement(options) {\n\tvar linkElement = document.createElement(\"link\");\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\tattachTagAttrs(linkElement, options.attrs);\n\tinsertStyleElement(options, linkElement);\n\treturn linkElement;\n}\n\nfunction attachTagAttrs(element, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\telement.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else if(obj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\") {\n\t\tstyleElement = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, styleElement, options);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t\tif(styleElement.href)\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t};\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyleElement.setAttribute(\"media\", media)\n\t}\n\n\tif(styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink(linkElement, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/* If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls){\n\t\tcss = fixUrls(css);\n\t}\n\n\tif(sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = linkElement.href;\n\n\tlinkElement.href = URL.createObjectURL(blob);\n\n\tif(oldSrc)\n\t\tURL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/style-loader/addStyles.js\n// module id = 38\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!./AppBuilder.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!./AppBuilder.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!./AppBuilder.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/opstools/AppBuilder/AppBuilder.css\n// module id = 39\n// module chunks = 0"],"sourceRoot":""}